
- メニューの「棋譜編集」に棋譜のマージ追加。  
- なんかたまに分岐棋譜、棋譜ウインドウのへんなところにぶら下がる。もうちょっとチェックする。
- 盤面編集のときに再クリックで駒置けないようになってた。修正。


■　2020/01/28


- V1.3.9としてリリース。(形勢ダイアログがデバッグ中なので一般公開はせず)


- 表示設定ダイアログなど、最大化できるの防いでなかったのを修正。
  - captionのところダブルクリックで最大化できてた。
  - 検討ウインドウ、操作設定ダイアログなどすべて修正。
  cf. フォームを最大化、最小化できないようにする : https://dobon.net/vb/dotnet/form/preventmaximize.html
- 一つ前のcommitで表示設定ダイアログの項目ごとの間隔が広くしすぎたの修正。
- RichSelectorのGroupBoxのサイズの計算がおかしかったの修正。


- ミニ盤面のタブのところの文字フォントサイズ、フォントサイズの指定があったのを解除。
  - 表示設定で検討ウインドウのNPSとか表示されているところの文字フォントを変更できるように。
  →　よく見たら検討ウインドウのフォントは反映していて、フォントサイズが9pt固定になっているのか。ならここは変更できなくていいや。

- 表示設定でミニ盤面のタブのところの文字フォントも変更できるように。


- 文字のデフォルトフォントサイズ調整
  - 棋譜ウインドウの文字フォント 11pt -> 7pt
  - 検討ウインドウの文字フォント 11pt -> 9pt
  - ミニ盤面のボタンの文字フォント 13pt -> 9pt
  - 設定ダイアログ関連 11pt -> 9pt

- 設定ダイアログ
  - フォントサイズが大きいと文字の下部が断ち切れるのを修正。
    - RadioButton、動的にnewで生成していて、AutoSize = trueになってなかった。
  - 貼り付けてある画像の下部の境界線が見えてなかったのを修正。
    - GroupBoxの範囲がおかしかった。
  - テキストと画像が左端ぴったりになっていたの修正。
    - RichSelectorのデザイナで設定されたPictureBoxとRadioButtonのプロパティを引き継ぐコードを追加。

- VSのデザイナでのツールボックスからのドラッグを行うと「オブジェクト参照がオブジェクトのインスタンスに設定されていません。」と
  　表示されるようになった。VSのcacheの問題なのか何なのかよくわからない。以下の方法で回避はできた。
  https://tutorialmore.com/questions-57057.htm
>  解決した方法 # 2
> ドラッグアンドドロップの代わりに、コントロールをクリックしてからフォームをクリックすることは、新しい更新が出るまで回避策です。
> これは、Visual Studio 2017バージョン15.8.6の新しい動作です。
> うまくいけば、これは私がやっているように何度もドラッグアンドドロップを続けていた他の人に役立つでしょう：-）


■　2020/01/27


- 検討ウインドウのレイアウトまわり、細かいところを調整その2
  - 一つ前のcommitで描画タイミングによってはレイアウト計算されなかったのを修正。


- 検討ウインドウのレイアウトまわり、細かいところを調整
  - 「着順」ボタンのサイズがおかしかったの修正。
  - テキストがテキストボックスに収まるように修正。
    // .NETのテキストボックスはMultiLineでないときは、フォントで自動的に高さが決まってしまう。
    // Form(Control)のAutoSizeをfalseにすれば回避できるが、すべきではない。
    AutoSizeをfalseを設定していたところをTrueに変更する。
  - 検討ウインドウで「着順」ボタンのサイズがおかしかったの修正。
  - 検討ウインドウのNPSなどが表示されるテキストボックス、上下に対してセンタリングする。
  - 検討ウインドウの読み筋が表示されるリストビュー、BottomにDockさせていたのNoneに変更。(くっついてるのが気持ち悪かったので)
  - 検討ウインドウの読み筋が表示されるリストビュー、上と左のマージンを考慮した位置に表示されるように変更。


- マルチディスプレイ対応の強化
  - メッセージダイアログをメインウィンドウが存在するほうのスクリーン(ディスプレイ)に表示させるようにした。
- AutoScaleMode.Dpiになっていなかった箇所を修正
  - まだ表示がおかしいところがある。あとでよく見直す。


- Visual Studio 2019にプロジェクトファイルを更新
- ドキュメント類、いくつか更新


- エンジン補助設定の"isready"に対する"readyok"応答時間の設定を削除
  cf. USIプロトコルでisready後の初期化に時間がかかる時にどうすれば良いのか？
      http://yaneuraou.yaneu.com/2020/01/05/usi%e3%83%97%e3%83%ad%e3%83%88%e3%82%b3%e3%83%ab%e3%81%a7isready%e5%be%8c%e3%81%ae%e5%88%9d%e6%9c%9f%e5%8c%96%e3%81%ab%e6%99%82%e9%96%93%e3%81%8c%e3%81%8b%e3%81%8b%e3%82%8b%e6%99%82%e3%81%ab%e3%81%a9/



- jnoryさんのプルリク(#63,#64)をマージ。

https://github.com/yaneurao/MyShogi/pull/63

  * 評価値グラフをサポート
  * フォントの設定を追加

  * USIエンジンとのタイミング問題を解消
  参考: https://twitter.com/mizarjp/status/1212602982761562113

  * 一度閉じられたときにはダイアログを作り直す。

  * 評価値グラフを検討ウィンドウに埋め込み。

  * 形勢グラフを埋め込んだり分離したりできるようにする。

  * 見栄えの調整

  * 不要になったコードの除去

  * バグ修正: plyが負になることがある。

  * デバッグプリントが残っていたので除去

  * レビューコメントの反映 https://github.com/yaneurao/MyShogi/pull/63#discussion_r363001660

  * 見落としていた引数順序を修正 https://github.com/yaneurao/MyShogi/pull/63#discussion_r363046390

https://github.com/yaneurao/MyShogi/pull/64

  デバッグプリントを削除



■　2019年 進捗なし


冬眠してました。すみませんでした…。


■　2018/11/28


- スレッド数の件、online_manual.mdに追加。


■  2018/11/18


- メニューに「棋譜編集」追加。
- 検討ウインドウの手順を分岐棋譜として送るときは棋譜を破壊していないという扱いにする。(警告が出るのがうざいので)
- 検討ウインドウの手順でメイン棋譜を置き換えるとき、メイン棋譜に開始局面しか存在しないのであれば、警告を出さないようにする。
  (開始局面に手順が加わっただけなので破壊していることにはならないという考え)


- 同じCPU同士の対局でそれぞれのengineに割当てられるメモリが非対称になっているのを修正。
  - 空き物理メモリの70%をとって、その残りの70%を取るみたいな計算の仕方は良くないな…。
  - AutoHashの計算修正する。
    - restの計算、ループ内でやってた。修正した。


- StockfishのTT、ハッシュの初期化、マルチスレッドでやるように改良されてる。これ反映させたほうがいいかも。
  - エンジン側、置換表のゼロクリアを並列化する。
  - エンジン側、総差し替え。


■  2018/11/17


- V1.3.7リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201811171400V137.zip
- "1.3.6"→"1.3.7" [2018/11/12]-[2018/11/17]


- 検討ウインドウの読み筋の右クリックメニューを追加。その4。
  - これ実現するのに棋譜のマージ機能とその分岐を選択するための機能が必要であるな…。それは難しい…。
  - めっちゃ苦労して書いた。うまく動いた。
- 検討で77角不成が1位になったりするのうざいなｗ
  - 検討モードでも不成をデフォルトで有効にするのやめるわ。


■  2018/11/16


- 検討ウインドウの読み筋の右クリックメニューを追加。その3。
  未実装  - メイン棋譜にこの読み筋を分岐棋譜として送る(&S)
  実装  - メイン棋譜をこの読み筋で置き換える(&R)
- EngineConsiderationMainControlがVSのデザイナでエラーになっていたの修正。
- 棋譜のMerge、これ結構難しい。あとまわし。


- 検討ウインドウの読み筋の右クリックメニューを追加。その2。
  未実装  - メイン棋譜にこの読み筋を分岐棋譜として送る(&S)
  未実装  - メイン棋譜をこの読み筋で置き換える(&R)
  実装  - 読み筋を表示のままの文字列でクリップボードに貼り付ける(&P)
  実装  - 読み筋をKIF形式でクリップボードに貼り付ける(&K)


- 棋譜ウインドウと検討ウインドウは読み筋をちゃんとList<Move>として保持すべきなのでは…。
- 棋譜の記法が即時反映でないのは設計が悪いからだと思う。リファクタリングすべき。


- V1.3.6でLinuxでうまく動いてなかった件を修正。
  EnsureVisibleの前に1ms waitを入れると動くらしい。なんぞこれ。
  - cf. https://twitter.com/AO_o10yan/status/1063027748640219137
  - cf. https://twitter.com/hnakada123/status/1062564183512776704
    > await Task.Delay(1);
    メッセージ処理を一回行うことに意味があるのだろうから、DoEvents()でいいのかな？
    DoEvents()駄目っぽい。なんぞこれ。Delay(0)でいいみたいだけども。


- 検討時の共通設定、不成の生成はデフォルト有効に変更。

- 将棋神のプリセットに、SkillLevel = 20の指定を追加する。
  (将棋神も、棋力に関して一定の状態を担保するべきという考えから。)


■  2018/11/12


- V1.3.6リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201811120420V136.zip


- 詰検討ダイアログで探索ノード数を制限できるように。
  - tanuki-詰将棋エンジンをノード制限に対応
  - USI2.0プロトコルとしてnodesを有効に。

    isready
    position startpos
    go nodes 10000 mate infinite

  - あれ？一回落ちた。メモリ確保失敗なのか？あれあれ？
    - わからん。落ちない。メモリ確保失敗でエンジン落ちるのかな…。callocだからか。
    - オプション指定間違えたほうのスレッドが残っていたのかな…。うむむ…。

usi
setoption name Threads value 2
setoption name Hash value 128
setoption name WriteDebugLog value false
setoption name NetworkDelay value 350
setoption name NetworkDelay2 value 550
setoption name MinimumThinkingTime value 2000
setoption name SlowMover value 100
setoption name MaxMovesToDraw value 0
setoption name DepthLimit value 0
setoption name NodesLimit value 0
setoption name Contempt value 2
setoption name ContemptFromBlack value false
setoption name EvalDir value eval
setoption name MorePreciseMatePv value true
isready
usinewgame
position startpos
go nodes 10000 mate infinite

quit

- ミニ盤面のフロート処理その4
- MiniShogiBoardのfont設定忘れていたの修正。
- 棋譜ウインドウ、検討ウインドウのメインウインドウへの埋込み時の幅、高さを変更したときに
  メニュー項目が更新されていなかったの修正。
- 対局結果一覧ウインドウがメインウインドウに対してセンタリングされていかなったの修正。
- メニューの「対局結果一覧」をウインドウのところから「対局」の配下に移動。
- ファイルへのロギング、ウインドウ配下でええんか？ここしかないのか…。

- メインウインドウに埋め込み時に畳の左端に表示するモードを追加(kumaさん)
  - ウインドウレイアウトマネージャーを作るべきか？
  - 単に配置設定を追加して、メインウインドウを左寄せで表示できればいいだけなのでは。
  あとはフロートさせれば一応好みの配置にできるっしょ。
  - いやー、それならもともと全部フロートで配置すればいいのか…。
    - あかん。もっとよく練り直そう。
  - メインウインドウも何とかできたほうが良さそうだけど、これ大変っぽいな。今回はここまでにしておこう。

- エンジン補助設定を対局のところに移動させたほうが良いのでは…。
  - いやー、基本、使わない設定だしなぁ…。うーむ..。
  - 1手X秒で指すというの、対局補助設定に移動させるか？


■  2018/11/11


- ミニ盤面のフロート処理その3
  - ミニ盤面フロートさせていると、メインウインドウのリサイズで、ミニ盤面の再描画イベントが走っているような…？
    - MiniShogiBoardのDoubleBuffer = trueにしたらちらつかなくなったが…。
      Resize,Moveは来てないのにな…。親WindowのResizeに対して子のredrawが走るのはWindowsの仕様なのでは…。
  - 棋譜ウインドウをフロートしているときにMiniShogiBoard広げると棋譜ウインドウ出てこない。
    これ、GameSceneControlがMainWindowに埋まっているかどうかのフラグが必要なのでは…。
    - 修正した。これは問題なさげ。
  - MiniShogiBoardにボタン追加するわ。左上にしとかないとDockさせたときに気持ち悪いな…。
    - 閉じるボタンが要らないかな。
        // →　メニューのウインドウのところから非表示にすればいいのでこれ要らないや。
  - ネームプレートオフにしてるのにMiniShogiBoardで出てくるのなんで…未実装なのか…。
    - ネームプレート合成後なので、ネームプレートの名前だけの問題なのか…そうか…。
    - あとで考えるとする。
    

- ミニ盤面のフロート処理その2
  - メインウインドウに埋め込んだときに表示されなかったの修正。
  - フロートさせたとき、棋譜ウインドウがあるからボタン要らないような気がしてきた…。
  - いやー、ショートカットキー欲しいか…。これ、メニューからOn/Offできるようにするか…。
  - 対局者氏名、ミニ盤面に入っていないの修正するか？いやー、これわりと面倒くさいな…。
  - ミニ盤面フロートさせていると、メインウインドウのリサイズで、ミニ盤面の再描画イベントが走っているような…？


- ミニ盤面のフロート処理その1
  - 半分ぐらい書けた。MiniShogiBoardのボタン、ToolStripにして上につけたほうがいいか。
  - 非表示→表示がまだ。
 

- 設定→エンジン補助設定追加。
- エンジンのタイムアウト時のメッセージに設定→エンジン補助設定から設定するように追記。
- ダイアログのStartPosition、WindowsDefaultLocationからぜんぶManualに変更。(メインウインドウに対してセンタリングするので)
- SystemInfo →　SystemInfoDialogにrename
- メニュー→設定→エンジン初期化にショートカットキー追加。


■  2018/11/10


- isreadyのあとのKeep Aliveの処理、うまくいっていない？(AO_o10yanさん)
  - 処理はちゃんと書けているようだが、評価関数ファイルの読み込みでDMA転送とかで、単coreのCPUだとCPU時間自体がもらえない可能性も…。
    設定で変更できたほうが良いのか…。うーむ..。
- エンジン補助設定、みたいなの追加して変更できるようにするべきか…。
- "usi"に対するtime outと、"isready"に対するtime outとを分ける。


■  2018/11/09


- jnoryさんのSoundPlayer、Linuxでの音が途切れる問題に対処するためにCで書き直し。
    https://github.com/jnory/MyShogiSoundPlayer/releases/tag/0.2.0  [2018/11/09 19:10]


- V1.3.5リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201811090500V135.zip
- "1.3.3"→"1.3.4" [2018/11/07]-[2018/11/08]
- 連続対局のバグがひどかったので早めにリリースしておく。


- tanuki-詰将棋エンジン側、nodes指定ぐらいは対応できないものだろうか…。
  - USIプロトコル的に非対応なのか。そうか…。なら仕方がないな。

- 検討設定にnode数、深さの指定追加。
  - 棋力プリセットが選べても良さそうなものだが、それはわりと難しい…。
  - node数、depthの指定、詰将棋エンジン、対応してない。禿げそう。エンジン側を対応させるのはあとにしよう…。
  - とりあえず、詰将棋エンジンなら選択できないようにしておく。
- 検討設定に定跡を使う、使わない → あー、これは検討用のエンジンの共通設定でできるから不要なのか…。


- 連続対局で対局開始時に不正な局面になる。(masaさん)
  - Shogi960絡みでリファクタリングしたときに壊してしまっている。
- あー、連続対局のときにGameOver→"isready"→"readyok"→対局開始なのに、この"readyok"待たずに
  "go"コマンドを送信していて、この部分をちゃんと状態管理するようにしたから、この"go"で弾かれているのか…。
  これは厄介な…。
- エンジンのタイムアウト処理、きちんと判定できていなかったの修正。


■  2018/11/08


- エンジン側、Hashメモリのゼロクリア、2GBごとに進捗を読み筋のところに出力するように変更。
  - エンジンまた全部差し替え(´ω｀)


- V1.3.4リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201811080430V134.zip
- "1.3.3"→"1.3.4" [2018/11/07]-[2018/11/08]


- 検討・詰検討が終わったタイミングで何らかの通知が欲しい。(5ch 将棋スレ144 >> 300)
  - エンジン動作中は、エンジン名の背景色を変更。
    - readonlyのTextBox、背景色変更できないのかｗ
    - 文字色を濃いオレンジに。
  - 時間設定なしの思考だとbestmove返ってこないから定跡でも停止してることがわからないなｗ
    - うむむ..まあいいか..


- Shogi960、平手の将棋と同じ形を除外できてるか？
  - できてた。

- tanuki-詰将棋エンジン、Hash確保を"isready"に対して行うように変更。
  - これでエンジン初期化中のダイアログが表示されるようになった。
  - でもゼロクリアしてないので、初期化に要する時間はわずか…。
- mate engine、Hashの初期化をisreadyokやっていないの修正。


- 評価値、後手から見た値になってなくない？なんぞこれ。
  - ああ、自分側から見た評価値だと検討で1手ごとに符号反転するのか。これわかりにくいなｗ
  - 先手から見た評価値をデフォルトとするように変更する。


■  2018/11/07


- UsiState拡張して、WaitReadyOkなどを用意する。
- Hashの値が超巨大だとtime outになる。(5ch 将棋スレ >> 158)
  - 30秒をtime out時間として、それを超えるならkeep aliveのためにエンジン側から何らかのメッセージ(改行可)を送らないといけないことにする。
  - エンジン側を修正する。
- Hashの初期化メッセージの件、オンラインマニュアルに追記しておく。
- 駒をクリックして持ち上げている状態で、検討ボタンを押して、エンジン初期化中に駒を移動完了させるとエンジンが例外で停止していたの修正。


- エンジン側に不成を生成するオプションを追加する。
  - GenerateAllLegalMoves
    - オプション名、ちょっと長いか？まあいいか。
  - 指し手生成、足りないのがあるのか。これは大変だわ。
- 思考エンジンが敵陣の歩の不成などを読むかどうかのエンジンオプションが欲しい。(ｋ＆ｙさん)
  - GenerateAllLegalMoves オプション追加。
  - これに伴い、engine_define.xml更新。


- バージョン情報ウインドウに最小化、最大化、要らない。(5ch 将棋スレ144 >> 300)
  - MinimizeBox , MaximizeBoxをfalseに。


- 対局設定、Shogi960が初期設定になっていたの修正。(ohtaroさん)
  - 同じTabIndexになっているとこうなるのか。なんぞこれ。
  - RadioButton、ひどすぎるんちゃうか、このバグ。
  - RadioButton同じTabIndexになってて、しかも、このGroupBoxに最初にfocusが来るから、ここでclick event生起してたのか。
  - 対局設定ダイアログのTabIndex設定しなおした。


■  2018/11/06


- V1.3.3リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201811062030V133.zip
- "1.3.2"→"1.3.3" [2018/10/27]-[2018/11/06]


- Shogi960実装


- ミニ盤面のショートカットキーの追加 Ctrl+上下左右
  Control+左右にしようと思ったら、これ、デフォルトだとToolStripの移動キーに割り当たってるな…。変更するか。
- ミニ盤面のショートカットキーの追加 デフォルト、Ctrl+上下左右。
  - 操作設定に「ミニ盤面」のタブ追加。
- 操作設定の棋譜の左右キーの画像の順番、変更する。ほかも。


なし,mini_prevnextkey_0.png,なし
Ctrl←→,mini_prevnextkey_1.png,Ctrl+カーソルキーの左と右に割当てます。
Ctrl↑↓,mini_prevnextkey_2.png,Ctrl+カーソルキーの上と下に割当てます。
←と→,mini_prevnextkey_3.png,カーソルキーの左と右に割当てます。棋譜操作のキーと重複している場合、無効化されます。
↑と↓,mini_prevnextkey_4.png,カーソルキーの上と下に割当てます。棋譜操作のキーと重複している場合、無効化されます。
，と ．,mini_prevnextkey_5.png,  ，(カンマ)と ．(ピリオド)に割当てます。棋譜操作のキーと重複している場合、無効化されます。
Page,cons_prevnextkey_6.png,PageUpとPageDownに割当てます。棋譜操作のキーと重複している場合、無効化されます。

なし,mini_headtailkey_0.png,なし
Ctrl←→,mini_headtailkey_1.png,Ctrl+カーソルキーの左と右に割当てます。
Ctrl↑↓,mini_headtailkey_2.png,Ctrl+カーソルキーの上と下に割当てます。
←と→,mini_headtailkey_3.png,カーソルキーの左と右に割当てます。棋譜操作のキーと重複している場合、無効化されます。
↑と↓,mini_headtailkey_4.png,カーソルキーの上と下に割当てます。棋譜操作のキーと重複している場合、無効化されます。
，と ．,mini_headtailkey_5.png,  ，(カンマ)と ．(ピリオド)に割当てます。棋譜操作のキーと重複している場合、無効化されます。
Page,mini_headtailkey_6.png,PageUpとPageDownに割当てます。棋譜操作のキーと重複している場合、無効化されます。


なし,cons_prevnextkey_0.png,なし
Shift←→,cons_prevnextkey_1.png,Shift+カーソルキーの左と右に割当てます。
Shift↑↓,cons_prevnextkey_2.png,Shift+カーソルキーの上と下に割当てます。
←と→,cons_prevnextkey_3.png,カーソルキーの左と右に割当てます。棋譜操作のキーと重複している場合、無効化されます。
↑と↓,cons_prevnextkey_4.png,カーソルキーの上と下に割当てます。棋譜操作のキーと重複している場合、無効化されます。
，と ．,cons_prevnextkey_5.png,  ，(カンマ)と ．(ピリオド)に割当てます。
Page,cons_prevnextkey_6.png,PageUpとPageDownに割当てます。棋譜操作のキーと重複している場合、無効化されます。


なし,cons_headtailkey_0.png,なし
Shift←→,cons_headtailkey_1.png,Shift+カーソルキーの左と右に割当てます。
Shift↑↓,cons_headtailkey_2.png,Shift+カーソルキーの上と下に割当てます。
←と→,cons_headtailkey_3.png,カーソルキーの左と右に割当てます。棋譜操作のキーと重複している場合、無効化されます。
↑と↓,cons_headtailkey_4.png,カーソルキーの上と下に割当てます。棋譜操作のキーと重複している場合、無効化されます。
，と ．,cons_headtailkey_5.png,  ，(カンマ)と ．(ピリオド)に割当てます。
Page,cons_headtailkey_6.png,PageUpとPageDownに割当てます。棋譜操作のキーと重複している場合、無効化されます。


- 検討ウインドウのショートカット、デフォルトでShift左右に変更。Shift上下で先頭/末尾に移動するように。
- MainDialogのコードをいくつかのファイルに分離。
-
検討ウインドウで選択行の先頭/末尾移動
ConsiderationWindowHeadTailKey

なし,cons_headtailkey_0.png,なし
Shift←→,cons_headtailkey_1.png,Shift+カーソルキーの左と右に割当てます。
Shift↑↓,cons_headtailkey_2.png,Shift+カーソルキーの上と下に割当てます。
，と ．,cons_headtailkey_3.png,  ，(カンマ)と ．(ピリオド)に割当てます。
↑と↓,cons_headtailkey_4.png,カーソルキーの上と下に割当てます。棋譜操作のキーと重複している場合、無効化されます。
←と→,cons_headtailkey_5.png,カーソルキーの左と右に割当てます。棋譜操作のキーと重複している場合、無効化されます。
Page,cons_headtailkey_6.png,PageUpとPageDownに割当てます。棋譜操作のキーと重複している場合、無効化されます。




■  2018/11/05


- 検討ウインドウの現在選択されている読み筋に対して「再クリック」もしくは「スペースキー」で再度ミニ盤面にその読み筋が反映されて欲しい。
  - デフォルトではEnterキーに設定。
  - 操作設定のところに追加。
- KeyboardShortcutHelper、リファクタリング
-
ConsiderationPvSendKey
検討ウインドウで選択行をミニ盤面に反映させるキー
なし,cons_sendpv_key_0.png,なし。
Enter,cons_sendpv_key_1.png,Enterキーに割当てます。棋譜操作のキーと重複している場合、無効化されます。
スペース,cons_sendpv_key_2.png,スペースキーに割当てます。棋譜操作のキーと重複している場合、無効化されます。


- 検討ウインドウの「+-」の列幅記憶したものが次回反映していなかったの修正。(キメラさん)


- 棋譜ウインドウをフロートさせているときにショートカットキーがときどき利かなくなる問題を修正。
  - どうもメインウインドウをクリックしたときにGameScreenか何かにfocusを奪われて、KeyDownイベントが生起しないようだ。
  - 棋譜ウインドウをフロートさせて、検討ウインドウをクリックしたあと、メインウインドウをクリックするとこの現象が起きる。なんぞこれ。
  - ああ、DockWindowで処理しているから、検討ウインドウをメインウインドウに埋め込んでいるときはKeyDownの処理がなされないのか。そうか。
  - mainWindow.KeyPreview = trueにしてるのにMainWindowにイベントこないのなんで…？(´ω｀)
  - AddControl(engineConsiderationMainControl)してるのに…。これ.NETのバグくさいな…。
  - いやー、EngineConsiderationMainControlでKeyDownでもキーイベント拾えない。何この現象。
  - MainWindowでクリックするとKeyDownこなくなる。なんぞこれ…。
  - 検討ウインドウをクリック→盤面をクリック→「←」キーを押すで、ここ以降キーが利かない。「→」キーなら問題ない。なんぞこれ。
  - カーソルの受け取れない変なコントロールにfocusが移動するためではなかろうか。
  - cf. https://stackoverflow.com/questions/1646998/up-down-left-and-right-arrow-keys-do-not-trigger-keydown-event
  - 結論的にはProcessCmdKey()使えってことなのか…。
- 検討ウインドウのreadonlyのテキストボックス、tab stopをオフにする。
  - 変なところにtab stopがあるとややこしくなる。どうせカーソルキーでComboBoxの項目の選択ができるわけではないのだから(ショートカットキーに割当てている)、
  tab stop全部オフにする。


■  2018/10/29


- SoundLoader説明文、追加。
    /// 仕様)
    /// 再生自体は、複数のwavファイルの同時再生できると仮定してる。
    /// SoundLoaderの1つのインスタンスは、1つのwavファイルと結びついていて、
    /// 複数インスタンスのそれぞれのPlay()を同時に呼び出せば同時に再生されるものとする。
    /// 
    /// 再生中かどうかはSoundLoader.IsPlay()によって、その紐づけられているwavファイルが再生中であるかを
    /// 照会できるものとする。
    /// 
    /// また、棋譜読み上げは前のファイルの再生が終わるまで次のファイルの再生が保留されるが、
    /// 駒音などはそのファイルが再生中であろうと問答無用で再生する。これによりの、読み上げと駒音は同時再生される。


- Updater、MyShogi.exeのコピーに失敗したときは、起動中の『将棋神やねうら王』を終了させるようにメッセージを出すように。

- SoundLoader.IsPlaying()、仕様がわかりにくいので説明追記。
        /// 棋譜読み上げのときは、IsPlaying()がfalseを返すまで次のPlay()は呼び出されないが、
        /// 駒音などは即座に再生する必要があるので、IsPlaying()は呼び出されず、Play()が呼び出される。
        /// この場合、現在のそのファイルの再生を中断して即座にそのファイルを再生しなおす必要がある。


- ListViewが複数あってそれぞれがactiveであるという実装、どうなのか…。
  - cf.ListViewが複数あるこの世界で世界最強 http://yaneuraou.yaneu.com/2018/10/28/listview%E3%81%8C%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E3%81%93%E3%81%AE%E4%B8%96%E7%95%8C%E3%81%A7%E4%B8%96%E7%95%8C%E6%9C%80%E5%BC%B7/


■　2018/10/27


- メニューの描画時のちらつき少しだけ防止。(本質的には防止できなさそう)


- ショートカットキー、Shift+Ctrl+RなどでもCtrl+Rとみなされていたの修正。
  - e.Modifiers == Keys.Control として、Control以外にShift,Altが押されていないことを保証しないといけない。(と思う)
- メニューの「ウインドウ」の「棋譜ウインドウ」と「検討ウインドウ」の順番入れ替える。
  - (棋譜が先にあって欲しい気がした)


- V1.3.2リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201810270410V132.zip
- "1.3.1b"→"1.3.2" [2018/10/20]-[2018/10/27]


- 検討ウインドウで上下に相当するショートカットキーの割当て
  - 検討ウインドウで上下に相当するショートカットキーの割当てを新たに作らないと…(´ω｀)
  - Shift+↑↓とか、 ,/. キーとか このへんかな？w/xとか？いやー、困るなー。
  - ShogiGUIはマウスカーソルを検討ウインドウの領域に入れるとそこがactiveになるんだな。面白い実装だな。
    - しかし、これはいいようで悪いような気もする。キー割当てはglobalであるべきだ。
    - あー、検討ウインドウはいいが、CPU同士の対局だと２つあるのか。こりゃ詰んだわ…。
    - やはりマウスカーソルの位置でfocus切り替えるべきではあるのか…。そうか…。

      // マウスカーソルが検討ウインドウの上にある場合は、棋譜ウインドウに対する操作を無効化しなくてはならない。
      // マウスカーソルのある場所で操作対象が変わる実装、非直感的だから嫌だけど、しかしそうしないと検討ウインドウに
      // CPU同士の対局だと2つのEngineConsiderationControlが出てくるので、それらに対してそれぞれuniqueなキーを割り当てるわけにはいかない。
      // CPU同士の対局で↑↓キーで選択行を移動したいことはないのでこれでもいいのか…うーん..？

      → マウスカーソルの存在を前提とするようなオペレーションにしたくないので、この部分をShogiGUIに倣うのはやめよう。

  ConsiderationWindowPrevNextKey = 1;

    なし,cons_prevnextkey_0.png,なし
    Shift↑↓,cons_prevnextkey_1.png,Shift+カーソルキーの上と下に割当てます。
    Shift←→,cons_prevnextkey_2.png,Shift+カーソルキーの左と右に割当てます。
    ，と ．,cons_prevnextkey_3.png,  ，(カンマ)と ．(ピリオド)に割当てます。
    ↑と↓,cons_prevnextkey_4.png,カーソルキーの上と下に割当てます。棋譜操作のキーと重複している場合、無効化されます。
    ←と→,cons_prevnextkey_5.png,カーソルキーの左と右に割当てます。棋譜操作のキーと重複している場合、無効化されます。
    Page,cons_prevnextkey_6.png,PageUpとPageDownに割当てます。棋譜操作のキーと重複している場合、無効化されます。


- メニューの「設定」→「操作設定」追加
- 操作設定ダイアログ作成
  - OperationSettingDialog
- マウスのドラッグ操作は、操作設定に移動。
- 表示設定の「操作」タブは「ダイアログ」とrename。
-    // マウスドラッグを許容するか
    richSelector19.Bind(config, "EnableMouseDrag");
    → 操作設定の「駒」タブに移動。
- image/display_setting/ → image/setting_dialog/
- 操作設定の「棋譜」のところに
  最初に戻る/最後に進むキー
  1手進む/戻るキー
  などの設定追加。
- MainDialogのコード、長くなってきたのでソースファイルを分割
- 検討ウインドウでのキー操作が直感的ではなくなってきた。どうすんの、これ。
  - あとで考える。
- 画面素材追加
  なし,kifu_prevnextkey_0.png,なし
  ←と→,kifu_prevnextkey_1.png,カーソルキーの左と右に割当てます。
  ↑と↓,kifu_prevnextkey_2.png,カーソルキーの上と下に割当てます。

  なし,kifu_next_specialkey_0.png,なし。
  スペース,kifu_next_specialkey_1.png,スペースキーに割当てます。
  Enter,kifu_next_specialkey_2.png,Enterキーに割当てます。

  なし,kifu_firstlastkey_0.png,なし。
  ↑と↓,kifu_firstlastkey_1.png,カーソルキーの↑と↓に割当てます。
  ←と→,kifu_firstlastkey_2.png,カーソルキーの←と→に割当てます。
  Page,kifu_firstlastkey_3.png,PageUpとPageDownに割当てます。



■　2018/10/25


- 検討ウインドウの読み筋の右クリックメニューを追加。その1。
  - メイン棋譜に分岐として送る/置き換える
    - メニューの表示まで実装した。中身の実装はまだ。
    - これ、検討中のみしか機能しないようにしとかないとややこしいことになりそう。あとで考える。


- 棋譜の記法で駒打ちのときには必ず「打」を記すオプション
  - 棋譜表記は、以下のサイトを参考に忠実に守っているのだが、「打」の文字が無いのはわかりにくいと不評。
  - 日本将棋連盟 「棋譜の表記方法」: https://www.shogi.or.jp/faq/kihuhyouki.html
- 棋譜形式のオプション項目、2個目以降が右に一つずれるのでimmigrator書く。

  kifwindow_kif_style_1.png → kifwindow_kif_style_2.pngにrename。以下同様。
  cons_window_kif_style_1.png 以下も同様。

  標準(KI2),cons_window_kif_style_0.png,標準的な棋譜表記にします。日本将棋連盟の定める正式な表記です。
  拡張(KI2打),cons_window_kif_style_1.png,KI2と同等ですが、駒打の時は必ず「打」と記す拡張表記です。
  簡易(KIF),cons_window_kif_style_2.png,移動元の升が書かれている簡易な棋譜表記にします。
  CSA,cons_window_kif_style_3.png,移動元の升が書かれている簡易な棋譜表記にします。
  SFEN,cons_window_kif_style_4.png,チェスで使われているSFEN方式の棋譜表記にします。


- 旧データからのimmigrator書かないと。
  - GlobalConfig.Migrate()追加。とりま、書けた。

- 棋譜ウインドウの分岐のときにもう少しわかりやすい表示にする。
  - 考えたけど、どうにもならん…。
  - 背景色変更ぐらいはできそうだが…。



■　2018/10/23


- DockStyleの変更、DockUtilityに移動させる。
  MainWindowのDockStyleの変更部分、綺麗に整理した。
  - 相変わらずLinuxではDockStyleの変更後、再描画イベントおきない。なんなんこれ…。
- MessageShow()に関して、例外の場合は、Consoleにも出力するようにした。
        // Linuxでデバッグするときなど、例外が渡ってきて、ウインドウを出せずに終了することがあるので
        // 例外に関してはメッセージをConsoleに出すほうが親切かもなー。


- Ubuntu18.04で動作確認その4(とりま、これで終わり)
  - Control1のサイズ変更してるのにウインドウのResizeイベント起きてない。なんぞこれ…。
    - DockStyleを変更前にSizeが同じだからか…そうか…。修正した。
    - Ctrl+Rのときに一瞬白くなるの少し嫌だが、レスポンス速くなったので良しとする。
    - Linuxで棋譜ウインドウを浮かせた時に再描画イベント走ってない。
      - DockStyleの変更によってresizeイベント起きない。これはMonoのbugだ。
  - メニューで「設定」のプルダウンメニューにフォント設定が反映されていない件。
    - 「対局」をぶら下げなければ問題ないみたい。何だこれ。
    - 仕方がないのでFontUtilityで自前で置換する。
  - Linuxのクリップボードの実装、AO_o10yanさんのツイートの方法で実装。
    cf. https://twitter.com/AO_o10yan/status/1053891533043159045
    cf. https://github.com/ao-o10yan/MyShogi/blob/linux_master/MyShogi/Model/Dependency/Mono/MonoAPI.cs
    - サウンドのほうは、aplayを使う実装はあまり良いと思わないので、AO_o10yanにお伝えする。
      https://twitter.com/yaneuraou/status/1054603178744762368
      https://twitter.com/yaneuraou/status/1054603478440398848
  - これで一通り動いたのでUbuntuで遊ぶの終わり。
  - 検討ウインドウ、メインウインドウに埋め込んでいると描画されないみたい。なんぞこれ。


- Ubuntu18.04で動作確認その3
  - 単体テストだとListView.EnsureVisible()で落ちないぞ…。
  - OwnerDrawだと列の幅を移動させたときに再描画がおかしくなる。OwnerDrawはMonoのdirtifyの処理がバグっていると見て間違いなさそう。
  - OwnerDrawでなければ大丈夫くさい。他のところとの複合要因なのか…。うむむ…。
  - GameScreenControlのDoubleBuffered = falseにするわけにはいかないしな。Linuxだとこれfalseにしてもちらつかないな…なんでだろう。内部的にbufferingしてるのかな。
  - Ubuntuの棋譜ウインドウ、カーソルキーで局面を移動したり、マウスカーソルでクリックしたりはできるようだ。描画だけがなされない。なんぞこれ。
    - どこかのSuspendLayout()で描画が止まっている状態くさいのだが。
  - メニューの「設定」の項目から右側の項目、文字フォントの変更が反映していない。MenuStripのambient propertyになっているFontが反映しない。
  - KifuControlのListView.TopItemのnull check追加。
  - KifuControlとEngineConsiderationControlに貼り付けてあるListViewのOwnerDraw = trueにデザイナでしてた(´ω｀)
    - Linuxで描画されなかったの、これが原因か…。
    - ListViewExのコードも修正。
    - KifuControlのListViewでデザイナでMultiSelection = trueになっていたのも修正。
  - 検討ウインドウ、メインウインドウに埋め込んでいると表示位置おかしい。Locationが利いてない。
  - EnsureVisible悪くなかった。ListViewのOwnerDrawでおかしくなっているのだった。
    - いや、EnsureVisibleをVisible==falseのときに呼び出すと落ちる。これはVisible==falseのケースを弾くようにする。
- Ubuntuで『将棋神やねうら王』 (2018/10/22) : http://fxst24.blog.fc2.com/blog-entry-545.html
  > mogrify -format png *.png
  > これを実行しないと、MyShogiの起動時に
  > libpng warning: iCCP: known incorrect sRGB profile
  > という警告が出る。具体的にどのような問題が起きるのか分からないが、鬱陶しいので実行しておく。


■　2018/10/22

 
- Ubuntu18.04で動作確認その2
  - 起動後、ゲーム画面のリサイズが起きないの、MainWindow、double bufferにした影響か？
    →そうでもなさげ。とりま、Double Bufferオフにしとく。
  - Affine行列、再セットされてない感じ。DockStyle絡む、(Monoの)resizeのバグのようだ。
      // 1) ここ、Size()を事前に設定しないとDockStyle.Noneにした瞬間おかしいところにKifuControlが移動してしまう。
      // 2) Monoでは、DockStyle.Noneにした瞬間に、それ以前のresizeイベントがクリアされる(?)ため、再描画がなされなくなる。
      // 結論的には、DockStyle.Noneの前後でサイズを代入するのが良いようだ。なんぞこれ…。
      →　2)も違うようだ。強制的にResizeイベント起こしたほうが無難っぽい。
- バージョン表示、WebBrowserを使っているので表示自体が無理ぽ。
  - これぐらい自前で作ったほうが良いのでは…。
- システム情報も落ちるわｗ
      // MonoだとManagementClass自体、未実装。
      - #if で囲む。
- ListViewのOwenerDrawで、無限ループになる。→　MonoのListViewのバグ。オーナードローをやめる。
  - 無限ループになるのは回避できたが、それでもまだListViewの描画がされない。なんで…。ListViewのほうのバグではないのでは…。
  - 簡単なサンプルを作って動作確認すべき。
- バージョン表示、WebBrowserを使っているので表示自体が無理ぽ。
  - これぐらい自前で作りなおす。
- RichSelctorをPictureBox.StretchImageを使うように変更。
- あとはListViewだけか…。


- Ubuntu18.04で動作確認その1
  - cf. Ubuntuで『将棋神やねうら王』 (2018/10/22) : http://fxst24.blog.fc2.com/blog-entry-545.html
  - ListViewExでOwnerDrawにすると無限再帰になってメッセージの処理ができなくなる。これもMono(Linux)のバグくさい。
    - DrawSubItemのイベントで描画したときに画面が汚れた判定になっていて、再描画イベントがまた飛んでくるのがおかしい。
    - これのせいでメッセージを処理できなくなり、メニューなどが描画されない。
    - Linux用のビルドだけ、ListViewExでOwnerDrawにするのやめる。
  - SuspendLayoutBlockの実装、入れ子にしたときの処理がおかしかったの修正。
- 棋譜ウインドウのコードがLinuxで動かない件。
  - Mono(Mac)でKifuControl.csの以下のEnsureVisibleで例外が出る件、呼び出しているところ、Mac用に #if #endifで囲む。
    - Linuxも同様の問題があるらしい。現バージョンのMono自体のbugっぽい。
-  デバッグシンボルを出力するなら以下のようにする？これでもスタックトレースが表示されない。なんで…。ああ、msbuildでbuildするからか…。
  > msbuild MyShogi.sln /p:DebugSymbols=true /p:Configuration=LINUX
- 例外が出たときのMessageDialogのテキストボックス、readonlyにしてなかったの修正。
- PlayerSettingControl、ファイルEngineDefine.xmlを別フォルダに移動させたときにぬるぽで落ちるの修正。
- Linux環境でエンジン選択のときにエンジンバナー出ていない。
  - png画像、32bppになっているから、MonoのCreateBitmapの地雷を踏んでるのか…。ハゲそう。

        public static void SetAlpha255(Image src)
        {
            if (src.PixelFormat == System.Drawing.Imaging.PixelFormat.Format32bppArgb && src is Bitmap)
            {
                var src_ = src as Bitmap;
                var srcRect = new Rectangle(0, 0, src.Width, src.Height);
                var data = src_.LockBits(srcRect, ImageLockMode.ReadWrite,
                    System.Drawing.Imaging.PixelFormat.Format32bppArgb);

                var length = src.Width * src.Height * 4;
                for (int i = 0; i < length; i += 4)
                {
                    // alpha = 255
                    Marshal.WriteByte(data.Scan0, i + 3, 255);
                }
                src_.UnlockBits(data);
            }
        }
  - このコードでは回避できず。転送先をARGB32に変更。


- 段位プリセットにレーティング併記する。例:「(R400)」


■　2018/10/20


- やねうら王2018のEngineDefineに書かれている実行ファイル名の先頭が小文字になっていたのでMac/Linux環境で実行に失敗していた問題を修正。
  (EngineDefine作り直した)
  - cf. Ubuntuで『将棋神やねうら王』 (2018/10/19) : http://fxst24.blog.fc2.com/blog-entry-545.html
  > (注) 思考エンジンのファイル名は本来は「Yaneuraou2018_kpp_kkpt_sse42.exe」である。
  だが、MyShogiは「yaneuraou2018_kpp_kkpt_sse42.exe」で読み込もうとするため、対局、
  または検討時にやねうら王2018年度版を選択すると、MyShogiが落ちてしまう。


- Mono(Mac)でKifuControl.csの以下のEnsureVisibleで例外が出る件、呼び出しているところ、Mac用に #if #endifで囲む。


- 起動時に棋譜ウインドウが一瞬画面左上あたりに表示されるの修正。
  - それでも一瞬、検討ウインドウをメインウインドウに埋め込んでいないときの位置に表示されるのとか、修正できるなら
    修正したいが、これは大改造になりかねないのでやめとく。

- Mono(Mac)でKifuControl.csの以下のEnsureVisibleで例外が出るらしい。MonoのScrollbarまわりの実装bugっているのでは。
                    var index = ViewModel.KifuListSelectedIndex;
                    if (0 <= index && index < listView1.Items.Count)
                        listView1.EnsureVisible(index);


- MonoAPI.csのGetFreePhysicalMemory、MacとLinuxの両方の単位間違えてたので修正。


- Mac : 最新のサウンドプレイヤーで動くように修正。 #62(jnoryさんのプルリク)
  * 最新のサウンドプレイヤーで動くように修正。
  * _playerProcessの状態を確認


■　2018/10/19


- Mac、Linuxで動作させるには.mdにフリーの音声素材の件を追記。


- 検討ウインドウも行数増えたときに垂直スクロールバーが出てClientSizeが縮むと水平スクロールバーが出るのを修正。
  - 一応Resize()で列幅の調整をやってたが、これはClientSizeChanged()でやるように変更。


- "1.3.1"→"1.3.1a" [2018/10/19]-[2018/10/19]


- 棋譜ウインドウ、ListViewのheader生成前に列幅調整しようとして(特定環境で)落ちるの修正。(tanishiさん)
- 棋譜ウインドウ、スクロールバーが出てくると時間の列が隠れる。
  - スクロールバーの列の幅を見越して列の幅の調整をすべきでは…。
  - スクロールバーが出るときにClientSizeが変わるのでハンドルするように。


- 棋譜ウインドウ、OwnerDrawに変更したので分岐棋譜をもう少しわかりやく色変更したり出来なくはないが…。
  - 色変更、見にくくなると嫌だし、電王盤と違って、本譜以外の分岐がすべて枝葉末節かというとそうでもないし。
  - いまのままでいいや…。そんなに悪い表現ではないと思う。
  - 分岐に'*'を使ってしまったので、棋譜コメントのある行に'*'が使えないのか…。うーむ..？
  - Cにするか。
  - 指し手の右側らへんに 💬 とかがわかりやすくて良いのでは…。(このUnicode文字、あるのかどうかは知らんが..)
    - 表示設定で選べるといいのかも…。


- 表示設定ダイアログのタブ切り替えたときにちらつくの何故？
  - DoubleBuffer trueになっているのに…。
  - RichSelectorとFontSelectorのこのプロパティもtrueに変更。
    - 少しだけマシになった。
  - TabControlのDoubleBufferは利かないらしい。
    - cf. TabControl（Page）上のコントロール再描画ちらつきを抑制したい : http://www.atmarkit.co.jp/bbs/phpBB/viewtopic.php?topic=39187&forum=7

    // 以下のコードでDoubleBufferが利くようになるようだが、他の部分に支障が出かねない。やめとく。
    // WindowsAPIの実装に不具合があるので、.NETではDoubleBufferを反映しない実装になっているのかな…。うむむ…。

        コード:	
        Public Class BufferedTabControl
            Inherits TabControl
            Private WS_EX_COMPOSITED As Integer = &H2000000

            Protected Overrides ReadOnly Property CreateParams() As System.Windows.Forms.CreateParams
                Get
                    Dim c As CreateParams
                    c = MyBase.CreateParams
                    c.ExStyle = c.ExStyle Or Me.WS_EX_COMPOSITED
                    Return c
                End Get
            End Property
        End Class



- V1.3.1リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201810190830V131.zip
- "1.3.0"→"1.3.1" [2018/10/15]-[2018/10/19]
  - Configのバージョンナンバー変更するの忘れてた


- 棋譜ウインドウの総消費時間を表示していないときに3列目の幅の値を保存しないようにする。
      // (総消費時間を表示していない状態で3列目を記録してしまい、そのあと総消費時間(4列目)を表示すると
      // 3列目が残り幅いっぱいになっていて、4列目が表示されていないように見えるため)


- 棋譜に総消費時間を表示するかを表示設定で選べるように。(デフォルト、オフでもいいような…)
  しない,kifwindow_totaltime_style_0.png,棋譜ウインドウに総消費時間を表示しません。
  する,kifwindow_totaltime_style_1.png,棋譜ウインドウに総消費時間を表示します。
- とりあえず、総消費時間、きちんと入るようになった。special moveの総消費時間の処理は、まだ。(これは難しい)
- 棋譜の表示形式を変更すると表示設定ダイアログを開くときに、「この変更が反映するのは次回起動時です」というダイアログが出ていたの修正。
- 総消費時間を表示していないときは、「時間」の列が残り幅いっぱいになるようにする。


- MonoAPI.csのGetFreePhysicalMemory()すでに1024で割ってたの修正。(fxst24さん)


■　2018/10/18


- 総消費時間、棋譜ウインドウに出力するように。その2。


- 総消費時間、棋譜ウインドウに出力するように。
  - トータルの計算がまだ。あとで実装する。
- 棋譜ウインドウの列幅を記憶するコード追加する。


- 棋譜ウインドウのボタン高さ、固定する。
- 棋譜ウインドウのTabStopやめる。(動的にEnableが変化するのでTabStop、あまり嬉しくない)
- 棋譜ウインドウのスクロールの3行前ぐらいが表示される処理
  - EnsureVisible()で実装しなおした。
- 棋譜ウインドウをDockするときに選択行が変わる。うわー。何これ。
  - 前からあるバグのようであった。修正した。
- 水平スクロールバー、消せない。吐きそう。
      OnPaint()とかでやる必要がありそう。これ良くないな…。やめよう。
  - ちゃんとClientSize.Widthから引き算すればぴったりになって、水平スクロールバー出ない。

      listView1.ShowHorizontalScrollBar(false);

#if !MONO
        [System.Runtime.InteropServices.DllImport("user32")]
        public static extern int ShowScrollBar(IntPtr handle, int wBar, bool bShow);
        /// <summary>
        /// 水平スクロールバーを有効/無効(デフォルト有効)
        /// </summary>
        /// <param name="b"></param>
        public void ShowHorizontalScrollBar(bool b)
        {
            ShowScrollBar(this.Handle, 0 /* SB_HORZ */ , b );
        }
#else
        public void ShowHorizontalScrollBar(bool b){}
#endif


- 検討ウインドウの読み筋の幅を計算するコード、サイズが小さいと無限再帰になりかねないの修正。
- 棋譜ウインドウのListView、非選択状態になるのどうにかならんのか…。
  - 項目のない列が選択されたときに非選択状態になる。
  - これListViewExのほうでの修正は困難。KifuWindowのresizeイベントで列幅いっぱいにする。
  - 項目がないと非選択になるのか…。うわー。

        private void listView1_MouseDown(object sender, MouseEventArgs e)
        {
            // 項目のない場所のクリックで行が非選択状態になるのを回避するため、
            // Itemのない場所のクリックを禁止とする。
            var selection = listView1.GetItemAt(e.X, e.Y);
            if (selection == null)
            {
                e.Cancel = true;
                // このメソッドがない
            }
        }

  - SelectedIndexChangedではなくItemSelectionChangedを使うべきなのか。
  - 違うわ。Application.Idle使うのか。こんなの気づかん…。

        // このアイデアは以下の掲示板の書き込みによるもの。
        // cf. ListViewの選択関連のイベント : https://dobon.net/vb/bbs/log3-55/32345.html


- 棋譜ウインドウ、メインウインドウに埋め込み時もフォントサイズを固定するように変更。
  - 棋譜ウインドウ、ListViewを使って書き直す。
  - こうしておかないと等幅フォント以外で消費時間のところがずれる。
  - 手数、指し手、(消費)時間、総(消費)時間
  - KifuListRow.cs追加。
  - 棋譜ウインドウ、大改造になった(´ω｀)
  - 棋譜ウインドウ、メインウインドウに埋め込み時も + - でフォントサイズ変更を可能に
  - 棋譜ウインドウ、メインウインドウに埋め込み時のフォントサイズを自動調整するのやめて、表示設定に従うように変更する。
  - 棋譜ウインドウのフォントも即時反映にする。
  - 棋譜ウインドウのサイズはFontManagerのconstの設定に従うように。
- ListViewをListBoxと同じ挙動にするのめっちゃ難しい。何これ、吐きそう。
- 検討ウインドウ、選択行、focusがないときでも見えるように。
  - ListViewをOwnerDrawに変更した。
- 検討ボタンを押した時に検討ウインドウが非表示の場合、自動で表示するようにした。これは、さすがに表示してくれないと不便だと思う。


- 表示設定のフォント変更、即時反映にする。
  - フォント設定のところに「+」と「-」を追加する。このボタンで1pt up/down可能に。
  - 棋譜ウインドウは対応まだ。


- LocalGameServer.Struct、小文字のフォルダ残ってたのを削除
  - Gitで大文字と小文字両方のフォルダができてしまったときにどちらか片方を消す方法
    https://qiita.com/inductor/items/6d58afd9f6b741208439
  - あかん。なおらへん(´ω｀)
  - このフォルダ、いったん削除して、ファイル、つくりなおすわ…。なんなんこれ…。


- 形勢表記、駒落ちのときは上手・下手にする。(tanadai56さん)


- DockWindowなどの最大化防ぐべき。
  - タイトルバーがダブルクリックされるのを防がないと…。
  - cf. フォームを最大化、最小化できないようにする : https://dobon.net/vb/dotnet/form/preventmaximize.html
  - Windows限定になってしまうが、まあ仕方がないな…。
- 棋譜ウインドウ、ResizeのときなどにちらつくのでSuspendLayout～ResumeLayout追加。
- Mac/Linux向けに、思考エンジン側のビルド手順、追記。改行修正。


- Mac/Linux向けに、思考エンジン側のビルド手順、追記。


■　2018/10/17


- LinuxのgetProcessCoreで落ちるの修正。


- LinuxのGetCurrentCpu()などを ao-o10yanさんのプルリクを参考に修正。
  - https://github.com/yaneurao/MyShogi/pull/61
  - https://github.com/ao-o10yan/MyShogi/commit/cd5513fc6efa5609a312134a2d6ac73eda7b010b

- LocalGameServer/structsをStructsと変更したのがGitHub上に反映していなかった件。
  - git config core.ignorecase false



■　2018/10/15


- V1.3.0リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201810150450V130.zip
- "1.2.9"→"1.3.0" [2018/10/14]-[2018/10/15]


- マウス追随モードで成り・不成のダイアログが出ているときに「転」ボタンを押すと180度回転させた升に移動させるように見える。
  - マウス座標がそこから動かないと仮定した処理になっているため。修正した。


- 成り/不成の選択、後手側だと180度回転させてあって欲しい。(ぐららるさん)
  - 表示設定の操作のところに追加。相手番ではflip(180度回転)をデフォルトとする。
  - 成り・不成のダイアログが出ているときに「転」ボタンを押してもうまく動くように調整。
  後手側(相手側)の成り・不成ダイアログを上下反転させるか
  しない,promote_dialog_style_0.png,上下反転しません。
  する,promote_dialog_style_1.png,後手(相手側)は上下反転します。


- ◀ ▶ がMSゴシックだと小さい問題、どうするべきか…。
  - ここのボタンのフォント、Yu Gothic UI  12ptをデフォルトに変更。


- 検討ウインドウをメインウインドウに埋め込んで非表示から表示に戻したときにgameScreenControl1のリサイズをしてなかった。
  - V1.27ではしてたが、不要かと思ってリファクタリングしたときに間違った。修正。
- 細長い駒台から普通の駒台に変わるときに落ちるようになった。なんぞこれ。
  - あー、Fontどこか解放してはいけないところを解放してるのか…。これは難しい。
  - FontUtility.SetFont()廃止する。

   場所 System.Drawing.Font.GetHeight(Graphics graphics)
   場所 System.Drawing.Font.get_SizeInPoints()
   場所 System.Windows.Forms.Internal.WindowsFont.FromFont(Font font, WindowsFontQuality fontQuality)
   場所 System.Windows.Forms.Internal.WindowsGraphicsCacheManager.GetWindowsFont(Font font, WindowsFontQuality fontQuality)
   場所 System.Windows.Forms.TextRenderer.MeasureText(String text, Font font, Size proposedSize, TextFormatFlags flags)
   場所 System.Windows.Forms.ButtonInternal.ButtonBaseAdapter.LayoutOptions.GetTextSize(Size proposedSize)
   場所 System.Windows.Forms.ButtonInternal.ButtonBaseAdapter.LayoutOptions.LayoutTextAndImage(LayoutData layout)
   場所 System.Windows.Forms.ButtonInternal.ButtonBaseAdapter.LayoutOptions.Layout()
   場所 System.Windows.Forms.ButtonInternal.ButtonStandardAdapter.PaintWorker(PaintEventArgs e, Boolean up, CheckState state)
   場所 System.Windows.Forms.ButtonInternal.ButtonStandardAdapter.PaintUp(PaintEventArgs e, CheckState state)
   場所 System.Windows.Forms.ButtonInternal.ButtonBaseAdapter.Paint(PaintEventArgs pevent)
   場所 System.Windows.Forms.ButtonBase.OnPaint(PaintEventArgs pevent)
   場所 System.Windows.Forms.Control.PaintWithErrorHandling(PaintEventArgs e, Int16 layer)
   場所 System.Windows.Forms.Control.WmPaint(Message& m)
   場所 System.Windows.Forms.Control.WndProc(Message& m)
   場所 System.Windows.Forms.ButtonBase.WndProc(Message& m)
   場所 System.Windows.Forms.Button.WndProc(Message& m)
   場所 System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)
   場所 System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)
   場所 System.Windows.Forms.NativeWindow.DebuggableCallback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)

        /// <summary>
        /// Fontを自分でnewしたものであることがわかっているときに用いる。
        /// 前のFontを開放してから新しいFontを設定する。
        ///
        /// Fontをusing(var font = new Font(... ) )のように書けないときは、
        /// なるべくこのメソッドを用いて、前使っていたFontを解放すること。
        /// </summary>
        /// <param name="c"></param>
        public static void SetFont(Control c, Font font)
        {
            if (c.Font != null)
            {
                // 古いフォントを解放する。
                // メインウインドウにぶら下がっているフォントは解放してはならない。
                // (これはambient propertyであり、他のControlから暗黙的に参照されている)
                var parentFont = c.Parent?.Font;
                if (parentFont != null /* 独立したウインドウなら解放しない */ && c.Font != parentFont)
                    c.Font.Dispose();

                // 複数のControlから共有しているFontはすでに解放済みで例外が出ることがあるが、
                // 複数のControlで親のFont以外を共有すべきではない。(それは論理的なバグである)
                // だからその例外はここで捕捉しない。
            }
            // →　Fontはどことどこが依存するか難しく、現実的にはこの処理を書くのは不可能。
            // これはやめて、.NET側に任せることにする。

            c.Font = font;
        }

- 1手進める/戻すボタンが小さく見える。(T.Kさん)
  - ◀ ▶ から ⯇⯈に変更するか？ MS ゴシックだとこれのほうが大きいのだが、Yu Gothic UIだと前者のほうが大きい模様。なんぞこれ。
  - これ、修正容易ではないな…。困ったな。


- ToolStripExで、ボタンがないところをクリックされてもFocusが移るように修正。(T.Kさん)
- MenuStripExも同様。


■　2018/10/14


- 一つ前のプルリクの修正案。


- libsoundioを使って音を鳴らす #60 (jnoryさんのプルリク)


- 一つ前のプルリク、#if MACOS ～ #endifで囲む。


- ToolStripの深い部分のFontオブジェクトが不正な値で落ちるようになっていたので修正。 #59(jnoryさんのプルリク)
  - この修正で、Macでもメニューの項目も無事表示されるようになった。(はず)


- V1.2.9リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201810140900V129.zip
- "1.2.8"→"1.2.9" [2018/10/14]-[2018/10/14]


- 表示設定の盤のところから、盤面の色味も変更できるように。
- 表示設定の盤のところから、畳の色味も変更できるように。
  オリジナル,tatami_color_type_0.png,元のままの変更しません
  少し暗く,tatami_color_type_1.png,少し濃い色にします
  暗く,tatami_color_type_2.png,かなり濃い色にします
  キャラメル,tatami_color_type_3.png,キャラメル色に近づけます
  古めの畳,tatami_color_type_4.png,古めの畳の色に近づけます
  新しめの畳,tatami_color_type_5.png,新しめの畳の色に近づけます
- 表示設定に畳のタブ追加。
- 表示設定、サイズ調整
  オリジナル,board_color_type_0.png,元のままの変更しません
  少し暗く,board_color_type_1.png,少し濃い色にします
  暗く,board_color_type_2.png,かなり濃い色にします
  キャラメル,board_color_type_3.png,キャラメル色に近づけます
  明るめの木,board_color_type_4.png,明るめの木の色に近づけます
  プラスチック,board_color_type_5.png,プラスチック風の色に近づけます


- 描画の高速化
	- 画面描画の時の更新矩形を最適化する
		- 残り時間の描画など
    - どうせ1秒に1回なのでまあいいか…。これ、やりだすと描画がいたずらに複雑になる。


- 表示設定の駒のところから駒の色味を変更できるようにした。
  PieceImageColorVersion
        /// <summary>
        /// 駒の色のバリエーション
        /// 0 : 元のまま (デフォルト)
        /// 1 : 暗め
        /// 2 : かなり暗め
        /// 3 : キャラメル色
        /// 4 : 明るめの木目
        /// 5 : プラスチック
        /// </summary>

オリジナル,piece_color_type_0.png,元のままの変更しません
少し暗く,piece_color_type_1.png,少し濃い色にします
暗く,piece_color_type_2.png,かなり濃い色にします
キャラメル,piece_color_type_3.png,キャラメル色に近づけます
明るめの木,piece_color_type_4.png,明るめの木の色に近づけます
プラスチック,piece_color_type_5.ng,プラスチック風の色に近づけます


■　2018/10/13


-  起動時、検討ウインドウの位置が確定するまで画面描画をSuspendしたほうが良いのでは…。
  - これ変更するの難しいし、起動遅くなるのであまり価値がないような気もしてきた。


- V1.2.8リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201810131400V128.zip
- "1.2.7"→"1.2.8" [2018/10/12]-[2018/10/13]
// バージョン表示を1.27にしたままになってた。


- ToolStrip with Custom ToolTip
  - メインメニューのボタン、ミニ盤面のボタンのToolStripの文字フォントも表示設定のフォントで設定したものが反映するようになった。


- Mac(Mono環境)でMessageBox.Show()が使えない件
  - 自前で描画する
  - アイコン素材発注済み    
  - message_box_v1_512_128.png 追加
- デフォルトフォント、メニューはMS ゴシックに変更。
- ToolTips、描画方法変更
  - backgroundにPadding (10,10)追加。
  - メニューのボタンのtooltipのフォントが変わってない。
    これ自前で書かないと駄目なのか…。うわー。
    cf. ToolStrip with Custom ToolTip : https://www.codeproject.com/Articles/376643/ToolStrip-with-Custom-ToolTip
    - 大変そう。あとでよく考える。


- 表示設定のフォントのところ、ラベルの位置がずれているの修正。
- ToolTip、文字フォントによっては文字がはみ出ていたの修正。
- 評価値「31111」の件、online_manual.mdに追記。


■　2018/10/12


- 評価値に対して、先手有利などの説明文を表示するオプション追加。これデフォルトでONにする。
  激指に合わせる。
    ３００以上　有利
    ８００以上　優勢
    ２０００以上　勝勢
- 表示設定のところに「形勢を評価値のところに表示する(次の局面以降有効)」を追加。
  表示しない,eval_jugdement_style_0.png,表示しません
  表示する,eval_jugdement_style_1.png,評価値の左側に「形勢互角」「先手有利」などの文字を表示します。


- 棋譜ウインドウ、フロート→非表示→細長い駒台→メインウインドウに埋め込み→普通の駒台にすると落ちるの修正。
  - あれ。落ちない。Font共有してるコードだけ、修正しとく。
- 検討ウインドウの表示/非表示をしたときに棋譜ウインドウが一瞬描画されなおすの何故？
  - 子ウインドウが閉じるので親のほうでInvalidate()が呼び出されて、再描画されるからか。
    - 再描画イベントですらなかった。少し腑に落ちないが…。
    

- 棋譜ウインドウ、フロートから戻したときにDockFillのまま、メインウインドウに埋め込まれることがある。
  - そもそもで言うと検討ウインドウと棋譜ウインドウを最大化できるのが間違い。最大化を禁止する。
  - DockWindowの解除を行うコード見直す。
  - DockWindowでControls.Remove()してて、これだとDockStyleの復元を行っていなかった。修正。
- 一つ前のcommit、ちょっとメソッド名変更してコメント追加した。


- エンジン検討しながら消一手で消す前の局面を思考したままになる。(T.Kさん)
  - これ、分岐の削除などについても同様だから、きちんとしたリファクタリングが必要になりそう。後回し。
  - 消分岐は、その局面からなので関係ないのか…そうか…。
  - うまく書けた気がする。エンバグしてませんように…。


- V1.2.7リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201810120730V127.zip
- "1.2.6"→"1.2.7" [2018/10/09]-[2018/10/12]


- エンジン設定の共通設定のタブ、説明文がヘッダーとしてあったほうが良いのでは。(フルートさん)
- ToolTipExのFontはprivateに変更する。publicにしておくとVSのデザイナがnullを突っ込むので迷惑。


- 連続対局の時のファイル名の勝敗の出力が間違っているの修正。
- 棋譜ウインドウの文字、等幅フォントでないと秒の出力のところが表示がずれるのでデフォルトで等倍フォントに変更。
- フォントサイズなどいくつか調整。


- 棋譜ウインドウのフォントサイズ変更、きちんとフォント解放されるのか確認
  - ああ、Font共有してないからOkだった。


- エンジン選択ダイアログでバナー画像をクリックしても選択できるように。(odagakiさん)
- 対局設定ダイアログでエンジンバナーのToolTipとしてエンジンの説明文を表示するように。


- 対局設定でコンピューターを選んでエンジンを選ばずに閉じて再起動したときに対局設定ダイアログを選ぶとエンジン選択画面が出てくるのを修正。
- PlayerSettingControlなどToolTipExを用いているControlがVSのデザイナでエラーになっていたの修正。


■　2018/10/11


- やねうら王2019の予定、SkillLevelの記述など更新


- フォント選択のためにFontSelectControl追加。その6。
  - ToolTipのFont置換忘れ。
  - あー、これControlじゃないからFontプロパティがなく、OwnerDrawするしかないのか…。うわー。
  - ToolTipEx作って対応した。置換できるようになった。


■　2018/10/10


- フォント選択のためにFontSelectControl追加。その5。
  - ミニ盤面のToolStripのフォント設定忘れ修正。
  - これは別途設定を増やす。これでフォント選択の作業はおしまい。あとはメッセージボックスを自作すればFont周りは完璧。
- ConsiderationMainControl、VSのデザイナで編集できなくなってるの修正。
  - Controlから派生させてた。UserControlから派生させないと駄目。間違えて書き換えてしまっていた模様。
  

- フォント選択のためにFontSelectControl追加。その4。
  - 検討ウインドウのフォント設定、新しいフォント変更と統合する。
    - GlobalConfigのこれ削除。
        /// <summary>
        /// 棋譜ウインドウの、ウインドウ時のフォントサイズ。
        /// </summary>
        [DataMember]
        public float KifuWindowFontSize { get; set; } = 11F;


- フォント選択のためにFontSelectControl追加。その3。
  - 検討ウインドウにもフォント反映
- 表示設定ダイアログにフォントのタブ追加。
  - フォントが設定できるようになった。
- FontSelectControl → FontSelectionControlにrename
- ConsiderationControl、VSのデザイナで編集できなくなってる。吐きそう。


- Update2がマイナビ公式で公開されたので、関連するドキュメント類を更新。


- フォント選択のためにFontSelectControl追加。その2。
- FontReplacer削除。Font名をそれぞれ書いておけるようにする。
- FontManager追加。大改造になった..(´ω｀)


- 対局設定ダイアログの後手の時間無制限が、「後手の時間設定を個別にする」がオフでもEnableになっている。(フルートさん)
  - 修正しました。


■　2018/10/09


- フォント選択のためにFontSelectControl追加。その1。


- GameScreenControlにSetSfenCommand()/DoMoveCommand()を追加。
  - これを用いて、見かけ上のatomic性を担保するようにした。
- 駒のpickupに関するソースコメント追加。


- MyShogiのトップページに設定ダイアログの画像を２つ追加。


- 駒を移動させるときに一瞬移動元の升に駒が表示されることがあるの修正。
  - 成り不成りの選択の時も同様。
  - 盤面編集時も同様。


- 対局画面の一番上のタイトルバーに「棋譜ファイル名」を表示する。(宏さん)


- 駒をドラッグで移動させたとき、一瞬、移動元の升に描画されるのを修正。(島田さん)
  - 駒がドラッグ移動されて、移動をLocalGameServerにCommandとして送信したときに、それが受理されるまで
    画面更新を抑制することでこの問題を回避するのは間違っている。いつ描画されても正しく描画されるようにすべき。
     →　あとでよく考える。
- 盤面編集で移動できない升への駒のドラッグが利かなくなっていたのを修正。
- 手駒を掴んだときにマウスカーソルに追随していなかったの修正。


- V1.2.6リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201810091030V126.zip
- "1.2.5"→"1.2.6" [2018/10/08]-[2018/10/09]


- 駒をクリックしたときにマウスカーソルに駒が追随する設定の追加。(宏さん)
  - いい感じだったので、こっちをデフォルトとする。
  - 表示設定→駒のところから変更可能
- 駒をドラッグで移動できない升に移動させたときは、ユーザーの誤った操作であり、
  そのときにそこにある駒を掴む挙動になっているの修正する。
- 表示設定に移動させたので、UpdateMenuのハンドラ呼び出すコード削除。
- 駒の移動にマウスドラッグを許容する/しないの設定追加。
  許容しない,dragged_move_style_0.png,マウスドラッグでの移動を許容しません。
  許容する,dragged_move_style_1.png,マウスドラッグでの移動を許容します。


- 対局設定で連続対局を行うのチェックを外した時に回数の入力欄をdisableにすべき。(masaさん)
  - その下のチェックボックスも同様。


- 表示設定ダイアログ、文字が収まりきらないのでもう少し間隔開ける。(masaさん)
- 表示設定ダイアログのすべての項目にTooltip追加
  効果なし,picked_move_to_style_0.png,視覚効果なし
  パターン1,picked_move_to_style_1.png,移動できない升を少し暗くします
  パターン2,picked_move_to_style_2.png,移動できない升を暗くします
  パターン3,picked_move_to_style_3.png,移動できない升をかなり暗くします
  パターン4,picked_move_to_style_4.png,移動できる升を少し明るくします
  パターン5,picked_move_to_style_5.png,移動できる升をかなり明るくします


- CPU判別がUnknown扱いになったときにエンジンのファイル名としてUnknownとsuffixについたものを
  選びに行くの修正。
   - よく見たら、仕方ない動作だった。修正しないでおこう。


- [WIP] Macで空きメモリ容量を計算するコードを追加。 #58 (jnoryさんのプルリク)



■　2018/10/08


- V1.2.5リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201810080615V125.zip
- "1.2.4"→"1.2.5" [2018/10/06]-[2018/10/08]


- メニューに「表示設定」追加その5
  - 手番側の表現
  なし,turn_style_0.png
  手番マーク,turn_style_1.png
  名前を赤字,turn_style_2.png
  - 対局者名の先頭の手番記号
  なし,turn_mark_style_0.png
  「☗」と「☖」,turn_mark_style_1.png
  「▲」と「△」,turn_mark_style_2.png
  - 対局開始・終了エフェクト
  なし,game_greeting_effect_style_0.png
  あり,game_greeting_effect_style_1.png
  - 振り駒のエフェクト
  なし,game_piece_toss_effect_0.png
  あり,game_piece_toss_effect_1.png
- 対局開始時のエフェクトと振り駒のエフェクトの設定を分離する



- メニューに「表示設定」追加その4
  - 成駒の色
  黒,pro_piece_color_style_1.png
  赤,pro_piece_color_style_2.png
  - 移動方角マーカー
  なし,piece_attack_image_ver_0.png
  あり,piece_attack_image_ver_1.png
  - 最終手の移動元の升
  効果なし,last_move_from_style_0.png
  朱色,last_move_from_style_1.png
  青色,last_move_from_style_2.png
  緑色,last_move_from_style_3.png
  - 最終手の移動先の升
  効果なし,last_move_to_style_0.png
  朱色,last_move_to_style_1.png
  青色,last_move_to_style_2.png
  緑色,last_move_to_style_3.png
 - 駒を掴んだ時の移動元の升
  効果なし,picked_move_from_style_0.png
  黄色,picked_move_from_style_1.png
  青色,picked_move_from_style_2.png
  緑色,picked_move_from_style_3.png
  - 駒を掴んだ時の移動候補の升
  効果なし,picked_move_to_style_0.png
  パターン1,picked_move_to_style_1.png
  パターン2,picked_move_to_style_2.png
  パターン3,picked_move_to_style_3.png
  パターン4,picked_move_to_style_4.png
  パターン5,picked_move_to_style_5.png


- メニューに「表示設定」追加その3
  -  棋譜ウィンドウの棋譜の形式
    標準(KI2),kifwindow_kif_style_0.png
    簡易(KIF),kifwindow_kif_style_1.png
    CSA,kifwindow_kif_style_2.png
    SFEN,kifwindow_kif_style_3.png
  - 検討ウインドウ
    標準(KI2),cons_window_kif_style_0.png
    簡易(KIF),cons_window_kif_style_1.png
    CSA,cons_window_kif_style_2.png
    SFEN,cons_window_kif_style_3.png
  - 駒画像
    二文字駒,piece_image_ver_1.png
    一文字駒,piece_image_ver_2.png
    英文字駒,piece_image_ver_3.png
- ImageLoaderのCreateAndCopyの縮小時の品質を上げる。
          g.InterpolationMode = InterpolationMode.HighQualityBicubic; /* 高品質で縮小する */
- RichSelector、画像を選択してもラジオボタンがクリックされたのと同等の扱いにする。


- メニューに「表示設定」追加その2
  - RichSelectorコントロール追加
  - 画像として image/display_setting/ フォルダを掘る
    - ここに設定の選択時に使う画像を放り込む
      - XXXX_YY.png
      - XXXX = 設定名 , YY = 通しナンバー
  - 「筋・段の表示」まで出来た。あとは単純作業？


■　2018/10/07


- メニューに「表示設定」追加(作業中)
  - DisplaySettingDialog追加
- 音声設定の秒読みのところに注釈追加。
- Model.Dependent → Model.Dependencyに rename
- フォントにMicrosoft Sans Serif使っているところ修正する。(このフォント使わないようにする)
  - 見つからない。使ってる箇所ないようだけど、使ってることになってる。(´ω｀)？


- FontUtilityにParentのnullチェック追加。(海苔さんからの指摘)
- メニュー→ファイル「設定の初期化」を「設定」のところに移動。


- メニュー→「設定」→「音声設定」追加。メニューから「音声」削除。
  - 「音声設定」にサウンド・音声全体のオン/オフ追加。
  - 「音声設定」に対局開始/終了時の挨拶の読み上げのオン/オフ追加。
- SoundSettingDialog追加
  - 設定は、すべてメニュー →「設定」のところに集める。
- サウンド設定を変更したときにメニューの更新が不要になったのでメニュー更新イベントをraiseしていたコード削除。

 
- ミニ盤面の大きさ変更について追記


- Updater、dpiスケーリング、利いてない。なぜ？
  - 利いてるけど、TextBoxやRichTextBox、ListBox等の高さまで拡大されるという問題のようで、これ回避できないのでは…。
    - http://bbs.wankuma.com/index.cgi?mode=al2&namber=67969&KLOG=115
  - 高さ自前で計算してレイアウト修正すべきなのか…。なんぞこれ…。
      // →　フォントを設定していないとこうなる模様。なんぞこれ…。
      // フォント未設定 = dpiに依存するフォントが設定されていて、2倍の表示域が必要→2倍の高さに
      // みたいな理屈なのだろうか。ひどすぎる。


- MacでMessageBox.Show()が使えない件
  - cf. https://github.com/jnory/MyShogi/commit/5a6f5b819bf1902f46b693b640a249008f72c72e
  - 自前でMessageBox相当のクラスを作るべきような気がする。現状、センタリングできてないのも気持ち悪いし。
  - とりあえずアイコン素材を発注しておく。


■　2018/10/06


- Updaterの改良
  - 進捗を表示するRichTextBoxに対してテキスト追加をAppendText()を使うように変更
  - 進捗を表示するRichTextBoxに対してDetectUrlsをfalseにする(ネットワーク上のドライブが勝手にハイパーリンクになるのを抑制)
  - インストールするフォルダをテキストボックスを直接編集するとそれが反映されないバグを修正。


- high dpi対応のためにapp.configに次のように書くべきらしい。
  cf. https://docs.grapecity.com/help/spread-winforms-8/spwin-dpisupport.html
  cf. https://qiita.com/felis_silv/items/efee4b1a397b0b95100a

  <appSettings>
    <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />
  </appSettings>

  app.minifestの以下の部分だけでは駄目なのか…。
    <application xmlns="urn:schemas-microsoft-com:asm.v3">
      <windowsSettings>
        <dpiAware xmlns="http://schemas.microsoft.com/SMI/2005/WindowsSettings">true</dpiAware>
      </windowsSettings>
    </application>

  上のを書くならSetProcessDPIAware()は呼び出さなくて良い模様。  


- Updater、フォルダ変更しても c:/ProgramFiles(x86)/...にインストールしていたのを修正。


- V1.24以前の更新情報を 過去の改修履歴.md に移動


- Update2を公開したので関連するドキュメントの更新。


- Update2(V1.24)公開
  - アセンブリ情報のバージョンを1.2.4に。

- V1.2.4リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201810060200V124.zip
- "1.2.3"→"1.2.4" [2018/09/27]-[2018/10/04]



■　SkillLevel調整時の資料


段位	R	NodesLimit		SkillLevel	NodesLimit	相対R	比率	勝敗		
										
										
12級										
	-600			0	100 	223		238-4-272	S11級との対局結果	
	-600			0	200 	265		39-1-57	S11級との対局結果	
	-600			0	400 	162		106-3-85	S11級との対局結果	
										
		 			※　ノード数を減らして弱くならない以上、SkillLevelでこれ以上弱くするのは不可能。					
										
11級										
	-400			0	1000 	22		733-4-363	S10級との対局結果	
	-400			1	1000 	145		576-4-420	S10級との対局結果	
	-400			2	1000 	197		499-11-490	S10級との対局結果	
										
10級										
	-200	100		3	770 	-19	7.7	517-21-462		
	-200	100		3	800 	3	8.0	486-19-495		
										
										
9級										
	0	136		3	800 	-26	5.9	525-23-452		
	0	136		3	850 	-28	6.3	531-18-451		
	0	136		3	920 	-2	6.8	497-13-490		
										
8級										
	0	187		3	1000 	-35	5.3	546-9-445		
	0	187		3	1100 	-3	5.9	499-12-489		
										
7級										
	200	258		3	1400 	-15	5.4	519-5-476		
	200	258		3	1500 	-1	5.8	494-15-491		
										
6級										
	400	361		3	2200 	9	6.1	486-2-512		
										
5級										
	600	509		3	3500 	9	6.9	485-4-511		
	600	509		3	3800 	20	7.5	470-4-526		
	600	509		3			0.0			
										
										
4級										
	800	726		3	4000 	-33	5.5	342-6-282		
	800	726		3	4500 	-31	6.2	543-4-453		
	800	726		3	5500 	5	7.6	489-7-504		
										
										
3級										
	1000	1048		3	6000 	-35	5.7	547-7-446		
	1000	1048		3	7000 	-60	6.7	286-2-203	// 対局少ない	
	1000	1048		3	8000 	-5	7.6	505-4-491		
										
										
2級	1200	1534		4	8000 	-4	5.2	503-6-491		
	1200	1534		4	9000 	15	5.9	476-6-518		
	1200	1534		4	10000 	30	6.5	452-12-536		
	1200	1534		4	12000 	77	7.8	390-3-607		
										
										
										
1級	1400	2281		4	13000 	-60	5.7	148-3-105		
	1400	2281		4	15000 	-38	6.6	547-13-440		
	1400	2281		4	17000 	-29	7.5	541-2-457		
	1400	2281		4	17800 	30	7.8	454-5-541		
	1400	2281		4	18000 	-11	7.9	113-0-106	// 対局少ない	
	1400	2281		4	18500 	34	8.1	449-4-547		
										
										
初段	1600	3450		3	15000 	-233	4.3			
	1600	3450		3	35000 	-136	10.1			
	1600	3450		5	20000 	-32	5.8	447-6-371		
	1600	3450		5	22000 	8	6.4	281-4-268	// 2スレ	
	1600	3450		6	35000 	209	10.1			
										
二段	1800	5325		6	35000 	65	6.6			
	1800	5325		6	30000 	0	5.6	100-0-100	// 対局少ない　もっとする	
	1800	5325		6	30000 	2	5.6	316-6-319		
	1800	5325		6	30000 		5.6			
										
										
三段	2000	8410		6	60000 	-18	7.1	295-6-265		
	2000	8410		6	65000 	-7	7.7	508-5-487	// 1スレ?	
	2000	8410		6	66000 	-28	7.8	431-8-366	// 2スレ	
										
										
										
四段										
	2200	13648		7	90000 	-5	6.6	503-10-487		
	2200	13648		7	100000 	35	7.3	445-90-546		
	2200	13648		7	110000 	31	8.1	450-12-538		
	2200	13648		7	120000 	33	8.8	407-17-494		
	2200	13648		7	140000 	83	10.3	170-3-275	// 2スレ	
	2200	13648		7	150000 	-40	11.0	165-2-131	// 1スレ?	
	2200	13648		7	155000 	64	11.4	365-8-528	// 2スレ	
	2200	13648		7	160000 	50	11.7	108-3-144	// 1スレ?	
	2200	13648		7	180000 	77	13.2	77-2-120	// 1スレ?	
	2200	13648		8	80000 	151	5.9	59-0-141	// これ弱くすると、MultiPV 4と変わらない SkillLevel7で調整すべき	
										
										
五段										
	2400	22885		8	130000 	-24	5.7	510-11-443	// 2スレ	
	2400	22885		8	140000 	-11	6.1	512-10-478	//2スレ	
	2400	22885		8	150000 	30	6.6		// 1スレ?	
	2400	22885		8	200000 	80	8.7	58-1-92	// 1スレ?	
										
										
										
六段	2600	39959		6	225121 	-400	5.6			
	2600	39959		9	225121 	-15	5.6	86-4-79		
	2600	39959		9	230000 	-19	5.8	521-13-466	採用	
	 									
七段	2800	73475		10	500000 	-200	6.8	16-2-5		//1スレ
	2800	73475		11	500000 	10	6.8	116-2-123		//1スレ
	2800	73475		10	500000 	0	6.8	301-14-300		// 2スレ
	2800	73475		11	400000 	93	5.4	42-7-72		//2スレ
	2800	73475		11	500000 	82	6.8	82-3-132		// 2スレ
	2800	73475		12	500000 	100	6.8			//1スレ
										
										
八段	3000	144007		12	700000 	-56	4.9	208-5-151		// 1スレ
	3000	144007		12	750000 		5.2		強すぎ	// 2スレ
	3000	144007		12	800000 	107	5.6	55-1-102		// 1スレ
	3000	144007		11	750000 	-115	5.2	105-4-54		//2スレ
	3000	144007		11	1000000 	-70	6.9	96-1-64		//2スレ
	3000	144007		11	1200000 	-4	8.3	257-5-251		//2スレ
										
										
九段										
	3200	283584		12	2500000 		8.8		ノード数多すぎ。やめとくか	
	3200	283584		13	1450000 	10	5.1	216-11-229		
	3200	283584		13	1500000 	20	5.3	183-12-205		
	3200	283584		13	1700000 	34	6.0	212-13-258		


■　2018/10/05


- S九段、棋力調整
- Sのつく段位プリセットの説明文の脱字修正。


- 棋譜コントロールがアクティブなときにCtrl+K/Rなどのショートカットキーが効かないのを修正。
  - キーイベント自前でハンドルして、キーメッセージではなく直接ハンドラを呼ぶと、メニューで無効化されているときにも呼べてしまい困る。
  - しかし自前で処理するしかなさそう…。
- KeyboardShortcutHelperクラス追加
  - 綺麗に書けた。


- 棋譜ウインドウ、検討ウインドウ、ショートカットキーで非表示に出来るように。(kumaさん)
  - DockManagerのメンバーにVisible追加。
  - 表示～再表示がCtrl+K(棋譜ウインドウ)、Ctrl+R(検討ウインドウ)で出来るようになった。
  - 棋譜ウインドウ、起動時に最初メインウインドウに表示されるの修正。(最初、非表示にしておく)
  - 棋譜ウインドウ、検討ウインドウ、最初、非アクティブでpop upさせるように。
- 棋譜コントロールがアクティブなときにCtrl+K/Rなどのショートカットキーが効かない。
  - アクティブにならないようにするにはSetWindowPos()が必要。移植性下がる。やりたくない。
  - キーイベント自前でハンドルして、キーメッセージではなく直接ハンドラを呼ぶと、メニューで無効化されているときにも呼べてしまい困る。
    - これ、あとで対策を考える。
- S七段、棋力調整


■　2018/10/04


- V1.2.3リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201810042315V123.zip
- "1.2.2"→"1.2.3" [2018/09/27]-[2018/10/04]


- S九段～S15級、調整中。その4。
  - S七段・九段以外の調整完了。とりま、これでいっかいリリース。
  - S七段・九段の調整にはまだ時間がかかるので次バージョンで。
  

- BookDirを変更したときに、Aperyの定跡ファイル(book.bin)が読み込めなくなるのを修正。(やねうら王のエンジン側)
  - Aperyの定跡ファイル(book.bin)はBookDirオプションを無視して、"book/book.bin"を読みに行っている。(ohtaroさんの報告) (修正内容の指摘、tttakさん)
      思考エンジンからのログを確認したところ、
      .././book/book.bin
      を見ているっぽい。(つまりは、他の定跡ファイルの存在しているフォルダで合ってる)
      でも定跡の指し手が採択されない。もう少しきちんと追いかけるべき。時間のある時にやる。
      cf. https://github.com/yaneurao/MyShogi/issues/57
- フォルダ名を変更したときに、定跡を使わない場合にも"no_book"というファイルを読みに行っていたのを修正。
- やねうら王側、修正。詰将棋エンジン以外の各エンジン差し替え。
    https://github.com/yaneurao/YaneuraOu/commit/ac44452e6da8a5ef9e6fbe7ca7eeeb59181838b0



- S九段～S15級、調整中。その3。
  - S六段～S11級の調整完了。
  - S12級以下の弱さにするのは不可能。
  - "MultiPV"を"MultiPv"と書いていたところ修正。
  - 連続対局のときにR順にしたとき、反映されてないような？
    - MultiPVになっていないだけだった。


- 検討ウインドウのバッファリングの処理、改良その2。
  - 棋譜ウインドウも同様の処理をしたほうがいいような気が…。
  - 棋譜ウインドウ、非表示にしてると全くつっかえない。やはり棋譜ウインドウのdispatch、良くないのか…。


■　2018/10/03


- 検討ウインドウ、連続対局のときなど更新が間に合わなくて待たされることがあるの改良。
  - ほぼ変わらん。これが原因ではないのか…。
  - 以前のrootSfenに対するメッセージ、捨てる処理を追加。検討ウインドウ、少しレスポンス良くなった。あとは、棋譜ウインドウか…。
- EngineConsiderationMainControl.csの使っていないコード、削除。
- デバッグウインドウを出したときに、Filterのテキストボックスにfocusを移動させる。


- 対局結果の自動保存の設定になっていないとき、連続対局の勝敗のカウントがされないのを修正。


- S七段～S15級、調整中。その2。
  - スレッド数を増やすと探索が全体的に浅くなる→SkillLevelのmove_to_pickに達しなくなる→単なるMultiPVになる→つよい
    みたいな流れはあるようだ。これは困った。スレッド数を2に固定して、再度調整しなおす。
- S段位プリセットの説明、手直しする。
- 低い段位同士の連続対局だとメニューの更新が1局ずつあるので、デバッグウインドウが出せない
  - Ctrl + D をデバッグウインドウのショートカットにする。


- S七段～S15級、調整中。その1。
  - せっかくなのでS八段、S九段も調整するか？


■　2018/10/02


- メモリ上のLogをデフォルトで1万行までの保存とする。
  - これでも10局分ぐらいは保存できるはず。
  - 1局100KB程度(1000行程度)なので1万局で1000万行、1GBぐらいになる。
  - 連続対局中、Hashサイズの変更は出来ないので(Hashの再初期化をしないので)、メモリギリギリの状態からだと1GBはきつすぎる。
        /// ただし、デバッグウインドウを開いている間は、この行数を超えて表示される。
        /// (これはデバッグウインドウ側で保持しているQueueに追加されていくため)


- 1級～10級を下方修正。新1級 = 従来の2級 , 新2級 = 従来の4級 , 新3級 = 従来の6級 , … , 新10級 = 従来の20級 相当
- S七段～S10級を追加。序盤は弱いのに終盤だけ強いということのないように、人間らしい弱さを追求。
  // 現在調整中
- エンジン選択のときのエンジン説明のテキストボックスに垂直スクロールバーを追加。


■　2018/10/01


- デバッグウインドウに思考エンジンからの出力が記録されてなかったの修正。
  - 前回、RemoteService削除したときに書き忘れ。


- Aperyのbook/binが読み込めない件。
  思考エンジンからのログを確認したところ、
  .././book/book.bin
  を見ているっぽい。(つまりは、他の定跡ファイルの存在しているフォルダで合ってる)
  でも定跡の指し手が採択されない。もう少しきちんと追いかけるべき。時間のある時にやる。


■　2018/09/30


- Mac用のビルド手順、追記


- macOS対応作業その4
  - 一応画面は綺麗に出た。対局開始の透過の仕方がおかしい。
    Monoでalpha値つきの転送で、alpha値が0のときにゴミが乗ってくるのか、抜き色みたいな処理があるのか、よくわからん。
    いずれにしてもMonoのDrawImage()まわり(GDI+まわり)は、間違った実装になっている箇所が多すぎる。
  - とりあえず、今回の作業はここまでにしておく。


- macOS対応作業その3
  - GDIPlus.CheckStatusで落ちる。
  - pngの表示で落ちている模様。
    Cannot load PNG in C# on Mac OSX running Mono : https://stackoverflow.com/questions/4674453/cannot-load-png-in-c-sharp-on-mac-osx-running-mono
  - monoではPNG読み込み、非対応？
  - image/ を image_/ とrenameしても同じところで落ちるのでPNGの問題ではなく、フォントサイズ0で描画とかそんな問題かも。
  - ただ、どのテキスト描画でそうなるのか、スタックトレース見てもわからん…。
  - いったんフォントを生成してから置換する手法は、この生成のときにフォントの計測で持っていないフォントだから
  フォントサイズが0になってしまい、ResumeLayout()の瞬間、GDIPlusでの描画で落ちている可能性が…。
  - Fontの置換ちゃんとやったほうが良い＆もう少し洗練された書き方をしたほうが良い。
  - Font、とりま手ですべて置き換えたけどまだ落ちる。これFont絡みだけではないのか？

  - GDIPlus.CheckStatus() [0x00098]で落ちるのは..  https://github.com/mono/mono/issues/10062
    monoのmcs/classのソースコード読んだほうが早いな、これ。

      https://github.com/mono/mono/blob/master/mcs/class/System.Drawing/System.Drawing/gdipFunctions.cs#227

			  case Status.InvalidParameter:
				  msg = Locale.GetText ("A null reference or invalid value was found [GDI+ status: {0}]", status);
				  throw new ArgumentException (msg);

      ああ、CheckStatus()は、エラーのStatusを適切な例外に変換して投げるだけのメソッドか。

      https://github.com/mono/mono/blob/master/mcs/class/System.Drawing/System.Drawing/Graphics.cs#L1937

			RectangleF boundingBox = new RectangleF ();

			Status status = GDIPlus.GdipMeasureString (nativeObject, text, text.Length, font.NativeObject, 
				ref layoutRect, stringFormat, out boundingBox, null, null);
			GDIPlus.CheckStatus (status);

  - VS Code + Mono Debug入れれば、デバッガーで追いかけられるようだ。これを用いる。
    "Microsoft Sans Serif"フォントを使っているところがあって、そこで落ちてた。
    - 見知らぬフォントが1つでもあると落ちるとは…。
  - 対局盤面は表示されるようになった。駒もUI上から動かせるし、エンジン選択も動いている。
  - 盤面の合成に失敗しているの、なんでなんだろう…。24bppRgbに32bppArgbのImageから転送するコード、実装されてないかな。
    - そうでもなさげ。
    - alphaが無視されて転送されてる。なんぞこれ…。
      - C# アルファ透過が指定されている画像をビットマップに書くと汚くなる。 : http://www.atmarkit.co.jp/bbs/phpBB/viewtopic.php?topic=36481&forum=7
        - この問題に酷似している。
      - C# Graphics.DrawImage() transparent png background : https://stackoverflow.com/questions/35035368/c-sharp-graphics-drawimage-transparent-png-background
        - この人と同じ問題。未解決。
    - DrawImageHelper実装。自前でコピーすることにした。


- macOS対応作業その2
  - Clipboardクラス、Mac用を用意した。


- macOS対応作業その1
  - macOS/Linux用のプロジェクト設定を追加
    - macOSのmonoはC#7.2までのサポートなのでC#のバージョンとして7.2を指定する。


■　2018/09/29


- エンジン側との入出力、EncodeをUTF8と変更。
  - USI2.0でもUTF8を標準とするようにする。
- ProcessNegotiatorにtry～catch追加など。


- 子プロセスからの通信を同期的に調べるときにWaitCompletionPacketがleakしてるっぽい？
- RemoteServiceでCancelarationTokenのDispose()呼び出してなかった。
  - しかし、これだけではない気がする…。
- RemoteService.cs使わないことにする。
- ProcessNegotiator、リファクタリングした。
- DebugWindow閉じるタイミングでメッセージが送られてくると破棄されたWindowでInvokeしてることになって
 例外が出ていたの修正。


■　2018/09/27


- 時間無制限のときに名前の表示のところが「/五段」のようになる(masaさん)
  - 修正しました。


- Mac上でサウンドの再生問題について
  - libsoundio-sharpとPInvokeGeneratorについて(ものがたり) : http://atsushieno.hatenablog.com/entry/2017/12/07/041145
  - libsound : http://libsound.io/


- V1.2.2リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809271520V122.zip
- "1.2.1"→"1.2.2" [2018/09/25]-[2018/09/27]


-クリップボードの貼り付けで拒否されて例外が出ることがある(ohtaroさん)
  - cf. https://ja.stackoverflow.com/questions/47269/powershell%E3%82%84c%E3%81%8B%E3%82%89%E3%82%AF%E3%83%AA%E3%83%83%E3%83%97%E3%83%9C%E3%83%BC%E3%83%89%E8%BB%A2%E9%80%81%E6%99%82%E3%81%ABexternalexception%E3%81%8C%E9%A0%BB%E7%99%BA%E3%81%99%E3%82%8B%E5%8E%9F%E5%9B%A0%E3%81%A8%E5%AF%BE%E7%AD%96
   >   System.Windows.Forms.Clipboard のソースコードを確認してみると、
   >   OleSetClipboardとOleFlushClipboardというOle32.dllのWin32 APIを実行していることがわかります。
   >   これらの関数で戻り値0x800401D0は、CLIPBRD_E_CANT_OPENが対応しています。
   >   これは内部でOpenClipboardの実行に失敗したことを意味します。
    うわぁぁぁぁ。
- SafeClipboard.cs追加。
- UIThread()、例外が伝播するようにきちんと書き直す。


■　2018/09/26


- 検討ウインドウをメインウインドウに埋め込んでいるときにメインウインドウを最小化するとSpliterの計算で例外で落ちるの修正。


- 検討ウインドウの表示高さの変更についてonline_manual.mdに追記。


- SkillLevelを用いた棋力調整。
  - 1級 = 以前の2級、2級 = 以前の4級、10級 = 以前の20級のように級を下方修正。(級に関してもR200刻みにする)
  - 11級～15級を追加。15級は従来の30級ぐらいに相当。
  - 5段～15級をSkillLevelを用いて調整しなおす。


■　2018/09/25


- 開始のときにメモリ不足の警告が出たあと、放置しているとエンジンがタイムアウトになるのを修正。
  - タイムアウトを30秒から15秒に変更。これ以上かかるのは異常である。エンジン側を改修すべき。
  - タイムアウトになったときにエンジン初期化中の画面から進まないの修正。
- 例外ダイアログのフォント置換をしていなかったので処理追加。
- 例外の出力形式、全体的に改善。
- ExceptionExtensions.cs追加。
- 開始のときのメモリ不足の警告を出すタイミングですでにエンジンが起動していた。
  - 警告を出してからエンジンを起動するように修正。


- 検討ウインドウのメインウインドウにfollowさせる古いコード、削除。
- メインウインドウ、閉じるときに、棋譜が残っていて、棋譜ウインドウと検討ウインドウがフロート状態だと
  ダイアログが出る瞬間にはそれらが非表示になっているのは何とか出来ないのか？
  - MainWindowのCloseイベントより先にぶら下がっているControlのCloseイベントが送られてきているから仕方ないのか…。
  - DockWindow側からe.CloseResaonを見ることで回避できた。
- 検討ウインドウの再表示のショートカット、Ctrl+Eが盤面編集とかぶってて利かなかったのでCtrl+Rに変更。


- 検討モードを終了させずに通常対局をすると思考エンジンが空になる。(T.Kさん)
  - 詰検討モードからでも同様だったのでまとめて修正しました。


- メニューとToolStripとエンジン詳細設定のフォント変更の実装。
  - ダイアログのタイトル、TabPageのタイトルのフォントが変わらない。
  - https://stackoverflow.com/questions/35529780/how-can-i-change-in-tabcontrol-the-font-size-of-a-tab-title
   > If you change the Font size of the Tab control then the font of the tab headers will change. And since Font is an ambient property it will also get passed on to all contained controls.
   - ambient propertyらしい…。TabPageのほうで変更すればよさげな？TabPageはうまく変更できた。
  - ダイアログのタイトルとToolTipのFontが変更できない。
  - ToolTipはOwnerDrawにしないとFontの変更が出来ない。
    - C# tooltipのフォントサイズを変更するには？ : https://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1180804231
    - ToolTip.Draw Event : https://docs.microsoft.com/ja-jp/dotnet/api/system.windows.forms.tooltip.draw?redirectedfrom=MSDN&view=netframework-4.7.2
    - しんどー。これはまた今度(´ω｀)/~~~
  - FormのFontはシステムが作成しているので変更できないっぽい。せめてUnicode対応してくれてないと表示がままならない。


- 棋譜Controlで生成したFontのinstanceを共有している部分、やめる。
  - Fontの親以外との共有はよろしくないという考えに基づく。
- FontReplacerのコード、整理した。半分ぐらい動いている。(気がする)
  - Fontの所有権、どこにあるのか難しい。
- メニューとエンジン詳細設定以外はだいたいFontReplacerのフォント設定が適用される状態となった。よしよし。残りはまた時間のある時にやろっと。


- Mac版の修正コードのうち、こちらで簡単に対応できそうなものについてはこちらで修正する。
- docs/Mac、Linuxで動作させるには.md 追加。
- Model.Common.Dependentに
    Windows/WindowsAPI.csと
    Mono/MonoAPI.csを用意。
  機種依存性があるものは全部ここに放り込む。
- フォントの置換は、FontReplacerを使って一括して置換することにした。
  - 作業途中。
  - ただ、ここで古いフォントを解体するの、所有権の問題があってややこしい。きちんと書かないと二重解放になる。あとでよく考える。


- Mac版、ビルドできて動いてた…。
  https://twitter.com/arrow_elpis/status/1044229423036194816


- 振り駒のアニメーションを行うハンドラ、UI Threadで実行していなかったのを修正。(Mizarさん)
  - 振り駒のときに例外が出ることがあった模様。


■　2018/09/24


- SkillLevelの説明をonline_manual.mdに追記。


- 一つ前の修正が間違った修正だったで、さらに修正。
- 検討ウインドウのリサイズイベント、ぬるぽで落ちるの修正。


- V1.2.1リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809241146V121.zip
- "1.2.0"→"1.2.1" [2018/09/19]-[2018/09/24]


- 検討ウインドウのメインウインドウへの埋込みを可能にする。その2。
  - メインウインドウ埋め込み時のリサイズのコード追加。
  - メインウインドウ埋め込み時の縦幅をメニューのウインドウから変更できるように。
- 検討ウインドウで候補手の数を変えた時に変更されてなかったの修正。
  - 検討ウインドウのdockをリファクタリングしたときに、初期化忘れてた。


- SkillLevelオプションをEngineDefineに追加。
  - 共通設定にも追加。


- メニューのファイルに「ファイルヒストリーの削除」を追加。
- メニューの棋譜編集をファイルに移動させる。
- Scanner.cs、IsRawEof追加。

- やねうら王側、engine_options.txtの読み込みにバグがあったので全バイナリ修正＆差し替え。
  - SSE2用とか動かなかったのこれが原因の可能性が。


■　2018/09/23


- やねうら王(エンジン側)にSkillLevel実装
  - 各実行ファイルをbuildしなおし。
  - エンジンビルドしなおしたら開発環境でエンジン側から応答返って来なくなった。Windows Defenderか何かに引っかかったのか？
    - Windows Defenderではなさげ。根が深そう。
- エンジン接続時にDebugLogにfile pathを出力するように。
- 例外が出て終了するときにも棋譜を保存するか確認のダイアログが表示されていたの修正。


- 10段～12段のプリセットでAutoThreadを強制していたのやめる。
  - MyShogiを２つ起動してThreads = 2とかに減らして対局させたいなどの用途において困るため。


■　2018/09/22


- 思考エンジンが選択されているときに対局設定ダイアログの名前が表示のところに反映されていなかったの修正。
- StringExtensionにEmpty()追加。


■　2018/09/20


- 連続対局で低い段位同士をやらせるとウインドウメッセージの処理機会が与えられず、
  ウインドウの操作が出来なくなってしまうの何とかする。その2
  - バッファリングしたことでだいぶ改善された(気がする)
- 検討ウインドウ、dockできるようになった。メインウインドウに埋め込み時の処理まだ。Dock状態、sizeの初期値の設定、実装まだ。
- EngineConsiderationDialog →　EngineConsiderationMainControlとrenameして、Control化。これをDockWindowに埋めて使う。
- GlobalConfigから削除

        /// <summary>
        /// 検討ウィンドウのサイズ。
        /// 記憶しておいて、次回同じサイズで生成する。
        /// </summary>
        [DataMember]
        public Size ConsiderationDialogClientSize { get; set; }

        /// <summary>
        /// 検討ウィンドウの位置。(メインのウィンドウ相対)
        /// 記憶しておいて、次回同じサイズで生成する。
        /// </summary>
        [DataMember]
        public Point ConsiderationDialogClientLocation { get; set; }

        /// <summary>
        /// 検討ウィンドウがメインウインドウを追随するか
        /// デフォルト : true
        /// </summary>
        [DataMember]
        public bool ConsiderationWindowFollowMainWindow
        {
            get { return GetValue<bool>("ConsiderationWindowFollowMainWindow"); }
            set { SetValue<bool>("ConsiderationWindowFollowMainWindow", value); }
        }


- 棋譜を読み込んだ時に対局者名に反映されない。(msomaさん)
  - 名前の表示方式を変更したときにエンバグしてました。修正しました。
- 棋譜を保存するときにKifuHeader.SetPlayerName()しているの、筋が悪いので全体的にリファクタリング。


■　2018/09/19


- 連続対局で低い段位同士をやらせるとウインドウメッセージの処理機会が与えられず、
  ウインドウの操作が出来なくなってしまうの何とかする。その1
  - 検討ウインドウ側でメッセージをbufferingする。
- 検討ウインドウのdock、大改造になるのでUpdate3に回す。
- Utility.RandをMath.Randに移動。
- Model.Extensions→Model.Collectionsにrename。
- SynchronizedList追加。


- 対局者名の下に段位、駒落ちなどの情報があったほうが良いような。
  - 余白がない。持ち時間設定のところに段位と駒落ち情報書いておく。
- 連続対局のときに平手以外なら手合割を上手のほうに書いておくべき？
  - 手番が変わるからそう簡単ではないのか。やめとく。
- 振り駒の画像が表示されないことがある。
  - エンジン初期化直後だし初回読み込みのとき0.5秒で画面素材の読み込みが間に合わないことがあるのか…。
  - 振り駒での対局が確定した時点で先読みしておく。


- V1.2.0リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809190850V120.zip
- "1.1.9"→"1.2.0" [2018/09/16]-[2018/09/19]


- 手番マーク、対局者名の色で表現したほうが良いのでは
  - 手番側を赤文字で表現するオプションを追加。(色は原色の赤だとどぎついので盤面に合わせてBrushes.IndianRedに)
  - メニューの 表示→「手番側の表現」、「対局者名の横の手番マーク」は削除。
  - いまさらだが、「対局者名の横の手番マーク」、これ「なし」にしてもなしになってなかった。修正。


- 連続対局のとき後手のHash使用率の表示がおかしいのでは。(masaさん)
  - その部分の表示のクリアをしてなくて、初段ぐらいに設定しているとhash使用率がエンジン側から送られてこないので
  それでずっと前の表示が残っていたのでおかしく見えていました。新局面ごとにクリアするようにしました。


- 棋譜ウインドウのスクロール位置を常に3手先ぐらいまで表示されているように。(T.Kさん)
  - デフォルトでmargin(先が見えている手数) = 3手としました。
  - また棋譜ウインドウの縦幅を狭めているときは、margin = (表示されている項目数-1)/2。


- マウスホイールによる棋譜のスクロール(Tatuyaさん)
  - 検討モードでメインウインドウにfocusがあるときにマウスホイールの回転で棋譜の指し手を移動できるようにした。(ShogiGUIに倣った)
  - 検討ウインドウにfocusがあるときはうまく動かない。検討ウインドウのフロート化を実装したあとで考える。
- メインウインドウにfocusがあるときにカーソルキーの上下で棋譜の指し手を移動できるように。
  - これ、ボタンがkey event食ってしまうので無理だわ。ProcessDialogKey()のoverrideが必要になる。
    - cf. https://dobon.net/vb/dotnet/form/keypreview2.html
    - [System.Security.Permissions.UIPermission(
    System.Security.Permissions.SecurityAction.Demand,
    Window = System.Security.Permissions.UIPermissionWindow.AllWindows)]
      - こんなの使うと今後の.NET Frameworkの変更の影響を受けかねない。やめておく。

        // このコードで動いて欲しかったのだが…。
        private void MainDialog_KeyDown(object sender, KeyEventArgs e)
        {
            // shift,ctrl,altなどが押されていない
            if (e.Modifiers == 0)
            {
                if (e.KeyCode == Keys.Up)
                    toolStripButton9_Click(sender, e); // 1手戻るボタンに委譲
                else if (e.KeyCode == Keys.Down)
                    toolStripButton10_Click(sender, e); // 1手進むボタンに委譲
            }
        }


- 思考エンジンのプリセットに16級～20級を追加。


■　2018/09/18


- 振り駒の乱数、.NETの乱数ではなく、もう少しマシな乱数に変更。


- 思考エンジンのプリセットに11級～15級を追加。
- マイナビ出版の将棋情報局の棋譜ファイルの件をonline_manual.mdに追記。


■　2018/09/17


- online_manual.mdに検討モードでの定跡の件を追加。


■　2018/09/16


- ResignValueの件、online_manual.mdに追加。


- 検討ウインドウの継ぎ盤の下のToolStripのほうも非アクティブからだと反応しない問題があったのを修正。


- V1.1.9リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809161340V119.zip
- "1.1.8"→"1.1.9" [2018/09/15]-[2018/09/16]


- 連続対局終了時の名前の表示を元に戻さないように修正。
  - 振り駒で先後入れ替わったときの対局のときも同じく。
- 対局設定画面の「先手」と「後手」の文字、駒落ちだと上手と下手にすべきだし、振り駒で手番が入れ替わったときも
  ややこしいし、よくない。「あなた」と「わたし」を人間時のデフォルトに変更する。


- ShogiGUIにあるような振り駒機能その2
  - 一応書けた気がする。


- ShogiGUIにあるような振り駒機能が欲しい。(math26さん)
  - 素材到着[2018/09/10]
  - image/game_effect/piece_toss_v1.png 追加
  - 表示するコードは書けた。先後入れ替えるコードやイベントなどがまだ。
- Animatorでendtime指定するの、わかりにくいのでdurationを指定するように変更。


- 棋譜の末尾の局面で駒を掴んで、「末尾の局面に進める」を行うと駒を離していたの修正。
  - KifuControl.ViewModelのKifuList、ちゃんと反映してなかったの修正。


- ToolStripのボタン、非アクティブ状態からだと2回クリックしないと反応しない。(T.Kさん)
  - ToolStripの仕様らしい…。
    - http://bbs.wankuma.com/index.cgi?mode=al2&namber=69912&KLOG=119
    - https://blogs.msdn.microsoft.com/rickbrew/2006/01/09/how-to-enable-click-through-for-net-2-0-toolstrip-and-menustrip/
    - ToolStripExを作成した。
  - MenuStripも同様みたいなので、Menuに対しても同様に。
    - MenuStripEx作成した。
- namespace MyShogi.View.Win2D.Setting →　namespace MyShogi.View.Win2D に変更
- ToolStripButtonEnum移動
  - MainDialogToolStripButtonEnumとrename


■　2018/09/15


- 駒をクリックして1手戻るボタンをクリックしたときに駒を掴んだままになる(kumaさん)
  - 修正しました。
  - 末尾の局面で駒を掴んで「末尾の局面に進める」ボタンを押すと掴んでる駒を離すが…これは末尾の局面に行くために
  手数としてint.MaxValueを指定して移動しているから変更イベントが発生してしまっているのかな。まあいいか…。


- online_manual.mdにエンジン詳細設定、ハッシュメモリの件などを追記。


- FAQのうち思考エンジンに関するQ&Aをonline_manual.mdのほうに移動。
- 古くなっていた説明を修正。
- トップページの情報更新。


- V1.1.8リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809150630V118.zip
- "1.1.7"→"1.1.8" [2018/09/12]-[2018/09/15]


- 秒読み60秒のとき「40秒・・・50秒・1・2・3・・」みたいな感じで秒読み音声を入れる。
  - 秒読み30秒のとき「10秒・・・20秒・1・2・3・・」みたいな感じで秒読み音声を入れる。
  - メニューの音声のところに設定追加。
- GlobalConfig.KifuReadOut → 他と統一するため ReadOutKifuにrename


- 対局者名、段位、手合、中断なども棋譜ファイル名に書き出す。
  - 連続対局のとき、および、ファイルに名前をつけて保存するときのデフォルトに反映。
- MessageShowType.Exception追加。
  - 例外とエラーとメッセージの表示形態を分ける
  - 例外は、専用のダイアログ。エラーは従来どおりのMessageBoxによる表示に変更する。


■　2018/09/14


- tanuki-詰将棋エンジン、少し改造。以前解けなかった問題が解けることがあるかも。

  tanuki-さんに送ったメールから抜粋。
  ・古いエントリーから消す実装を試してみたのですが、現状の方式と比較して良いとも言えない結果だったので、やめました。(´ω｀)
  ・info hashの出力間隔を短くしました。(1秒おきぐらい)
  ・hashfullのコード、少しリファクタしました。
  ・元のコードはhash_high == 0を空エントリーの判別のために使われていましたが、これだと1/2^32の確率で偶然0になってしまい、それが空のエントリーだとみなされて次にLookUpでhitしない＆潰されうるので、このコードを修正しました。(これにより、ミクロコスモス、解ける手数が少し増えました)
  ・メモリが足りずにひとたび不詰だと証明してしまうと、その周辺ノードが不詰扱いになるの、やはりこれはGUIから使うにはまずい挙動なので、generationカウンター復活させました。uint16_tで確保してあるので現実的なはずです…。
  ・不要になったTTEntryを選びたいのですが、TTEntry.num_searchedがあまりいい指標になっていないようです。TTClusterのなかのsub-treeの一番小さなものを選びたいのですが、num_searchedがそれになっていないためです。sub-treeの大きさを保持しておく変数をuint64_tで別途TTEntryに用意するしかないかなぁと思っています。(今回それはやっていません)
  ・ただ、sub-treeが一番小さなものから選んでGCで捨てるような挙動を実装しても、ある局面を探索させて、その2*n手前をgo mateで渡して探索させると、その周辺のnodeのsub-treeは依然として小さいままで、TTEntryが衝突したときに、sub-treeの大きさが小さいのですぐに捨てられてしまう、みたいなことにはなりえます。そう考えるとdf-pnは、一度go mateしたあと、2*n手前の局面でgo mateするようなことには向いていないアルゴリズムのような気はします。50手ぐらいの詰将棋自体は一瞬で解けるので、実戦棋譜の詰検討には十分なので、go mateのたびに1から読み直すのは、まあ問題ないのではないかと思いました。
  ・TTEntryをreplaceするときのsub-treeの大きさの評価として、TTEntry.pnとdnを指標に使うのは悪くないようでしたが、きちんと実験できてないので今回commitしたコードには反映させていません。
  ・詰みがある局面でnomateと返してしまうのは詰検討目的だと非常にまずい挙動なので、これが起きないようにしたいのですが、探索中のあるnodeの証明に、どこか一つのClusterで4つ目のTTEntryが必要になると、これが証明できなくなってしまうことがあるようで、おそらくこれが原因でhash使用率が20%ぐらいの段階でnomateが返ってくることがあります。この意味から、StockfishのようなCluster型のTTよりは、open addressing(開番地法)を採用してGCと組み合わせたほうが堅牢性が担保できるように思います。わりと面倒くさそうです…(´ω｀)

  とりま、気づいた点はそんなところなのですが、長手数の詰将棋が正確に解けることも大事ですが、50手ぐらいの実戦的な詰将棋が短時間で解けることも大切なので(実戦譜の検討目的なら)、そう考えるといまの実装はいまの実装として、別の詰将棋エンジンとして改良して行くほうが良いのかなぁというのも思いました。たぶんGCとか実装すると2,3倍ぐらい遅くなりかねないですし…。

- メモリが足りない警告の件をFAQに追加。


- 例外が出たときのエラーダイアログ、コピペが出来るように特別なダイアログを用意する。
  - ExceptionDialog追加


■　2018/09/13


- 「コンピューターは1手に必ずこれだけ使う」オプション、チェックボックスで無効化できるように。


- メニューの「表示」のところに「対局エフェクト」の有無の設定を追加。


- 対局中断～再開時の素材表示追加。
  - 連続対局ではなく、かつ、対局設定の「開始局面」のところが「現在の局面」ならば「対局再開」と表示。
  - 最後の指し手が「対局中断」の指し手であるなら「対局中断」と表示。
- 対局開始・終了 の素材差し替え
  - image/game_effect/game_start_v1.png
- 対局中断・再開の素材追加
  - image/game_effect/game_interrupt_v1.png


- 縦長画面では1130×1080になるように調整する。


- タブレットモードの縦置きで画面が横にはみ出すのを軽減する #56 (Mizarさんのプルリク)
  - タブレットモードの縦置きで画面が横にはみ出すのを軽減する  …
  - 1200x1080 の画面サイズを基準にスケーリングする


■　2018/09/12


- リソースリークの原因調査その2
  - 棋譜ウインドウ、丸ごと更新されるときは、差分更新やめる。
  - 棋譜ウインドウ、丸ごと更新されるときの動作が高速化した。
  - DCのleak少し減った気がする。(でも新規対局ごとに1つずつleakしている気がする)
- API Monitor : http://www.rohitab.com/apimonitor#Download
  - これで、APIが呼び出されたときに停止させて調査。
  - MyShogi.exe、32bitアプリとして動作させているので32bitアプリの限界(GDI handle 65535個まで)を引き継いでるのか…。
  - 連続対局でウインドウメッセージ処理できないとGC間に合わないという問題はありそうな。
  - leak自体はしてなさそう。描画自体追いついてないとか、そういう環境的な問題はありそう。
- メニューの「棋譜ウインドウの位置」配下の項目にショートカットキーを設定し忘れていたの修正。
- 検討ウインドウ、rootSfen設定されたときにHash使用率の値などを初期化しないといけない(忘れていた)


■　2018/09/11


- V1.1.7リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809120050V117.zip
- "1.1.6"→"1.1.7" [2018/09/10]-[2018/09/11]


- メニューの棋譜編集、対局中はdisableにする。
- メニューに「棋譜編集」という項目を追加
  - 「本譜以外の分岐をクリアする」はそちらに移動。
- 棋譜ウインドウのボタンの文字位置調整。
- コンピューターが1手にx秒使うの、検討モードは除外するの忘れていたので修正。
- リソースリークの原因調査
  - GDI View : http://www.nirsoft.net/utils/gdi_handles.html
- 畳の色を変えたときなど前回にメモリ上で合成したBitmapを解放していなかったの修正。
  - この他はわからない。リーク自体はしていないように見えるのだが…。
  - 連続対局でリソース不足するのは、Windowメッセージのcallbackが溜まりすぎの可能性も..


- 本譜のみを書き出す機能
  - 本譜のみを書き出す、でファイルに書き出したあと「上書き保存」はどういう挙動になるのかだとか、わりと混乱を招きそう。
  - 本譜のみを書き出す機能を追加するのではなく、本譜以外の分岐をクリアする機能を追加することにした。
  - メニューの「ファイル」→「本譜以外の分岐をクリアする」
  

- HASH使用率、50%を超えたところで赤い文字で表示するようにした。
  - HASH使用率が高いと探索効率が悪くなっていることをユーザーにわかってもらうため。
  - HASH使用率、クリア直後 0%と表示する。


- KIF : Kifu for Windowsのしおりを使った棋譜を読み込むと例外で落ちるのを修正。
- KIF/KI2: "&" で始まる行を無視するように #54(Mizarさんのプルリク)
  - Kifu for Windows の"しおり"機能。
  - 現在は対応する構造体が無いため、誤ってしおり内の文字列から指し手文字列を拾わないように単にこの行を無視する。


- tanuki-詰将棋エンジン , 詰探索中の出力を変更した (#91)   (tanuki-さんのやねうら王へのプルリク)
  - clang++によるコンパイル警告を抑制した
  - 詰探索中の進捗状況の出力を変更した
  - Hash使用率が1秒ごとぐらいに更新されるようになった。
- online_manual.mdに詰将棋エンジンに関する説明追加。


- コンピューター側、指し手が速すぎて追いかけられないので、1手に必ず1秒使うようなモードが欲しい。
  - コンピューターが返したbest moveに対して、x[ms]になるまでGUI側が指し手を無視する機能を用意しました。
  - 対局設定ダイアログの「コンピューターは1手に必ずこれだけ使う」


■　2018/09/10


- Updater、zipファイルを展開せずに実行したときに警告メッセージを表示して終了するようにした。

- Updater、app.manifestちゃんと書いて、管理者として起動するようにした。


- KIF/CSA: 激指定跡道場4への対応 #53(Mizarさんのプルリク)
  開始文字列「'」をCSA形式のコメント文であるとしてCSA形式と判定
  激指定跡道場4のCSA形式ファイル出力はコメント行で始まる
  開始文字列「+」「-」をCSA形式の指し手であるとしてCSA形式と判定
  古いCSA形式の規定ではいきなり手番指定や指し手で始まる場合がある？
  開始文字列「先手」「後手」をKIF/KI2形式として判定
  KIF/KI2形式で「: 」（半角の":"＋半角空白）はヘッダ行として解釈しないまま変更しない
  KIF/KI2形式で「 / 」はマルチステートメント区切り子として解釈しないまま変更しない
  激指定跡道場4はクリップボードへの棋譜の書き出し似非KI2形式出力できるが、先頭行が「先手: 先手 / 後手: 後手」となっている。
  激指定跡道場4で確認した限りではこの行の出力は固定で、先手/後手の対局者名は書き出せていない。
  下手に対応すると不味そうなので、KIF/KI2形式と判定するものの、この先頭行はヘッダ行ではないとして読み飛ばす方針。


- Updater、管理者権限で実行しているかのテストを行うようにした。
  - 最初から管理者として実行されていれば起動しなおさないようにした。


- V1.1.6リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809101620V116.zip
- "1.1.5"→"1.1.6" [2018/09/08]-[2018/09/10]


- 先手と後手の名前の所の一番左に先手なら「▲」、後手なら「△」みたいな先手後手が一目で分かる記号を入れる。
  - 盤を反転することが何度もあると、先手後手が見た目で一目で分かった方がいいため。
  - メニューの「表示」→「対局者名の先頭の手番記号」追加。「☗」「☖」か、「▲」「△」を付与できるようにした。
  - 「対局者の手番表示」、意味がわかりにくかったので「対局者名の右に手番マークの表示」と変更した。
- FAQ、Update1.3という表記とV1.XXという表記が混在していて紛らわしいので、すべてV1.XXという表記で統一した。


- 対局結果、駒落ちのときの結果を先手勝ちではなく下手勝ちのようにする。(math26さん)
  - この対応のため、対局結果のcsvに平手か駒落ちかも出力するfieldを追加しました。
  - 以前の棋譜に対しては対局結果画面で見ても修正されません。以降の駒落ち戦のみ修正して記録されます。


- 起動時、working directoryをMyShogi.exeの実行ファイルがあるフォルダに変更するコードを追加
  - これをしておかないとショートカットなどでworking directoryが変更になっていると困る。
- 起動時にファイル名が1つだけ指定されていれば、それを棋譜ファイルとして開く。
  - これをしておかないと拡張子関連付けで開けなくて困る。


■　2018/09/09


- FAQにUpdate手順の記事へのリンク追加。


- Updaterのアプリケーションアイコンの設定


- メインウインドウを最小化したときに検討ウインドウをタスクバー上で非表示に。(kumaさん)
  > ShowInTaskbar = false;
  - 最小化から復帰させたときに他のウインドウの背後に行くので、メインウインドウと親子関係を持たせる改造もしたほうがよさげ。
  - 検討ウインドウに関しても、DockWindowをShowInTaskbar = false;にしたので、Visibleを切り替えたり、Activeにしたりするコードが不要になった。


■　2018/09/08


- 対局終了直後だけ、「◀」ボタンを押しても一手戻らない件。
  - 修正しました。


- 棋譜ウインドウの表示位置を変更したときに一瞬、変な位置に表示されてから移動していたのを修正。


- 棋譜ウインドウFollowモードにして、戻したときに元の場所に戻らないの修正。
- 棋譜ウインドウ、フロートさせて戻すとtooltip表示されなくなる。tooltipまわりのバグっぽい気がする。


- 棋譜を開くときに、棋譜ウインドウがTopMostなのでファイルダイアログより前面に出てくるの改善。
  - Owner設定するようにして、TopMostやめた。


■　2018/09/07


- マイナビ公式でUpdate1.3(V1.13)が公開されたので、FAQなど更新。


- V1.1.5リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809080020V115.zip
- "1.1.4"→"1.1.5" [2018/09/07]-[2018/09/07]
  - 表示されているバージョン変更するの忘れてた。


- メインウインドウを最小化したときに棋譜ウインドウをウインドウ化しているときには非表示にするように。(kumaさん)
- 実行ファイルのアプリケーションアイコンを設定。(kumaさん)


- tanuki-詰将棋エンジン , 置換表エントリの世代を削除し、置換表エントリのハッシュの最下位ビットに探索開始局面の手番を入れるようにした #89 (tanuki-さん。やねうら王へのプルリク)
  - この修正により、一度解いた局面を解かせるときには一瞬で応答が返ってくるようになった。
  - 不詰の局面を解かせたあと、詰む局面で不詰と返ってくることがある。tanuki-さんに報告。


- 棋譜ウインドウの文字の大きさ、変更できるようにしてみる。
  - メニューの「ウインドウ」→「棋譜ウインドウ」のところから？
  - Ctrl + "+"とか"-"とかで直接変更できたほうが嬉しいような気も…。
  - 無段階に変更できたほうが嬉しいが、ショートカットキーだとわかりにくい気もするんだが…。
  - ウインドウモード時にボタン追加するか…。
    - 追加した。
  - 対局中のボタン、非表示にするコードなど間違っていたので修正した。


- 棋譜ウインドウに「消一手」ボタン追加。
  - 棋譜の末尾を1手消す操作
  - 棋譜ウインドウのボタンにtooltip追加。


- CreateDirectory、Updaterのほうも同様の修正を適用する。


- 棋譜の自動保存に失敗したときに例外を捕捉するようにした。
- .NETのCreateDirectory()、セキュリティ的なbugがあるので自作すべき。
  - cf. Directory.CreateDirectory() method bug fixed
    https://www.codeproject.com/Articles/10160/Directory-CreateDirectory-method-bug-fixed
  - Scriptingを使う実装は移植性下がりそうで嫌だな…。これはやめとく。


■　2018/09/06


- V1.1.4で対局中に閉じるときなど、警告ダイアログが2回出るようになっていたの修正。


- やねうら王エンジンのほう、修正が色々あったのでV4.83にバージョンナンバーを上げる。


- tanuki-詰将棋エンジン バグ修正。
  詰将棋ルーチンで受け側の局面から探索させたあとに攻め側の局面から探索させると不詰と出力されるバグを修正した #88 (tanuki-さんのやねうら王へのプルリク)
  - 世代カウンターで判別しないほうがいいような？tanuki-さんにメールする。


- GitHubのissueに要望書くの筋が悪いようなのでcloseする。
  要望・バグ報告、GitHubのissueを使うのは筋が悪いようなので、以降、ブログ記事のコメント欄のほうを使うことにして、ここはcloseします。
  とりま、Update2まではこちらで。→　『将棋神やねうら王』Update2までの遊戯施設


- バグ報告・要望を書く用のブログ記事用意
  - 『将棋神やねうら王』Update2までの遊戯施設 : http://yaneuraou.yaneu.com/2018/09/06/%E3%80%8E%E5%B0%86%E6%A3%8B%E7%A5%9E%E3%82%84%E3%81%AD%E3%81%86%E3%82%89%E7%8E%8B%E3%80%8Fupdate2%E3%81%BE%E3%81%A7%E3%81%AE%E9%81%8A%E6%88%AF%E6%96%BD%E8%A8%AD/


- V1.1.4リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809062300V114.zip
- "1.1.3"→"1.1.4" [2018/09/04]-[2018/09/06]


- 棋譜ウィンドウのフロート機能を追加。その6。
  - FollowとDockの文字を逆にする。
  - 上下左右、好きなところにDockさせられるようにする。
  - 細長い駒台のときにフロートさせている棋譜ウインドウに棋譜が表示されないの修正。
  - 棋譜ウインドウ、フロートさせて、×ボタンで閉じると破棄されたウインドウになるの修正。
  - 棋譜ウインドウにDockWindow化したときにTopMostを指定する。
- FAQに深さの「○／○」の意味追加。


- 棋譜ウィンドウのフロート機能を追加。その5。
  - DockWindowに対して、位置を保存しておく機能追加。
  - 位置保存/復元も出来た。これで棋譜ウインドウのフロート機能完成。
  - 評判が良ければ、検討ウインドウもフロート機能を追加するつもり。


- CSA: 一部ツールの出力する棋譜による不具合に対応 #52 (Mizarさんのプルリク)
  - 将棋ウォーズ棋譜管理ツールというフリーソフトで保存したcsa形式のファイルが読み込めない。(てらっちさん)


- 棋譜ウィンドウのフロート機能を追加。その4。
  - そこそこ動くようになった。位置を保存するコードはまだ。
  - 検討ウインドウのサイズと位置を保存するコード、メインウインドウのresizeイベントで処理しているのでメインウインドウを動かさないと保存されていない。あとで修正する。


- tanuki-詰将棋エンジン、詰みの局面に対してgo mateすると以降、おそらく不詰を置換表に書き込んでしまい、
  詰みの3手前の局面が解けなくなってしまうバグがあるようだ。tanuki-さんに修正を依頼。

- tanuki-詰将棋エンジン、ハッシュエントリをつぶすとき、探索ノード数を考慮するようにした #87 tanuki-さんのやねうら王へのプルリク
  - tanuki-詰将棋エンジン、差し替え。


■　2018/09/05


- 棋譜ウィンドウのフロート機能を追加。その3。
- MostRecentUsedFiles、NullCheckダサいので、OnDeserialize()を追加する。


- 棋譜ウインドウや検討ウインドウのフローティングを管理するためのクラスを用意。
  - DockManager.cs
  - Model.Common.Utilityにあったファイル整理
    単発で(使いたいときに1度呼び出すだけで)使うものは、Common.Utility
    長いライフタイムで使うものは、Common.Tool
    文字列を処理する関係は、Common.String
    拡張メソッド関連は、Common.Extensions
    に移動させる。
  - MostRecentUsedFilesにnull check追加。


■　2018/09/04


- 棋譜ウィンドウのフロート機能を追加。その2。
  - メニューの「ウインドウ」→「棋譜ウインドウ」→「フロート」でフロートできるようになった。
  - フロート状態を次回起動時に復元するようにした。
  - 次回起動時用の位置の復元などはあとで書く。


- 駒をクリックするときにマウスカーソルを微小動かすと駒のドラッグ処理になり、駒を掴んだ直後に駒を離してしまう。(地球市民さん)
  - 確かにあまり嬉しくない挙動なので修正しました。


- Setup: ショートカットで WorkingDirectory="TARGETDIR" になっていなかった事の修正 #51(Mizarさんのプルリク)


- 連続対局のときの勝数、win-lose-draw ではなくwin-draw-loseに変更する。(odagaki0621さん)



■　2018/09/03


- Updater V1.3


- V1.1.3リリース。: Update1.3
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809031400V113.zip
- "1.1.1"→"1.1.2" [2018/09/01]-[2018/09/03]


- 起動時にファイル名を渡して、その棋譜を直接開いてくれる機能が欲しい。(相馬さん)
  - 『棋譜の管理』という棋譜データベースからの連携でそういう機能があると便利らしい。
  - MyShogi.exe -f [ファイル名] で、その棋譜ファイルを起動時に開くようにしました。
  

- エンジンが選択されていないときに対局設定ダイアログを閉じると例外が出る。(相馬さん)
  - 検討エンジン設定、詰将棋エンジン設定も同様だったので、修正しました。


- FAQに連続対局で同一の棋譜になる件、追加。

- MyShogi Updater、「アンチウイルスソフト」→「セキュリティソフト等」とメッセージを変更しておく。

- MyShogi Updater エラーメッセージを強化、ファイルコピーの時の整合性のチェック追加。


- V1.1.2リリース。:Update1.2
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809030600V112.zip
- "1.1.1"→"1.1.2" [2018/09/01]-[2018/09/03]


- ImageLoaderで遅延読み込みを指定しているときに画像がないと無限再帰になるバグ修正。
  - (Update1のUpdaterで画像コピーに失敗したらこの現象が起きてた)
- PlayerSettingControlで読み込んだ画像、明示的に解放していなかったの修正。
- EngineConsiderationDialogSettingでControlBinderのUnbindAll()とImageLoaderのDipose()呼び出していなかったの修正。


■　2018/09/02


- docs/TODO.md削除 (完了してたので)


- 棋譜ウィンドウのフロート機能を追加。その1。
- メニューの「ウインドウ」→「棋譜ウインドウ」の「フロート」追加。


- FAQに「十二段」の計測結果を追加。


- 棋譜を書き出した時に「棋譜が保存されていません」のメッセージが出る。(tooroさん)
  - KifuWriteCommand()でKifuDirty = falseに。


- FAQ: Windows 8.1 Update について追記。 (#50) (Mizarさんのプルリク)


■　2018/09/01


- 直近に開いたファイル、"c:.."のようになっているのを"c:\.."のように修正。


- V1.1.1リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201809011130V111.zip
- "1.1.0"→"1.1.1" [2018/08/31]-[2018/09/01]


- 思考エンジンのプリセットに「十段」「十一段」「十二段」を追加
- 思考エンジンの「八段」「九段」のNodeLimitsを少し下方修正。
- 「九段」以下が、2スレッド固定の探索になっていなかったの修正。
- UsiEngineHashManagerがプリセットの値を反映しなかったの修正。


- 検討ウィンドウのカラムの横幅、あるフィールドの横幅を0にすると、次回起動時そのフィールドの幅がデフォルトサイズに戻ってしまう。(tooroさん)
  - 修正しました。
- ファイルメニューあたりに直近に開いたファイル数個が表示されて欲しい。(tooroさん)
  - 対応しました。
- 対局結果一覧から棋譜を開いて、検討でマウスで駒を動かしたあとに上書き保存したときにそのファイルに上書きされなかったの修正。
- MostRecentUsedFiles追加。
- ToolTipHelper、Model.Commonのほうから、View.Commonのほうに移動。


- 思考エンジンのプリセットに「十段」と「十一段」追加予定。uuunさんにNodeLimits確認。
  - 検討や棋譜解析時に、プリセットで選べると便利なような気は少しする。


- 連続対局の表示、どちらが何勝であるか、わかりやすく。(uuunさん、masaさん)
  - 表示に対局者名を追加しました。
- 連続対局の表示の文字色、見づらいので青～黒系を希望。(masaさん)
  - 青文字で白色の影を入れてみました。
- メニューの「情報(&I)」を「ヘルプ(&H)」に変更。(kumaさん)


■　2018/08/31


- FAQ、WIP整理その2。


- FAQ、WIP整理。


- Update1(非公式)の公開に合わせて、ドキュメント類を更新。


- V1.1.0a
- 対局結果ダイアログ、デスクトップ画面が小さくて高dpi環境だとボタンが表示されない。
  - 修正しました。


- Setup: Update1 (#49) (Mizarさんのプルリク)
  - Update1フルインストーラ版の設定になります。


- V1.1.0リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808310900V110.zip
- "1.0.9"→"1.1.0" [2018/08/31]-[2018/08/31]
- 問題なければこれをUpdate1とする予定


- メモリの多いPCでしばらく連続対局などランニングさせてみる。


- 対局者名にpreset含めて保存すると、棋譜から読み込んだときに対局設定ウィンドウの対局者名のところがプリセットまで埋まってしまう。
  - 棋譜上の対局者名はプリセットを含めないように修正。
- ListView、フォーカスを失ったときに選択行が解除されたように見えるので(実際は選択されている)
  ListView.HideSelection = falseにする。(検討ウインドウ、対局結果一覧ダイアログ)
  - 実際には、これだけでは不足で、listView.Select()も必要。


- 対局結果の保存設定ウィンドウの項目変更。
  - 保存上限数の設定、なくす。保存した(ファイルとして実在する)棋譜ファイルが勝手に消える仕様はわかりにくい。
  - 連続対局のときにフォルダを自動作成するオプション追加。
    - GUIを複数立ち上げるときにファイル名がかぶったりして気持ち悪いため。
- 棋譜ファイルを保存するときなど、フォルダがなければ自動的に作成するように。


- 対局結果一覧ウィンドウに「対局結果一覧のクリア」ボタンを追加。
- 対局結果一覧ウィンドウで、棋譜保存フォルダを開くボタンをクリックしたとき、棋譜が選択されていれば、
  そのファイルが選択された状態でexplorerを開く。
- 連続対局でないのに対局結果に連続対局として書き出していたの修正。


- 対局結果一覧を記録しているcsvファイルの追記、排他openにする。ソフトの同時起動のため。(masaさん)
- 対局結果一覧ウィンドウに保存先フォルダを開くボタン追加。
- 対局結果一覧に連続対局のときにプレイヤー名とプリセットを記録。


- 連続対局中にその旨を画面上に表示するように。(48さん他)
    - 対応しました。勝敗とRも表示するようにしました。
    - 対局結果一覧ウィンドウにも反映するようにしました。
- 対局結果一覧ダイアログに持ち時間設定の列を追加。
- ratingについての説明をonline_manual.mdに追記。


- 棋譜ファイルを読み込んだ時に駒落ちのときに対局開始時に上手/下手と表示されないことがある。(48さん)
  - 駒落ちの判定きちんとするようにしました。(任意局面であっても駒が平手から欠落していれば駒落ちと判定。後手側が上手、先手側が下手と判定。)
  - KifuTree.rootSfen , rootBoardType、setterをprivateに変更。SetRootSfen(),SetRootBoardType()追加。
- AssemblyVersionを"1.2.0.0"に変更。(忘れないようにいまのうちに)
  - 1.0.10ってV1010って書くと紛らわしいので1.0.10ではなく1.1.0にする。なのでUpdate1はV1.20に設定しておく。


- 本ソフトで書き出した棋譜ファイルが柿木将棋で読み込めない件について追記。
- AssemblyVersionを"1.1.0.0"に変更。(忘れないようにいまのうちに)


■　2018/08/30


- V1.0.9リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808300915V109.zip
- "1.0.8"→"1.0.9" [2018/08/28]-[2018/08/30]


- 対局結果一覧ダイアログその3
  - 対局結果棋譜の読み込みが出来るようになった。とりま、対局結果一覧はこれでいい感じ。
  - あとは、連続対局の戦績を出力しといたほうがいいかも。あとで考える。
- 秒読みのときに対局中断したときに、0/10のように分子が0になってしまうのを修正。
  - タイマーを停止させる直前の文字列を復元するようにした。


- 対局結果一覧ダイアログその2
  - 保存項目に持ち時間設定、手合割追加。
- 対局終了後、ネームプレートが初期化されるの修正。


- メニューに「ウィンドウ」→「対局結果一覧」その2
- 対局結果の自動保存処理追加。
  - csvファイルにAppendLineする。
  - 棋譜情報に棋譜の手数も追加。
  - 棋譜の自動保存の処理書けた。
- 棋譜に名前をつけて保存するときに思考エンジンの場合はプリセット名も含めて保存するように。


- メニューに「ウィンドウ」→「対局結果一覧」その1
  - これ、まだ作業中。
- メニューに「ウィンドウ」→「対局結果の自動保存設定」追加。
  - 設定項目を終了時に保存/起動時に反映するようにした。
- GameResultDialog作成。


- CsvTable、部分ViewとKeyValueの機能削除して、単純化する。
- GameResultData追加。
- GameResultSettingをLocalGameServer.Settingに移動。


- 盤面編集で移動元と移動先が同じだと手駒が増える。(masaさん)
  - 前回仕様を変更したときの修正忘れでした。修正しました。


- Updater、アップデート内容の書かれたファイルは、"V100toV108_info.txt"のようにして、これをアップデートするsourceフォルダに配置することに変更。


■　2018/08/29


- 千日手の判定がおかしい。(masaさん)
  - Hashの計算用のテーブルの手駒のところの初期化が一部間違っていて、手駒があるときに同一局面だと判定されないバグがありました。修正しました。


- Updater完成した。いい感じ。


- V1.08aとしてzu2さんに配布。

- 対局中に長時間放置しているとメモリ不足で落ちる。(zu2さんの指摘)
  - Fontがリソースリークしているかと思ったら違うような…。
  - 反転ボタンを押すごとにUser obj countが増えていく。なんぞこれ…。もしかして前のmenu item解放されてないのか。
  - メニュー、更新したときに前のメニュー解放していなかった模様。これでUser obj count、ほぼ増えなくなった。
- FontUtility追加。usingできないときは、なるべくこれを使うようにする。
- LocalGameServerのworker、sleepする時間を可変(max = 10ms)に変更。


■　2018/08/28


- Updater作る。別のプロジェクトとして。
  - MyShogi/Updater に掘ってみる。
    - バイナリレベルでmasterと同一のファイルは配布対象に含めなければ
      Updaterを公開しても単体で起動できるわけでもないので良いのか…。
    - Updater、バイナリレベルで同一か調べて差分だけ抽出するコード書けた。


- ミニ盤面を対局開始の局面になっているほうが良いのでは。(masaさん)
  - そうするようにしました。
- ミニ盤面、駒落ちのときに駒が駒箱のところに散らばったままになるの修正。
- 細長い駒台表示のときに駒落ちにしてると駒箱のところに駒が表示されるの修正。


- 棋譜ウィンドウの文字小さすぎ問題とミニ盤面小さすぎ問題をFAQに追加。


- V1.0.8リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808281815V108.zip
- "1.0.7"→"1.0.8" [2018/08/25]-[2018/08/28]


- 「先後入替」したときに、「後手の時間設定を個別にする」でなければ先後の持ち時間を入れ替えるべきでない。連続対局についても同様。(48さん)
  - 対応しました。
- 対局設定の「入玉ルール」のところComboBox少し右にずらす。(フォントによっては左のラベルに重なっていたので)
- 対局設定ダイアログに連続対局のときに連続対局のときに先後入れ替えないオプションを追加(ShogiGUI、将棋所にはあるらしいので)
  - MiscSettings.ContinuousGameNoSwapPlayer追加。
- 連続対局でプレイヤーを入れえるとき、終了後に元の状態に戻す処理追加。
- 「先手」と「後手」を先後入れ替えたときに、この名前まで入れ替わるの少し気持ち悪いが、これが入れ替わらないと
  入れ替えたことがユーザーに伝わらない可能性もあるのでもどかしい。


- 盤面編集で移動元・移動先の2駒交換になるの、将棋所やShogiGUIのように手駒に移動して欲しい。(matrixさん)
  - そのように仕様変更しました。また2駒目が玉の場合、駒箱に移動するようにしました。
  - あと、手駒の駒を盤面に移動させたとき、その升に駒があったら、手駒を移動させたほうの駒台にその駒を戻すようにしました。


- 対局開始時、駒落ちなら「先手」「後手」ではなく「上手」「下手」と表示。(masaさん)
  - image/game_effect/game_black_white_v1.png追加
  - image/game_effect/black...とwhite...を削除
  - コードなんやかや追加。
  - BoardType.HANDICAP_PAWN3 → HandicapPawn3にrename。なんでこれだけこんな表記になっているのか…。
  - 駒落ちの再開局で「先手」「後手」になるか？→一応、ならない。(再起動してなければ)
  

■　2018/08/26


- CSV形式の読み書きのためのクラス追加。
  - 6年前に作ったものをそのまま…。
  - CsvTableのほう使いにくいのであとで書き直す。


- 『将棋神やねうら王』のダウンロード版でzipを解凍する手順をFAQに追加。


■　2018/08/25


- 「対局開始」「勝利」などの表示位置を少し下げる。


- FAQ: .NET Framework (#48) (Mizarさんのプルリク)
- KIF: 局面図出力機能を分離 (棋譜ルーチンの流用では最終手出力が出来ないため) (#47) (Mizarさんのプルリク)
- Tree.rootSfen set() 前に Tree.position.SetSfen() を済ませる #46 (Mizarさんのプルリク)


- 詰みの局面から開始したときに、「対局開始」だけが表示されるの「対局終了」だけが表示されるように修正。
- 検討モードに入るときにも「対局開始」と表示されていたの修正。
- IAnimater、生存開始時刻を設定できるように変更する。


- V1.0.7リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808251000V107.zip
- "1.0.6"→"1.0.7" [2018/08/24]-[2018/08/25]


- 人間同士の対局で、検討ウィンドウが必要ないときは、最初から生成しないようにする。
  - 子ダイアログを一瞬表示して消すと(デスクトップと親ダイアログの再描画が発生して)画面がちらつくので。


- 対局開始時に盤面反転が起きるときに盤面がちらつくことがある問題修正その3
  - BoardReverseとPositionが整合性が取れてないのに描画するのがおかしいのか…。
  - 違った。OnDraw()のなかで勝手にLocalGameServer.BoardReverseの値を使っているメソッドを呼び出していて、BoardReverseに関して一貫性がなかった。
- コメント、片玉→単玉とrenameしとく。


- 対局開始＆対局終了、勝ち、負け、引き分けの画面エフェクト追加その3
  - LocalGameServerに対局開始イベント追加。
  - LocalGameServerに対局終了イベント追加。
  - 綺麗に表示されるようになった。いい感じ。


- 対局開始時に盤面反転が起きるときに盤面がちらつくことがある問題修正その2
  - csaのところ修正間違えていた。


- 対局開始時に盤面反転が起きるときに盤面がちらつくことがある問題修正。
  - rootSfenのsetterでPosition.Clone()をするのでこのsetterの呼び出しまでにKifuTree.position.SetSfen()などが完了していないといけない。


- KIF: 局面図出力で1手前が無くとも問答無用で1手戻そうとしていた #45 (Mizarさんのプルリク)
  * KIF: 局面図出力で1手前が無くとも問答無用で1手戻そうとしていた
  * KIF: 最終手出力ではなく2手前を出力しようとしていた
- 局面図書き出すときにgamePlyも書き出していて、これきちんと復元されているけど、これいいのかな。
  - この仕様のほうが嬉しいことはあるのか…。


- 対局開始＆対局終了、勝ち、負け、引き分けの画面エフェクト追加その2
  - AnimateManagerクラス追加。綺麗に設計できた。


- 対局開始＆対局終了、勝ち、負け、引き分けの画面エフェクト追加その1
  - image/game_effect/ に素材追加
  - SpriteManagerに追加。


- 対局結果一覧設定ダイアログ作成その2
  - GameResultSetting.cs追加
  - GlobalConfigにGameResultSetting追加


- 棋譜ウィンドウのデータバインド、あまり洗練されたコードではないのでリファクタリングする。
  - あまり綺麗にならなかった。まあこれはこれでいいや…。
- 棋譜ウィンドウの ">" あまり気持ちよくないのでこれ表示されないように改良したい。
  - これ分岐棋譜のためのmarkerにしているから難しい。あとまわし。


- 連続対局、「現在の局面」から行えるように。
  - KifuManagerのCloneの処理追加する。内部的にKifに書き出して、それ復元するのでも良いような…。たぶん現実的にはそれで十分なような。
    - どうせ、対局結果一覧ウィンドウが、kif形式で保持しているのでそれでいいのか…。そうか…。
- 連続対局絡みの構造体を用意する。
  - ContinuousGame.cs追加。


- 棋譜の途中の局面を保存するときに新しく追加されたassertに引っかかる。(masaさん)
  - SVG対応の時に壊しているっぽい。Mizarさんに修正依頼。
- Positionクラス、Debug.Assert()追加


■　2018/08/24


- V1.0.6リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808241400V106.zip
- "1.0.5"→"1.0.6" [2018/08/22]-[2018/08/24]


- 棋譜の分岐の途中の局面から対局を開始したときに、棋譜ウィンドウの選択行がその局面ではなく分岐開始のところになるのを修正。
- 次分岐ボタンが有効(Enable = true)な状態で対局再開したときにずっと次分岐ボタンが有効になっているの修正。
- 「対局開始」素材受け取った。


- オンラインマニュアル更新。書きかけのところ、だいたい書いた。


- 分岐を作って、その分岐の手で「本譜」ボタンを押した直後に「次分岐」ボタンが効かない。(ぐららるさん)
  - 分岐ボタンのあと本譜ボタンを押したときに局面がその棋譜の選択箇所の1手前になってしまっている。
  - 本譜ボタンの挙動を修正した。しかし何か思っている挙動と違う気がするのでもう少し検証が必要。


- 連続対局の2局目以降も、エンジン初期化中の表示が(必要ならば)出るようにした。
  - 通例、再初期化には時間を要しないため、一瞬で終わるから見れないはずではあるが。


- 連続対局で2度目以降もisreadyを送信するようにして、かつ、ゲームが終了するごとにgameover win | loseを送信するように。
- 連続対局のときにisreadyしてないけど、メモリ逼迫してきて結局足りなくなるということはないだろうか…。
  - 現状、gameover winとか送ってないし、usinewgameしてないけど、これどうなんだろう…。
  - それを言うとisreadyも二度目送らないといけないことになるが(現状送ってない)
  - 二度目のisready不要ということにするかusinewgameが不要ということにするか。
  - やはり、二度目のisreadyも送るべきではあるな…。
  - gameoverとisready送信するようにしよう。
  - hashの再確保は時間かかるから、しないことにしよう。連続対局1000局ぐらいで落ちるならHash減らしてもらうしか。
- メニューの表示のところ、ショートカットキーが重複してたの修正。


- 連続対局の途中で対局開始をしたときに例外で落ちることがある。(masaさん)
  - Restartの処理がまずかったので修正。
- デバッグウィンドウに「ログのクリア」ボタン追加。


■　2018/08/23


- ダウンロード販売の開始間際なのでFAQなど追加その2


- ダウンロード販売の開始間際なのでFAQなど追加。


■　2018/08/22


- faq整理


- 「デバッグの開始」を選ばずともログは全部メモリ上に残していくようにする。
  - １試合数百kB程度だと思われるので、1000試合でも数百MB程度であるから…。
    (普通の人は1回の起動に対して1000試合も回さないだろうし)
  - デバッグログの軽量化(Listをコピーしていたところを改善)
  - 「デバッグの開始」をメニューから削除。「デバッグウインドウ」→「デバッグ用のログ」に変更。
  

- V1.0.5リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808220910V105.zip
  - "1.0.4"→"1.0.5" [2018/08/21]-[2018/08/22]


- 詰検討のエンジン設定の個別設定に自動Hashの項目がないの修正。
  - 忘れてた模様。
  - 見出しも追加。


- 詰検討でミクロコスモスの3手前の局面が解けない件
  - tanuki-さんに報告。

2018/08/22 8:43:26'404 [2>] checkmate nomate
2018/08/22 8:43:27'854 [2<] position sfen g1+P1k1+P+P+L/1p3P3/+R+p2pp1pl/1NNsg+p2+R/+b+nL+P1+p3/1P3ssP1/2P1+Ps2N/4+P1P1L/+B5G1g b - 1 moves 4b4a+ 5a5b 7d6b+ 5b6b 7a6a 6b5b 6a5a 5b6b 8d7b+ 6b6c 6e7d 6c7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b 1a2a 2b1b N*2d 2c2d 2a1a 1b2b 1d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 4d3d 3a4a 4b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*1d 1c1d 1a2a 2b1b 2d1d P*1c 2a1a 1b2b 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 1d2d L*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d L*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*3d 3c3d 7g7f 4e4d 3a2a 2b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d L*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*1d 1c1d 1a2a 2b1b 2d1d L*1c 2a1a 1b2b 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b 1a2a 2b1b N*2d 2c2d 9i8i 4d4e 2a1a 1b2b 1d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*1d 1c1d 1a2a 2b1b 2d1d P*1c 2a1a 1b2b 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 1d2d L*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d L*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*3d 3c3d 8i8h 4e4d 3a2a 2b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d L*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*1d 1c1d 1a2a 2b1b 2d1d L*1c 2a1a 1b2b 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b 1a2a 2b1b N*2d 2c2d 8h7h 4d4e 2a1a 1b2b 1d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*1d 1c1d 1a2a 2b1b 2d1d P*1c 2a1a 1b2b 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 1d2d L*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d L*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*3d 3c3d 7h7g 4e4d 3a2a 2b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d L*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*1d 1c1d 1a2a 2b1b 2d1d L*1c 2a1a 1b2b 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b 1a2a 2b1b N*2d 2c2d 7g6g 4d4e 2a1a 1b2b 1d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*1d 1c1d 1a2a 2b1b 2d1d P*1c 2a1a 1b2b 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 1d2d L*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d L*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*3d 3c3d 6g6f 4e4d 3a2a 2b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d L*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 3d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b L*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*1d 1c1d 1a2a 2b1b 2d1d L*1c 2a1a 1b2b 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b N*2d 2c2d 2a3a 3b2b 1d2d P*2c 3a2a 2b3b 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b N*3d 3c3d 3a4a 4b3b 2d3d P*3c 4a3a 3b4b 5a4a 4b5b 6a5a 5b6b P*6c 6b7b 7d8c 7b6c 8c8d N*8c 8d7d 6c6b 5a6a 6b5b 4a5a 5b4b 3a4a 4b3b 2a3a 3b2b N*1d 1c1d 9c8b 9a8b 1a2a 2b1b P*1c 1b1c 1g2e 3f2e 1h1d 2e1d 3d1d 1c1d L*1f 1d2d S*2e 2d3e 5g4f 3e2f 6f4h 4g4h 4f3f 2f1g S*2h 1g1h
2018/08/22 8:43:27'854 [2<] go mate infinite
2018/08/22 8:43:27'885 [2>] info string pn 100000000 dn 0 nodes_searched 0
2018/08/22 8:43:27'901 [2>] checkmate nomate
2018/08/22 8:43:30'528 [2<] quit


- 詰検討が落ちる件(ぐららるさん)
  - まだメモリが二重に確保されてました。メモリ不足で落ちているようでした。エンジン側を修正しました。


- 全体的に1秒多いの修正。
  - 1手3秒なら時間切れのときに計測3秒になるべき。修正。
  - 秒読みのときに時間切れになったときに残り時間の表示が0/3になるのおかしいので修正。
- bestmove、受信した時までの時間を用いるべきような気がする。(いまはbestmoveをUsiEngine.BestMoveから取り出したときまでの時間)
  - この修正、大変なのでまあいいや…。



■　2018/08/21


- #44のプルリクのソースコード上のコメントなど、修正。


- 表示手番文字を▲△から☗☖に戻す・CSA形式の表示選択追加 #44(Mizarさんのプルリク)


- V1.0.4リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808211600V104.zip
  - "1.0.3"→"1.0.4" [2018/08/19]-[2018/08/21]


- メニューの表示のところから棋譜ウィンドウと検討ウィンドウの読み筋のところの表示形式を選べるようにした。
- 棋譜ウィンドウで時間切れの時など、手番記号がなかったの修正。
- 検討ウィンドウのNPSとかの表示のところ、はみ出ていたので、文字フォントサイズを9ptに戻した。
- 開始局面で、タイマー進んでないの修正。
  - エンジン初期化中の表示を行うために修正したときの影響。
  - 初期化が一瞬で終わる場合(人間同士の対局や詰検討)にタイマーの初期化等がGameModeの変更より早いタイミングで行われてしまうのが原因
  - V1.03で詰検討が一部の環境で落ちていたの、これが原因っぽい。
- 棋譜ウィンドウの文字列に従って読み上げていたの修正。(棋譜ウインドウの文字列を変更できるため)
- 実装済みの機能.mdを更新


- Kif: KifFormatter拡張 CSA,SFEN形式も出力できるように #43 (Mizarさんのプルリク)


■　2018/08/20


- 棋譜ウィンドウと検討ウィンドウ、Chess式も表示できて欲しい。(masaさん)
  - KI2式以外にKIF式とChess式をサポートする予定。とりま、GlobalConfigに設定用の変数を予約。


- Windowを最小化して、終了させたときに次回起動時に変な場所にWindowが行く件。(masaさん)
  - 起動時にメインウィンドウが画面外の座標であれば、(0,0)に変更するコード追加
  - 保存するときに最小化されていれば位置を記録しないコード追加
    - Windowの移動とリサイズのイベントに応じて位置・サイズを記録するように変更。
    - 最小化されていると2つ目のFormのRestoreBound、嘘の値になったままだ…。.NETのバグだな。
  - メインウィンドウを表示するデスクトップ座標が、スクリーンの移動・変更などによって失われていたら、プライマリウィンドウに表示するようにした。


■　2018/08/19


- 対局結果一覧設定ダイアログ作成その1
  - 自動保存するか
  - 保存形式
    KIF
    KI2
    CSA
    PSN
    PSN2
    SFEN
    JKF
    JSON
  - 保存先のフォルダ
  - 保存件数上限
  を設定できるようにする。
- メイン以外のFormのアイコン出てるの消す
  - FormBorderStyleをSizable→SizableToolWindowに。FixedSingle→FixedDialogに変更。
- フォントサイズがバラバラなのを統一する。(11ptで統一。設定上は11.25pt) 一部だけ9pt


- デバッグ関連の機能、メニューの情報のところにあるの邪魔だから、ウインドウのところに移動。
  - システム情報も一般ユーザーには不要な情報なので、バージョン情報のすぐ下に移動。
- オンラインマニュアル、少しずつ書き進めていく。


- V1.0.3リリース。
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808191400V103.zip
  - "1.0.2"→"1.0.3" [2018/08/16]-[2018/08/19]


- 秒加算の処理、リファクタリング
- GUI側計測とエンジン側とでtimeに150msの差がある。プロセス間通信のオーバーヘッド(片道分)だと思われる。
  これ、0.3秒だと遅いPCだとぎりぎりになってしまう。
  - この差をGUI側で吸収すべきであろうか…。
    - うーん、それはするべきではないような。
  - エンジンオプションのデフォルト値
    - NetworkDelay2 300 → 550に変更。
    - NetworkDelay 120 → 350に変更。(片道150msほどかかる + 誤差が0.1～0.2秒ほどあるようなので..)
  - これを反映するには、メニューの「ファイル」→「設定の初期化」→「各エンジン設定の初期化」で初期化する必要がある。
- 持ち時間なし + 1手2秒加算でやるといきなり時間切れになる件。
  - 1手ごとの秒加算、指し手の前にやらないといけないのに、指し手を指したあとにしていたのを修正。


- 先手と後手が異なる持ち時間設定であるときに後手のエンジンが切れ負けになる現象。(masaさん)
  - 先手、5秒+秒読み10秒 , 後手 5秒 + 1手6秒加算で4手目ぐらいで切れ負けになる。
    - 0秒+2秒加算の設定の時、初手には2秒の時間があるはずなのにそういう実装になってない。
    - 時間加算は先にしなきゃ駄目。でも後手だけこれに引っかかるのは、何故？　あとでよく調べる。
      // 作業中　次のcommitで直す。
- DataContractで書いていたKifuTimeのコード、削除しておく。
- 時間切れ負けなど特殊な指し手が指されて終局したときに「ありがとうございました」を2回読み上げるの修正。


- 盤面編集の初期配置に「双玉で玉以外すべて駒箱に」を追加。


- マウスのドラッグ＆ドロップで駒を移動させる時にも、駒が移動できる先の升のエフェクトを表示するように。(島田さんの要望)
  - 対応しました。


- 盤面編集後、SVGで局面を書き出す時など、gamePlyが1になっていなかったのを1に固定するように修正。


- SVG局面出力の調整5 #42 (Mizarさん)
  文字の書体・サイズ・配置の調整
  盤の座標入れ
  コード諸々整理


- KIF: 初期局面図に現在の手数も出力 #41 (Mizarさん)
  対局中の局面を局面編集（棋譜はクリアされるが、初期局面のgamePlyの値はそのまま）
  編集した局面から何手か指継ぎ（手数が1から始まらない）
  KIF形式で棋譜を保存（初期局面の手数が出力されない）
  保存した棋譜を読み込み → 初期局面と棋譜で手数が一致しない → エラー
  といった症状が発生したため、初期局面の手数を出力するよう修正するものです。


■　2018/08/16


- 連続対局のための作業その4
  - 連続対局のRestartの処理、Startのときと共通部分を抜き出して整理した。
- 詰将棋エンジンでの検討で時刻が表示されていない件(masaさん)
  - 時間を思考エンジンからinfoで送られてきたtimeを使っていたが、こういうのはサーバー側計測であるべきなので
    サーバー側で勝手に時間を埋めることにした。
  - 検討ウィンドウに経過時刻、fだけでなくff(小数点以下2桁)まで表示するようにした。
- faq.mdにライセンスの件、少し追加。
- 実装済みの機能.mdに対局設定のプリセットの件など追加。


- 連続対局のための作業その3
  - 連続対局のときにプレイヤーが先後入れ替わって欲しいが、対局条件(持ち時間設定など)はそのプレイヤーに付随しているので、
    そこも入れ替わって欲しい気はする。
  - 入れ替わる処理、実装した。
  - 現在の局面からの対局を実装する場合、KifuManagerをClone()できて欲しい気はする。現実的には難しい？
    - KifuMangerのClone実装するか…。(次回)
- NotifyObjectに指定した名前に結びついてるハンドラ全部消すメソッド追加。


- 連続対局のための作業その2
  - 連続対局はCOM同士の時に限定する。
  - 対局ごとに先後入れ替えるのめっちゃむずい。ThinkReportの入替えも必要になる。あとでよく考える。
- mateとupperbound/lowerboundの組み合わせでparse errorになっていたの修正。
  USI Parse Error : 例外が発生しました。: info 文字列の解析に失敗 : info depth 7 seldepth 9 score mate -6 upperbound nodes 5383 nps 448583 time 12 pv 2g1h 4b3a
  - mate -6とupperboundの組み合わせがparse errorっぽい。
  - これ、WhaleWatcherもか。えびちゃんに報告しとく。


■　2018/08/15


- 連続対局のための作業その1
  - 対局設定ダイアログに連続対局のための設定追加。
    - 設定項目の終了時の保存/次回起動時の復元のコード追加。
  - LocalGameServerに連続対局の処理追加。
    - 連続対局が出来るようになった。
    - 対局結果一覧のウィンドウはまだ。先後入替えもまだ。


- V1.02リリース
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808152200V102.zip


- V1.00に関してβテスターの人たちの意見反映その5
  - 盤面編集から抜けたあとは、棋譜ウインドウはクリアした方が良い。(masaさん)
    - 対応しました。
  - 棋譜の読み込みに失敗したときに棋譜ウィンドウの棋譜をリセットするようにした。


- 起動直後に検討モードにしつつ特殊なマウス操作をすると落ちる件。(和差積 商さん)
  - 原因よくわからない。合法手の判定が甘かいのかな？
  - Position.IsLegal()の先頭にMove.IsOk()を追加する。
  - この問題ではなさげ。
    - KifuTree.DoMoveUI()でIsLegal()==falseのときにDoMove()呼び出してる。修正。
- Move.NONEに対して、ToFile()とかToRank()はFILE_NBとかRANK_NBを返すように変更。→現状、そうなっていた。
- From(Move),To(Move)も同様。
- ありゃ。ミニ盤面動かなくなってた／(^o^)＼
  - NoThreadモードだとGameMode初期化されないのか。そうか。


- 詰将棋エンジンの実行ファイル差し替え。


- SVG出力で持駒領域が長くなったときに二段組にする #40 (tibigameさんのプルリク)


- デバッグウインドウで複数行の選択、Ctrl+Cで選択行のクリップボードへのコピーが出来るように。
- TheAppクラス、整理。


■　2018/08/14


- V1.00に関してβテスターの人たちの意見反映その4
  - 検討ウィンドウのListViewの横幅変更したときに、もうひとつの(CPU同士のときの相手側の)ListViewの横幅にも反映するコード追加。


- V1.00に関してβテスターの人たちの意見反映その3
  - エンジンオプション設定
    - デフォルト値に戻す手段が欲しい。(まふさん)
    - 1) デフォルト値をTooltipのなかに表示する
      - エンジンオプションのデフォルト値をTooltipのなかに表示するようにした。
    - 2) リセットする操作を可能にする。
  - オプション設定のリセット操作が出来て欲しい。
    - エンジンオプション等と、表示等の設定とそれぞれのリセットコマンドが欲しい。
    - メニュー「ファイル」→「設定の初期化」→「各エンジン設定の初期化」
    - メニュー「ファイル」→「設定の初期化」→「各表示設定などの初期化」


- V1.00に関してβテスターの人たちの意見反映その2
  - 検討ウィンドウのカラムの横幅を次回起動時に復元して欲しい。(masaさん)
  - GlobalConfigにConsiderationColumnWidth追加。
  - CPU同士の対局で検討ウィンドウに2つのListViewが表示されていると片側のListViewのcolumnの幅変更に対して、もうひとつが連動しないが次回起動時に反映するのでまあいいか…。
- NotifyCollectionの実装。とりあえず代入だけ。


- KIF: Kifu for Windows V7向けのヘッダ追加 #39 (Mizarさんのプルリク)
  - KIF形式で書き出した棋譜ファイルがKifu for Windows V7で読み込めない件に対応。
    - Kifu for Windows V7では、ヘッダーに
      #KIF version=2.0 encoding=UTF-8
    をつけておかないといけないらしい。
    - 柿木将棋IXは、Unicode自体に対応していないので対応不可。クリップボード経由でコピーすれば読み込める。


- ファイル→「棋譜を名前をつけて保存」を「棋譜に名前をつけて保存」にrename。


- 柿木将棋Ⅸで書き出した棋譜ファイル、手合割と持駒と同時に指定してあるのでこれが読み込めるように修正すべき。
  - 手合割と持駒の同時指定自体がおかしいと思うのだが、checksum的な意味合いはあるのか…。
- KIF: 初期局面図と手合割の同時指定をエラーにしない #38 (Mizarさんのプルリク)
  初期局面図と手合割が同時指定した場合、エラーで読み込み中止せずに初期局面図で上書きする（柿木将棋IXの仕様への対応）


- V1.00に関してβテスターの人たちの意見反映その1
  - 対局開始時、「エンジン初期化」が表示されるタイミングが遅い件。(ぐららるさん)
    - 修正しました。
  - 手番表示、名前に被る件。(tibigameさん)
    - ネームプレートと棋譜ウィンドウ少し下げて、ネームプレートの左上に持ってくる？
    - あまりいい画面レイアウトでもないのでこの件は見送り。


- 詰将棋エンジン、ミクロコスモスの数手前の局面が不詰になることがある。tanuki-さんに調査依頼。


- 詰将棋エンジン
  - Hashが二重に確保されている。修正。
  - Hashに16MBを指定したときに4096MB確保されるの修正。


- V1.01リリース
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808140900v101.zip


- プロジェクトをリリース用に必要フォルダだけコピーするbatファイル書いた。

  project_copy.bat
    mkdir C:\Users\yaneu\Desktop\MyShogi
    xcopy *.* C:\Users\yaneu\Desktop\MyShogi /s/e/i /exclude:project_copy_exclude.txt

  project_copy_exclude.txt
    eval\
    kif\
    image_source\
    project_copy.bat
    project_copy_exclude.txt
    MyShogi.engine.xml
    MyShogi.setting.xml


- クリップボードへのコピー、「局面BOD形式」を「局面KIF(BOD)形式」とrename。
- 「クリップボードにコピー」を「クリップボードに棋譜/局面をコピー」とrename。
- 「クリップボードからペースト」を「クリップボードから棋譜/局面を貼り付け」とrename。
- Ctrl+Vをクリップボードからのペーストに割当て。→　現状そうなっているのでメニューに「Ctrl+V」の文字追加。
  - メニューのクリップボードから貼り付けを行うときに警告が出なかったの修正。
- Ctrl+CをクリップボードへのKIF形式での棋譜コピーに割当て。
- Ctrl+Sを上書き保存に割り当て。
- Ctrl+Nを通常対局に割り当て。
- Ctrl+Eを盤面編集に割り当て。


- 局面貼り付け、検討中には出来ないように修正すべき。(メニューを無効化するなど)
  - エンジンでの検討中のファイルメニューを無効化するように変更。
  - 棋譜/局面のクリップボードへの書き出し、LocalGameServer側で処理していなかったの修正。


- 詰将棋エンジンの仕様変更に対応
  - 詰将棋エンジン設定ダイアログの秒設定に従うようにした。
  - timeoutの処理を追加した。時間内に詰みが発見出来なかった時に、その旨を検討ウィンドウに出力するようにした。
  - 詰みを発見できなかったときの評価値がMATEになっているの修正。
- エンジン側で例外が発生したときにGUI側、エラーダイアログを出して、終了させるようにした。


- １一への駒打ちの候補手が同～と表示される症状の修正 #37(Mizarさんのプルリク)
  sfen ln7/3+R1n3/2+Pp2kp1/p5g2/1NSP1g2L/PP3l1PP/5p1K1/6R2/L4G3 b BS3Pbg2sn5p 139
  上記局面の検討で、「１一角」の候補手が「同角」と検討ウィンドウに表示された症状の修正になります。


- Clipboardメニュー追加・SVG出力周り整備 #36 (Mizarさんのプルリク)
  * Clipboardメニュー追加・SVG出力周り整備

  - Clipboard メニュー追加
  - SVG出力周り整備

  * プレイヤー名を棋譜上に反映させる

  * SVG局面出力の調整2
  - 対局者名を反映
  - 持駒が無い時、「持駒 なし」と表示

  * SVG局面出力の調整3
  - 対局者名・持駒を縦書きで描画（1文字ずつの描画を撤回）

  * SVG局面出力の調整4
  - 対局者名・持駒の間の空白を半角空白から全角空白に変更


- 詰将棋エンジンに関して、やねうら王のプロジェクト側の修正。

  - 詰み手順を復元する探索ルーチンの中で受け手側の手番かつ王手がかかっている状況で1手詰みルーチンを呼び出すバグを修正した #85(tanuki-さんのプルリク)
	  詰手順を復元する探索ルーチンの中で
	  受け手側の手番かつ王手がかかっている状況で
	  1手詰みルーチンを呼び出しているバグを修正しました。
	  これにより金子清志氏の全応手逆王手最長１５手で
	  合法な詰手順が出力されるようになりました。
	  http://www.ne.jp/asahi/tetsu/toybox/challenge/c1090.htm
	  ただし、最短の詰手順ではありません。


  - 逆王手がかかっている局面でも詰みを探索するようにした #84  (tanuki-さんのプルリク)
	  逆王手がかかっている局面でnotimplementedを返さないようにするオプション、
	  ReturnNotImplementedIfCheckedを追加いたしました。
	  デフォルトはtrueで、falseにすると逆王手がかかっている局面でも探索を行います。


  - 詰将棋エンジンで制限時間をチェックするようにした #83 (tanuki-さんのプルリク)

	  詰将棋エンジンで制限時間をチェックするようにいたしました。
	  GUIからエンジンへ制限時間を設定した上で詰将棋エンジンを解かせる場合は、
	  USIプロトコル通り

	  go checkmate 60000

	  などと指定してください。
	  制限時間を越えた場合、USIプロトロルにある通り、エンジンからは

	  checkmate timeout

	  が返ってくるようになっています。



■　2018/08/10


- メニュー　→　ファイル　→「局面の保存」のときにSVGを選択できるようにした。


- SVG出力 #35(tibigameさんのプルリク)
  * 棋譜判定の改善
  * SVG出力ロジックを追加
  * Revert "SVG出力ロジックを追加"
  This reverts commit d9eb43b739c7a21cc71ae4d792edbee7e0a6542b.
  * SVG出力のロジックを追加


■　2018/08/09


- NotifyCollection、2/3ぐらい書いた。


■　2018/08/07


- 検討ウィンドウのカラムの横幅を次回起動時に復元して欲しい。(masaさん)
  - 各カラムの幅を配列に記憶しておくので、NotifyObjectの配列版みたいなのが必要になりそう。
  - .NETのObservableCollectionみたいなの自作するよりは、add/removeのないcollectionなら
    NotifyObjectを単に配列にして使ったほうが圧倒的に扱いやすい気がしなくもないが…。
  - あとあとのことを考えると作っておいたほうが無難なのか…。自作するか。


- NotifyCollection、1/3ぐらい書いた。


- ウィンドウを最大化したならそれを終了時に保存/次回起動時に復元すべき。(tanuki-さん)
  - 最大化状態であるかどうかは保存されていないが、現在の実装で、DesktopLocationとサイズ自体は保存されているのでまあいいような…。


- 棋譜の途中から対局をするとき、そこより手数を戻そうとすると持ち時間がゼロになるので時間切れ負けになる件
  - 簡単ではなさそう。中断の再開処理と合わせて、あとでよく考える。
  

- tooltipに間違えてVSのデザイナーから"\r\n"を使っていた箇所がある件。(和左積 商さん)
  - 「検討エンジン設定」ダイアログの「詳細設定」ボタンのtooltip、修正しました。


- マスターアップ終わったのでドキュメント類を整理


■　2018/08/05


-MYSHOGI_VERSION_STRING = "1.0.1";に設定。情報ダイアログに表示される。
  - Update1は"1.1.0"を予定。


- インストーラ設定 #34(Mizarさんのプルリク)
  - β5版インストーラ
    - rev1
      - 仮にインストーラにおけるライセンス文章に GPLv3 の文章を設定
      - sources/gpl.txt 追加
      - beta5に追随、 book/yaneura_book2.db 追加
    - rev2
      - version 0.0.0.5
      - .NET Framework 4.6.1 以降がインストール済みかのチェック追加
    - rev3
      - version 0.0.5.3
      - 製品名から "(β版)" を除去
      - License 本文を入れ替え
      - Readme ダイアログの除去
      - デフォルトのインストール先フォルダの変更・インストール先選択ダイアログの追加
  - β6版インストーラ
    - rev1
      - version 0.0.6.1
      - DVD媒体からインストール実行に時間が掛かる旨のREADME画面を追加。
  - β7版インストーラ
    - rev1
      - version 0.0.7.1
      - README更新（低スペPCでDVD媒体からのインストールに20分以上掛かる報告に追随）
      - gpsfishエンジン除去
      - tanuki-詰将棋エンジン追加
  - β10版インストーラ
    - rev1
      - version 0.0.10.1
      - Autorun.inf更新
        - メディア挿入時のDVDドライブの右クリックメニューに.NET
        Frameworkインストールを追加
  - β10.1版インストーラ
    - version 1.0.0.0


■　2018/08/04


- β10.1リリース(致命的なバグがなければこれでマスターアップ)
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808052315beta10.1.zip
    →　このバージョンでマスターアップ完了しました。[2018/08/05 12:00]


- β10に関してβテスターの人たちの意見反映その1
  - 待った絡みで棋譜ウィンドウの表示がおかしくなることがある件。(まふさん)
    - 待ったしたときに棋譜の1行削除のハンドラを2度呼び出すが、ListView.Items.RemoveAt()と書くべきところRemove()と書いたため、削除に失敗していた。
-MYSHOGI_VERSION_STRING = "1.0.0";に設定。情報ダイアログに表示される。


- オンラインマニュアル等、更新。


- マスターアップ完了につき、WIPなど更新。
  - バージョン情報で表示されるVersionのところ、0.0.1のまま、マスターアップしてしまった。笑える。


- β10リリース(致命的なバグがなければこれでマスターアップ)
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808052015beta10.zip

// --- WIPのほうから削除

- 棋力の調整について
  - uuunuuunさんの計測に基づいて、node数制限をする形になっています。
  - 1級以下はあまり自然な弱さになっていないのが少し気になりますがGUI側ではどうにもならないです。
  - 評価関数によっても違う？
  - β3で再度調整しなおしました。ご意見ください。
  - β6でプリセットのThreadsを4→2に変更したのでやや棋力が変わっているかも知れません。(最大でR100程度)

- gpsfish、AVX2用しか存在しない件。
  - SSE2用もAVX2用をコピーしてリネームしたものなのでSSE2環境では動かないです。またNO SSE(32bit版)も用意していないです。
	- gpsfishは動作のテスト用につけているものなので製品版では削除します。
- gpsfishのバナーがQhapaqのバナーを改変したものになっている。
  - 動作テストのために仮で作ったものなのでこうなってます。
	- gpsfishは動作のテスト用につけているものなので製品版では削除します。

- 18コアのPCでも2スレッドしか使われていない。
  - 「将棋神」「カスタム」以外を選択した時は、その棋力を担保するために、Threads = 2 , NodesLimit = XXXが設定されるためです。

- 棋譜の読み上げについて音量がバラバラ…。
  - 私も気になってはいますが、激指の素材そのままです。今回はどうしようもなさげです。
  - 次回(来年？)は音声の収録から私が立ち会います(｀･ω･´)ｂ

- サウンドが鳴らない件
  - Windows Media Playerが使える環境でないと再生されないようです。
  - 詳しくは、[FAQ](faq.md)をご覧ください。

// --- ここまで

- β9に関してβテスターの人たちの意見反映その3
  - 局面を読み込ませての検討モードの時に11の駒を取る移動が同Xと検討の読み筋に表示される。(ぐららるさん)
    - 修正しました。


- β9に関してβテスターの人たちの意見反映その2
  - 検討モードの時に読み筋に現れる"resign"を"投了"と表示することにした。


- β9に関してβテスターの人たちの意見反映その1
  - 「検討時の駒音」変更したときにメニュー更新されない。(ぐららるさん)
    - PieceSoundOffTheGameの変更に対してUpdateMenuItem()のハンドラセットしてなかった。


- USI2.0に"info pv"に出現する特殊な指し手の件、追加。


- β9リリース(致命的なバグがなければこれでマスターアップ)
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808050800beta9.zip


- β8に関してβテスターの人たちの意見反映その12
  - エンジン同士の対局で「中」を押した時にファイルメニューがアクティブにならないことがある。(masaさん , まふさん)
     - たぶん修正できた。
  - 検討モード、詰検討モードから「検」「詰」ボタンを押しても反応しないことがあったの修正。


- β8に関してβテスターの人たちの意見反映その11
  - 棋譜を開いて終局図を出したときに駒が浮いた状態になることがある。(uuunuuunさん)
    - 駒選択状態から、棋譜読み込み・棋譜貼り付けなどを行うとこの状態になるようだ。
    - 局面読み込み時に"TurnChanger"をRaiseすることで防げた。


- β8に関してβテスターの人たちの意見反映その10
  - 検討ウィンドウの左右のスクロールバー生きてない。
    - そんなもの最初から用意してなかった。
  - 検討ウィンドウのNPS,HASHなどの欄にTooltip追加。

エンジンのHASHの使用率です。
この値が大きいと探索効率が悪くなります。
(コンピューターの棋力が下がります)
この値が大きい場合(50%以上)は、エンジン設定の
HASHの項目でHASHの割当を増やすなどして調整すべきです。

表示する候補手の数。
これを増やすとたくさんの候補手が表示されるようになりますが、
1つの候補手に費やす時間は相対的に減るため、読みの質は下がります。

- β8に関してβテスターの人たちの意見反映その9
  - RDPで棋譜の再生時に表示が乱れる件。(suimonさん)
  - 手数が長くなってくると棋譜ウィンドウでの移動時に画面がちらつく件。(うさ親さん)
    - KifuTree.GotoSelectedIndex()でDoMove()のときのPositionの更新を抑制してなかった。


- β8に関してβテスターの人たちの意見反映その8
  - 詰検討
    - 詰検討で秒数指定をして検討を開始すると例外が出る。
    - 定期的に読み筋が表示されて欲しい。
      - 詰将棋エンジン側が対応してない。tanuki-さんに相談。
    - とりま秒数で打ち切るのは棋譜解析には必要だが、詰み検討には不要な気がするので秒数が設定できる機能、削除するか。
      - 詰検討設定の時間設定をするGroupBox無効化しておく。


- β8に関してβテスターの人たちの意見反映その8
  - COM同士の対局のあと検討を開くとnull参照で落ちる件。(うさ親さん)
    - 対局設定の人間/CPUの設定見に行ってました(´；ω；｀)　修正しました。


- β8に関してβテスターの人たちの意見反映その7
  - 読み筋にある win(宣言勝ち) が表示されない。
    - 読み筋に宣言勝ち、千日手、千日手勝ち、千日手負け、優等局面、劣等局面を表示するようにした。
    - 宣言勝ちと千日手引分が表示されることは確認した。他は局面がなくてわからない。
- Scanner.PeekText()したあとParseText()せずに終端になったときにIsEofがtrue返すのバグなのでは…。修正した。

- 千日手の表示テスト

V2.2
N+澤田真吾 六段
N-藤井聡太 四段
$EVENT:棋王戦
$SITE:関西将棋会館
$START_TIME:2017/06/02 9:00:00
P1-KY-KE-GI-KI-OU-KI-GI-KE-KY
P2 * -HI *  *  *  *  * -KA * 
P3-FU-FU-FU-FU-FU-FU-FU-FU-FU
P4 *  *  *  *  *  *  *  *  * 
P5 *  *  *  *  *  *  *  *  * 
P6 *  *  *  *  *  *  *  *  * 
P7+FU+FU+FU+FU+FU+FU+FU+FU+FU
P8 * +KA *  *  *  *  * +HI * 
P9+KY+KE+GI+KI+OU+KI+GI+KE+KY
+
+7776FU
-8384FU
+2726FU
-4132KI
+6978KI
-8485FU
+8877KA
-3334FU
+7988GI
-2277UM
+8877GI
-3122GI
+3938GI
-7162GI
+4746FU
-5142OU
+3847GI
-7374FU
+4958KI
-6364FU
+5968OU
-6263GI
+4756GI
-2233GI
+3736FU
-8173KE
+4645FU
-6162KI
+0046KA
-5354FU
+6766FU
-8281HI
+6879OU
-4252OU
+2937KE
-5261OU
+2625FU
-6172OU
+7988OU
-9394FU
+9796FU
-1314FU
+1716FU
-3242KI
+5868KI
-4253KI
+9998KY
-5352KI
+8899OU
-5242KI
+7888KI
-4252KI
+8878KI
-5242KI
+7888KI
-4252KI
+8878KI
-5242KI
+7888KI
-4252KI
+8878KI
%SENNICHITE


- β8に関してβテスターの人たちの意見反映その6
  - 非合法手がある棋譜をKIFに書き出したときにそこが空欄になるの修正。
  - 詰検討、秒数を指定するとエラーになる。tanuki-さんに相談。
  - Positionみたいなmutableなオブジェクト、Raiseする側でClone()しないと駄目。
    - 修正した。
  - NotifyObjectのBind()、相手側の値を変更してないなかった。
  - エンジン側で例外が出たときに二重に例外が出るのを修正。


- β8に関してβテスターの人たちの意見反映その5
  - 詰将棋用エンジンのオプションの個別設定画面、それ用にカスタマイズする。
  - 詰将棋エンジンの個別設定が反映していないようだ。修正する。
    - 詰将棋エンジンの個別設定を検討エンジンの個別設定のエントリーに保存してた。修正した。


- β8に関してβテスターの人たちの意見反映その4
  - 「エンジン選択ダイアログ」が2つ出た状態になる件。(masaさん)
    - 対局設定ダイアログでエンジン未選択でエンジン選択した時にCPUに変更すると、
    エンジン未選択のままCPUに変更されたのでここでエンジン選択ダイアログが出るという現象のようだ。
    - ShowDialog()のあとDispose()を明示的に呼ばないと、これが残っていて、次に生成したときにそれが再利用されて古いオブジェクトに対してデータバインドする的な奇妙な現象だった。
    - ShowDialog()するものはすべてusing()..か、try{}finally{ X.Dispose();}で書くようにする。
    - エンジン選択ダイアログを閉じたときに画面ちらついてたの、ちらつかなくなった。
      - Dispose()していないのが原因だったのか…。なんぞこれ。


- β8に関してβテスターの人たちの意見反映その3
  - 対局終了後に読み上げがずっと続くの止められない件。(masaさん)
    - 対局終了でそこで以降の読み上げをキャンセルして「ありがとうございました」の音声を出すことにした。
    - メニュー → 音声のところで選択できるようにしておく。


- β8に関してβテスターの人たちの意見反映その2
  - 宣言勝ちが非合法手に扱われてしまうことがある件。(masaさん)
  - 対局設定ダイアログの入玉設定の項目の並び順がエンジンオプション設定の同設定の項目の並び順とが異なっていたのが原因。修正しました。


- β8に関してβテスターの人たちの意見反映その1
  - ダイアログのセンタリングで画面外に出ることがある件。(tanuki-さん)
    - 新しく作られるダイアログが画面外に出ないように修正しました。
    - 上下・左右のどちらかにめり込まないと表示できない時は、右と下にめり込むのは許容。左と上にめり込むのは認めない。(ウィンドウのドラッグ、閉じるが出来なくなるため)


■　2018/08/03


- β8リリース
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808041430beta8.zip


- tanuki-詰将棋エンジン、新しいバージョンに差し替え。
  - より長い詰み手順を返すMorePreciseMatePvオプションを追加した (#81) 
  - 詰将棋用エンジンのオプション画面、それ用にカスタマイズしたほうがいいような…。あとでやろう。
  - 最後、PVの長さを手数として表示するようにしておく。


- 検討・棋譜まわりの作業その4
  - 検討ウィンドウで継ぎ盤の◀▶が正常に動作しない件その2
    - 継ぎ盤の棋譜ウィンドウ、Visible = falseだと更新されないのが原因か？
    - Form.Loadイベント、表示ごとに発生すると勘違いしてた。これ危ういな…。使うのやめよう。
      - MainDialog.Load()で使ってるが、これはまあいいや…。
    - 継ぎ盤で棋譜、末尾に行ったあと左を2回押さないと1手戻らないの修正。
  - 検討時にOutputFailLHPVをfalseにしてなるべく綺麗なPVにする。


- 検討・棋譜まわりの作業その3
  - 棋譜ウィンドウのカーソルがある場所と違う局面になっている。(tibigameさん)
  - 読み込んだ棋譜がいま表示している棋譜と同じ行数だったときに局面が移動しないバグ修正。
  - 対局開始時に継ぎ盤の局面を初期化するようにした。

  
- 検討・棋譜まわりの作業その2
  - 検討ウィンドウで継ぎ盤の◀▶が正常に動作しない件
  - 検討モードで検討ウィンドウを閉じたのなら、エンジンを終了させ検討モードを抜ける。
- EngineDefine.MinimumHashMemory = 100→128に変更する。(2の冪乗でないとうまく扱ってくれないエンジンがありうるので)


- 検討・棋譜まわりの作業その1
  - 検討開始～警告が出てキャンセルしたときに警告ダイアログがもうひとつでるの修正。
    - その時に検討モードからきちんと抜けていないのを修正。
  - 検討モード
    - 検討中にToolStripの◀▶で局面を移動させた時にその局面での思考が開始されないの修正。
    - 検討中に棋譜ウィンドウで局面を移動させた時にその局面での思考が開始されないの修正。


- 詰将棋エンジンまわりの作業その1
  - Position.IsLegal()の駒打ちの駒が違法であるのを除外できてなかったの修正。
  - "info score mate +"のようなMateに付随するスコアがparse失敗していたの修正。
  - 詰将棋、5手ほどしか手順が表示されないが、一応動いている。
  - これだけしか手順返ってこないの、エンジン側の仕様なのかな…。
    - tanukiさんに確認しとく。
    - たまたま(受け側の逃げ方が悪くて)詰む手順だったようだ。

- 詰将棋のテスト17手詰め
  - cf.  http://www005.upp.so-net.ne.jp/tsumepara/contents/4appre/kanju/kanju13.htm
  - 手順が5手ほどしか出ないが解答自体は出来そう。
  - 一応、詰将棋エンジン動いている。

後手の持駒：金二　歩十七　
  ９ ８ ７ ６ ５ ４ ３ ２ １
+---------------------------+
| ・ ・ ・ ・ ・ ・ ・ ・ ・|一
| ・ ・ ・ ・ ・ ・ ・ ・ ・|二
| ・ ・ ・ ・ ・ ・ ・ ・ ・|三
| ・ ・ ・ ・ と ・ ・ ・ ・|四
| ・ ・ ・ ・ ・ 銀 ・ ・ ・|五
| ・ 玉 ・v玉 ・v銀v馬 ・ ・|六
| ・ 角 ・ ・v飛 龍 ・ ・ ・|七
| ・ ・v金 ・ ・v金 ・ ・ ・|八
| ・ ・ ・ ・v銀 銀 ・ ・ ・|九
+---------------------------+
先手の持駒：桂四　香四　


- β7リリース
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808040650beta7.zip


- 検討ウィンドウ設定まわりの作業その9
  - 検討ウィンドウにtanuki-2018初段　のようにプリセット名も表示するようにしたほうがいいか？
  - 実装した。


- 検討ウィンドウ設定まわりの作業その8
  - 検討開始した時に対局者名がエンジン名になってしまうの修正。
  - エンジンとの対局時で、対局者名を対局設定で変更しているときは、検討ウインドウの名前欄にエンジン名も括弧つきで表記するように。
  - 検討ウインドウでseldepthがないときにdepth欄にも"/"が表示されていたの修正。
  - tanuki-詰将棋エンジン追加
    - tanuki_mate_avx2.exe
    - tanuki_mate_sse42.exe
    - tanuki_mate_sse41.exe
    - tanuki_mate_sse2.exe
    - tanuki_mate_nosse.exe
  - 詰検討のときにtanuki-詰将棋エンジンが選べるようにした。
  - 詰将棋探索、実装まだ。


- 検討ウィンドウ設定まわりの作業その7
  - gpsfish、定跡にhitしたときにbestmoveしか返さない場合、検討モードで使うときにbestmoveの情報しか表示できない。
    - 定跡にhitしたときもinfo pv..などで定跡を読み筋として返すことを推奨する。
  - 検討ウィンドウで定跡の指し手がわかりにくいの修正。
    - info pv.. で解釈できない文字列をそのまま保持しておき、そのまま読み筋のところに表示するようにした。


- 検討ウィンドウ設定まわりの作業その6
  - エンジン検討で時間固定で思考させるのとても難しいのでは…。
  - go btime 0 wtime 0 byoyomi 5000で思考させればいいのか。そうか。
  - 検討時に検討エンジン設定で設定した思考時間に従うようにした。


- 検討ウィンドウ設定まわりの作業その5
  - 検討モードで、検討エンジン選択ダイアログで選択したエンジンで検討するようにした。
  - 最後、engine/gpsfish/ , engine/gpsfish2/ のフォルダを除外する。
    - GPSfish関連のフォルダ、Debug/engineから削除。


- β6に関してβテスターの人たちの意見反映その6
  - 32bit環境で8スレッド以上で動作しない件。(うさ親さん)
    - 8スレ以上割当らないように修正。
    - FAQに追加。
    - 思考エンジン側でスレッドに割り当てる論理アドレスが2GBを超えるため？
    - 32bit環境で8スレ以上を手動で割り当てた時に開始時にwarningを出すように。


- β6に関してβテスターの人たちの意見反映その5
  - 32bit環境でシステム情報を開くと落ちる。(うさ親さん)
    - 修正しました。
  - 起動→終了のときに棋譜を保存するか聞いてくるの修正。
  - エンジンオプションのスレッドのところにスレッド数に比例してメモリを消費する件、追記。


- β6に関してβテスターの人たちの意見反映その4
  - 「▲７八飛　△８四歩」みたいな文字列を平手開始局面からの棋譜として読んで欲しい。(tibigameさん)
    - Mizarさんのプルリク#32で対応。
  - 読み込んだ棋譜から手動で新たに指し手を進めたら、未保存のフラグを立てて欲しい。(tibigameさん)
    - 棋譜が変更になったかどうかを判定しないといけないので、KifuTreeがDirtyフラグを持たないと駄目なのか…。そう修正する。
    - 修正しました。


- 棋譜文字列の先頭行に"▲" "△" があれば、KIF文字列と仮定してみる #32 (Mizarさんのプルリク)


- β6に関してβテスターの人たちの意見反映その3
  - 2GB環境でQhapaqにて自動Hash60%,6スレは動くけど、自動Hash60%,8スレだと落ちる件。(うさ親さん)
    - 1スレッドあたり25MBはstackだけの計算で実際はそれ以外もあるので足りないのかも。1スレッドあたり40MBで計算するように修正しました。
  

- 検討ウィンドウ設定まわりの作業その4
  - メニュー　→　対局　→「検討モード」を「検討エンジン設定」に変更。
    - 「検討エンジン設定」を選ぶか、「検」討ボタンを押して検討エンジンが設定されていないときに検討エンジン設定ダイアログを出すようにした。
    - 詰検討についても同様。


■　2018/08/02


- 検討ウィンドウ設定まわりの作業その3
  - エンジン選択と詳細設定のダイアログもメインウィンドウに対してセンタリングすべきか。
    - そうする。
- FormLocationUtility追加


- 対局者設定でバナーのないエンジンを選択した時、対局者名をユーザーが書き換えたあとエンジン名すらわからないのでは…。
  - NO BANNERではなく、エンジン名をそこに表記すべきなのか…そうか…。まあ、エンジン登録のときにバナー生成すべきなんやな…。
  - エンジン登録の機能追加するときに考えることにする。

- 検討ウィンドウ設定まわりの作業その2
  - ToolStripの検討ボタンを押した時に検討エンジンが選択されていなければ、検討エンジンの設定画面を出す。(初回など)
  - AboutDialog , SystemInfoDialogをmodal dialogに変更。
  - 各種設定ダイアログを表示するとき、メインウィンドウ上にセンタリングするようにした。
  - ConsiderationSetting → ConsiderationEngineSettingにrename
    - 詰検討エンジンの設定もこのクラスを使い回すことにした。

- USI2.0に以下の文、追加。
  - "isready"の前に"setoption"を送らないといけない問題
    - 思考エンジンは、"isready"に対して時間のかかる処理(評価関数ファイルの読み込み、置換表の確保・ゼロクリアなど)を行う必要があるが、
    評価関数ファイルの存在するフォルダを"setoption"コマンドで受け取りたい場合、isreadyの前に"setoption"が完了している必要がある。
    - GUI側はこのことを保証しなければならないし、保証するべきである。


- β6に関してβテスターの人たちの意見反映その2
  - エンジンの詳細設定で"ConsiderationMode"をtrueにしたときに "PvInterval"の設定値が無視される件(masaさん)
    - 設定のところに説明文追加
  - 「将棋神」のプリセットで、棋力に直接影響しそうなところに関して値を設定する。(NodesLimit = 0 , DepthLimit = 0 , MultiPv = 1など)
  - 「九段」～「10級」も DepthLimit = 0 , MultiPv = 1 を設定しておく。


- Kif形式棋譜読み込みで初期局面の持駒が読み込まれない問題の修正 (thanks tibigameさん) #31 (Mizarさんのプルリク)


- 検討ウィンドウ設定まわりの作業その1
  - ConsiderationSettingDialog追加。
    - デザインできた。
    - 複数エンジン用の検討モード別途用意したほうがいいかも…。
    - GameModeEnumにConsiderationWithMultiEngine追加。これ用の設定画面は別途用意しよう…。
- メニューの対局→検討ウィンドウの設定追加。
- 対局設定のプリセットの表示に垂直スクロールバー追加。
- エンジンオプションの共通設定に以前あって、そのあと削除された項目があって、個別設定で共通設定に従うになっているとそのオプションの値が代入されないのを修正。


- β6に関してβテスターの人たちの意見反映その1
  - メインウィンドウの表示位置、前回起動時のものを保存するように。(まふさん)
    - 修正案(kumaさん)
      - 採用させていただきました。
- 棋譜ウィンドウの横幅の設定、メニューの「表示」のところから「ウィンドウ」のところに移動。
- 「将棋神」「カスタム」のところにCPU負荷の件を追記。
- Scanner.PeekText()、変数名など少し変更。


- 棋譜判定の改善 #30 (tibigameさんのプルリク)
  将棋所、ShogiGUIからの局面コピーが通るように
  (KIF形式の持駒の処理が未完)


■　2018/08/02


- β6リリース
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808021740beta6.zip


- エンジン共通設定を読み込んだ時に、以前あった項目があるとそれによって個別設定が上書きされてしまうので起動時に
  現在存在しない項目を削除するコード追加。


- EvalDir共通設定を反映していない件。
  - 反映してた。なぜこれで評価関数を読み込めるのか？
    - ああ、わかった。isreadyを送信してからsetoptionを送信するからエンジン側のフォルダ変更が間に合わないのか。
    - ここ修正するとして、EvalDirを共通設定から削除しないといけない。
  - エンジン初期化のときに"isready"送信前にsetoptionを送信するようにした。
  - エンジンがevalの読み込みに失敗したとき、「エンジン初期化中」のダイアログが消えない。(kumaさん)
    - プロセス間通信が切断されたときに、エラーダイアログを表示するように修正。
- エラーダイアログの表示位置、メインウインドウの真ん中あたりに固定する。
  - ああ、ディスプレイの中央に表示されてるのか、これ。これプロシージャーをhookしないと変更できないようだ。このままにしておく。
- docs/dev_manual.md追加。
- faq.mdの文面、少し修正した。


- メニュー　→　「情報」　→　「操作説明(オンラインマニュアル)」　追加。


- β5に関してβテスターの人たちの意見反映その9
  - 検討時の駒移動に対してShogiGUIなどでは駒音がある。(Backgammonさん)
    - デフォルトでつけるようにしました。
    - オンオフをメニューの音声　→　検討時の駒音　でオンオフ出来るようにしました。
    - メニューの音声→「棋譜読み上げ」の表示名を「対局時の棋譜読み上げ」に変更。
- HumanPlayerのSpecialMoveに指し手入れるの危なっかしいのでBestMoveに指し手を入れるように変更。
  - SpecialMoveにユーザーがUIから操作した指し手を入れて、その直後にTIME_UPなどでSpecialMoveが生じた時に危うい。


- β5に関してβテスターの人たちの意見反映その8
  - 棋譜をドラッグ＆ドロップで読み込めるようにして欲しい。(まふさん)
    - 実装しました。
    - 対局中・検討中は貼り付けできないように。また、未保存の棋譜がある時には警告を出すように。
- メニューのファイルのところ、ショートカットキーのOが２つあったの修正。
- MainDialogにViewModel追加。棋譜がないときにメニューの「上書き保存」が選択できないように。


- β5に関してβテスターの人たちの意見反映その7
  - エンジンのプリセット、Threads 4→2に変更。
    - 物理2コアのPCで4スレッドになるとCPU同士の対局でCPU負荷が100%になり続けるため。
  - クリップボードからの棋譜の貼り付け(tibigameさん)
    - 実装しました。
    - 対局中・検討中は貼り付けできないように。また、未保存の棋譜がある時には警告を出すように。
- 未知の形式の棋譜を読み込んだ時にエラーメッセージを表示するようにした。
- 物理コア数を取得する時にプロセッサが複数あるときは、それらの物理コア数を足し合わせるように修正。
- GameScreenControlViewModel.cs追加。
- GameScreenControlMain.cs、この名前にしているとVSのデザイナがコード生成を間違えるのでGameScreenControl.csにrename


- β5に関してβテスターの人たちの意見反映その6
  - エンジン設定ダイアログの「次ページ」ボタンが見つけにくい。(田中誠さん)
    - エンジン設定ダイアログの各オプション項目の説明文、わかりにくいのでTooltipで表示するように変更。
    - 個別設定のほう、共通設定に従うのチェックボックスが有効のときもTooltipが表示されるように修正。
    - Model.Common.Utility.ToolTipHelper.cs追加。
    - エンジンオプション設定で、見出しがある時に早めに次ページに行くように調整。


- β5に関してβテスターの人たちの意見反映その5
  - CPU負荷100%になるの、初心者向きにはよろしくないのでは。(uuunさん)
    - 激指は、スレッド数をCPUの物理コア数にしているようで、デフォルトではCPU負荷は50%になる。
    - 物理コア数をデフォルト値に変更しました。
    - エンジンオプションのThreadsのところに説明文追記。


- SystemInfo: コア数検出テスト #29 (Mizarさんのプルリク)


- β5に関してβテスターの人たちの意見反映その4
  - 検討ウィンドウがメインウィンドウに追従するの、メニュー→ウインドウ→検討ウィンドウのところから設定でオフに出来るようにした。
- GlobalConfigにConsiderationWindowFollowMainWindow追加。


- β5に関してβテスターの人たちの意見反映その3
  - 対局設定で、CPUとの対局のときにCPU側の対局者名の名前を変更しても次に開くとリセットされている件を修正。
    - 修正しました。
  - 対局設定でエンジン選択した時にたまにプリセット選ばれない時があるの修正。
    - 修正しました。
    - NotifyObject.SetValueAndRaisePropertyChanged()追加。
  - 検討ウィンドウを一度も出していないと検討ウィンドウの再表示が出来ないのを修正。
    - 検討ウィンドウの再表示、メニュー→ウインドウ→検討ウィンドウ→再表示に移動する。検討ウィンドウ関係の設定はここに入れる。
    - あとでメインウインドウに追随などの設定もここでやれるようにしたい。


- β5に関してβテスターの人たちの意見反映その2
  - 対局開始時、メモリ不足ならキャンセル出来たほうが良いのでは。(48さん)
    - ダイアログ修正しました。エンジン選択時も同様にダイアログ上でキャンセル出来るようにしました。
    - キャンセルした時に終局していることを示すため「ありがとうございました。またお願いします。」の音声読み上げ追加。
  - ダイアログ、対局中の終了はwarningのダイアログに変更。
  - 対局者名が途中で切れるため「tanuki-」のSDT5と2018の区別がつかない件。(48さん)
    - 半角換算で16文字まで表示するように。(全角は2文字としてカウント)


- β5に関してβテスターの人たちの意見反映その1
  - 思考エンジンのプロセス優先度、下がっていない件。(kuma)
    - 間違ったコードになってました。修正しました。
  - 「メニュー」→「情報」→「よくある質問(FAQ)」追加
    - とりあえずMyShogiのGitHubのFAQのページが開くようにしておいた。
  - サウンドが再生されない環境がある。(tibigameさん他)
    - C#のSystem.Windows.Media.MediaPlayerで再生できない環境がある。
      - 他の再生手段をオプションで選択出来るべきか。
      - 多重再生の出来るMicrosoftがサポートしている現行の技術、これぐらいしかないのだが…。
    - 「Windowsの機能の有効化または無効化」→「メディア機能」→Windows Media Playerのチェックボックスをオンにすると音が出た！(tibigameさん)
    - WindowsMediaPlayerをアンインストールしてから再インストールすると再生されるようになるらしい。(ぐららるさん , うさ親さん)
    - このノウハウ、FAQに書いておく。 



■　2018/08/01


- β5リリース
  - eval : MyShogi201807260000Eval.zip
  - 本体 : MyShogi201808011025beta5.zip


- β4に関してβテスターの人たちの意見反映その7
  - ×ボタンで閉じるとき、終了前に終了しますかのダイアログを出したほうが良いのでは。(kumaさん)
    - 対局中の×ボタン、棋譜が未保存の時の×ボタンに対しては警告を出すようにしました。
- ダイアログを出す時、エラーと情報と警告と確認の4つに分ける。
  - エラーならエラー、警告なら警告用のメッセージボックスを用いるようにする。
- TheAppクラス分離。TheAppMessageShow.cs追加。


- β4に関してβテスターの人たちの意見反映その6
  - DataContractつけたらGlobalConfigのデシリアライズに失敗するようになった。吐きそう。
    - DataContractつけるのやめる。無駄な時間であった…。
  - 何もエンジンが選択されていない状態から、エンジン選んで先後入替えでバナーおかしくなる件
    - 修正した。
  - 対局設定ダイアログ閉じる時にメインウインドウが一瞬白くなる件
    ShowDialog()したなかでShowDialog()を使うとこういう現象になるようだ。回避できそうにない。


- β4に関してβテスターの人たちの意見反映その5
  - 定跡 yaneura_book2.db 欠落。
		- どこか行った。発掘中。それらしきものを発掘してきた。
	- 定跡を変更した時にエンジンオプションをどう設定すれば良いのか不明瞭。
		- 定跡周りのオプション設定の説明文、追加。
  - 定跡、メモリに丸読みするとメモリ足りなくなるのか…。AutoHash、80%→70%をデフォルト値に変更。


- β4に関してβテスターの人たちの意見反映その4
  - 対局設定でプリセットを選択して、同種のエンジンをもう一つの対局者として選んだ時に、そのプリセットと同じものが選択されていなかったの修正。
  - エンジンを片側だけ選択して先後入替えた時の処理がおかしい。
- 対局設定ダイアログに入玉条件の設定追加
    入玉ルールなし
    27点法(CSAルール)
    24点法(CSAルール)
    トライルール
  - KIF形式にトライルールによる勝ちがないので入玉宣言勝ちにしとく。仕方がない…。CSA,JSON,PSN2など書き換えた。
- 対局設定ダイアログの入玉条件のComboBoxにTooltip追加。
    入玉条件を変更できます。コンピューターと対局する場合には詳細設定の「入玉条件」の項目も
    ここで選んだものと同様の設定にする必要があります。
    普通の入玉宣言ルールにしたいならば、27点法を選択してください。
    トライルールは、平手の初期局面で相手の玉のいた升に移動すれば入玉したとみなす特殊ルールです。
    (おまけ機能なので、このルールで対局された棋譜ファイルの読み書きは正式には対応していません。)
- 「指定手数で引き分けとする」のところにTooltipで説明文追加。
    指定手数を超えると引き分け扱いにします。
    コンピューターと対局するときは、「詳細設定」の「MaxMovesToDraw」を
    ここで設定したのと同じ値に変更しておいてやる必要があります。
- 他、対局設定のダイアログの各コントロールにTooltipで説明文追加。
- GlobalConfig、DataContractで書いてなかったの修正。
- MiscSettingに変数EnteringKingRule追加。


- β4に関してβテスターの人たちの意見反映その3
  - エンジンオプション設定をしている時に対局ウィンドウの操作が出来ないようにする。(まふさん)
    - ModalDialogに変更しました。
  - 対局設定でエンジンが選択されていない状態で詳細設定ボタンが押すと落ちる。(masaさん)
    - ModalDialogに変更しました。


- β4に関してβテスターの人たちの意見反映その2
  - 対局設定で先後入替えた時に選択していたプリセットが入れ替わらない件。(masaさん)
    - 修正しました。
  - 対局設定で、同種エンジンを選択している時に、「二級」・「初段」のようにそれぞれ異なるプリセットを選択して
    ダイアログを閉じて、再度対局設定を開いた時に、その値が復元されていなかったの修正。


- β4に関してβテスターの人たちの意見反映その1
  - 32bit環境でメモリ割り当てに失敗する件(うさ親さん)
    - エンジン本体の見積もりが小さすぎるようだ。
    - 各エンジンのWorkingMemory を 30から150に変更。
    - 各エンジン、ビルドしなおし。スレッドあたりのstack 100MB→25MBに変更。スレッド数×25MBを消費するとして計算しなおす。

  - スレッドstack、100MBに設定してコンパイルしてあるのを25MBに変更。
    - 協力詰めで手数が5万手ぐらいになるので大きめである100MBに設定したが、スレッドあたり100MBも消費するので32bit環境ではメモリ割り当て的に厳しい。
    (4スレッドであれば待機スレッド含めて5スレッドあり、スタック用だけで500MB消費する。)
    - Windows10だとメモリを確保しても、実際にそのメモリにアクセスするまで実メモリに割当てするのは遅延されるが、
      Windows7ではそうでもないので馬鹿正直に500MB消費する。つまりは、この理由からWindows7×32bit環境でわりと苦労することになる。
    - xxx_no_sse.exe、Threadsの設定できてない。(うさ親さん)
      - 32bit環境でUSE_SHARED_MEMORY_IN_EVALを有効にする。
      - LEARN undefにしてコンパイルしなおす。
      - 5エンジン×5バイナリ、差し替え。
  - 検討ウィンドウ、lowerboundが++、upperboundが--。いまは逆になっている。(Mizarさん)
    - 修正しました。


■　2018/07/31


- SetupYaneuraOu wip #28(Mizarさんのプルリク)
  β4版をベースにしたインストーラビルド設定ファイル群のたたき台の続きです。
  Microsoft Visual Studio 2017 Installer Projects では KPPT評価パラメータファイルをインストーラに含める際に問題(リソース不足エラー)が起きたため、ビルドツールを WiX Toolset - (Downloads) に変更しました。
  WiX Toolset build tools v3.11.1 がインストーラの作成に必須、 WiX Toolset Visual Studio Extension がインストーラの作成に推奨となります。


■　2018/07/30


- 32bit環境でメモリ割り当てに失敗する件(うさ親さん)
  - エンジン本体の見積もりが小さすぎるようだ。
  - 各エンジンのWorkingMemory を 30から150に変更。
  - いや、これだとまずそう。ThreadStackを設定できるようにしないといけないっぽい。
  - あとで考える。


- β4リリース
  - 本体 : MyShogi201807301550beta4.zip
  - eval : MyShogi201807260000Eval.zip


- さっきの修正で、対局設定の人間/コンピュータのところ、初期値がコンピュータになってしまっている。
  - 先後入替えたとき、「先手」「後手」の文字が入れ替わるの嫌なので都度初期化しているが、
    ユーザーが先手、後手の名前を変更した時は、それが入れ替わって欲しい気もするのだが…。
  - そんなに使うボタンでもないのでまあいいか…。


- β3に関してβテスターの人たちの意見反映その7
  - 時間無制限の時のコンピュータに渡す思考時間設定していなかった件。(tanuki-さん他)
    - go infiniteが渡されている模様..
    - 時間無制限の時はコンピュータ側は1手5秒で指すようにしました。


- β3に関してβテスターの人たちの意見反映その6
  - 対局設定で先後入替えを押した時、CPUのバナーが入れ替わらない。(うさ親さん)
    - 修正しました。
  - 対局設定の「詳細設定」絡みの操作で例外が出る件。(yoiyoi322さん)
    - 手順難しい。エンジン選択した時にまだ詳細設定ボタンが生きているのがおかしいのかな？
    - エンジン選択中に詳細設定押せなくする。エンジン選択中にエンジン選択ボタンも押せなくする。
    - 詳細設定中にエンジン選択ボタンも押せなくする。


- β3に関してβテスターの人たちの意見反映その5
  - 先手5秒/4秒 , 後手5秒/10秒加算　にした時、後手持ち時間使い切ったあと即指しになる。後手の秒読み、エンジンに渡されていない。(masaさん)
    - 秒読みと秒加算の混合ってUSIでは非対応のような気が…。
    - 先手に対してはbyoyomiで渡して、後手に対してはinctimeで渡すようにする。
    - UsiThinkLimitにByoyomiTimeBlackとByoyomiTimeWhite追加。
  - 1手加算のほうを選択していても秒読みの時間が有効であったの修正。
  - 共通設定のNetworkDelay2のデフォルト値を300に変更。
    - この値、1000以上にしていると秒読み1秒設定の時に即指しになってバグかと思う人がいるといけないので。


- tanuki-2018のEngineDefineからEvalShareを削除。


- tanuki-2018のEvalShareの扱い、間違ってる。修正する。
  - ExtendedProtocolにHasEvalShareOptionを追加した。

- tanuki-2018、将棋神でも4スレッドしか使っていない件。(48さん)
  - EvalShareのオプション持ってないのに"engine_options.txt"で無理やり生やして
    Threadsのオプションを上書きしてしまっていた。(調査協力、うさ親さん)
    - やねうら王のほう、修正対応
      - "engine_options.txt"で、optionとしてそのエンジンが持っていないものを指定すると先頭のoptionが破壊されるの修正。
    - tanuki-2018の"engine_options.txt"からEvalShareの行、削除。
    - EvalShare持ってないエンジンに対して、そのエンジンを2つ起動する時のためにHASH計算、きちんとする。
       - してた。


■　2018/07/29


- β3配布
  - 本体 : MyShogi201807290600beta3.zip
  - eval : MyShogi201807260000Eval.zip


- β2に関してβテスターの人たちの意見反映その5
  - 棋譜ウィンドウの横幅を変更できるように。(48さん)
    - メニューの「表示」→「棋譜ウインドウの横幅」を追加。
- Ponder設定、とりま、未実装なので非表示にしておく。


- β2に関してβテスターの人たちの意見反映その4
  - 対局設定で先後入替えを押した時、後手の時間設定を個別にするがオフの時でも時間設定グループがアクティブになる。(masaさん)
    - 修正しました。
  - エンジンの基本優先度下げたほうが良いのでは。(masaさん)
    - AMD-A9 2コアで、これを下げておかないとCPUを使い切っている状況では音声がぶつ切りに。(うさ親さん)
      - デフォルトでプロセス優先度、下げるようにしました。
      - ProcessNegotiator.LowPriorityをデフォルトでtrueに。
  - 対局中に対局メニューでエンジン変更が出来てしまう。(masaさん)
    - メニュー無効化するように修正。
  - 形勢グラフ、デバッグ＆修正が間に合わない気がするのでとりま無効化する。
    - その前に EvalGraphContol,EvalGraphDialogのAutoScale = DPIに設定


- β2に関してβテスターの人たちの意見反映その3
  - 思考エンジンのプリセット、級は「十級」→「10級」のようにアラビア数字で表記するように変更。
  - 後手の時に評価値を手番側から見た評価値にする件。
    - メニューの「表示」のところに用意
    - 「後手番のCPUの評価値表示を反転させるか」
    - よく見たら、デフォルトではエンジンが返しているのは自分から見た評価値だった。(´ω｀)
    - 自分から見た評価値をデフォルトとする。(将棋所と同じ)
    - 検討ウインドウに出力している評価値、保存していないので、即時反映は出来なくて、次の出力以降が反転表示される。(いずれなおすかも)


- β2に関してβテスターの人たちの意見反映その2
    - レーティング公式、修正。(uuunuuunさん)
      - これにより、5級あたりが少し強くなり、9段あたりは少し弱く調整される模様。
    - NodesLimit = 1000*Exp[(537-Sqrt[537^2 + 4*26.13(975-rate)]/(2*26.13))]
        // Excelの式で言うと　=1000*EXP((537-SQRT(537^2+4*26.13*(975-A1)))/(2*26.13))
    - 九段～十級まで用意した。
- WIP.mdに見出し追加。


- β2に関してβテスターの人たちの意見反映その1
  - 32bit環境で思考エンジンがメモリ割り当てに失敗することがある。(Wandre-sakさん)
    - 32bit環境、1プロセスが2GBまでしか使えないのでHASH割当の計算をするときに空き物理メモリ2GBとして計算すべき。
    - 空き物理メモリを取得する部分で32bit OSでは、空き物理メモリの値を最大でも2048MBとして扱うようにした。
  - メニュー項目にアクセスキーを設定する。(kumaさん)
    - 対応しました。
- LocalGameServerのスレッドで落ちた時に例外の捕捉が出来ていなかったの修正。
  - LocalGameServerのスレッドで落ちた時にもスタックトレースがちゃんと表示されるようになった。


■　2018/07/28


- β2配布
  - 本体 : MyShogi201807280620beta2.zip
  - eval : MyShogi201807260000Eval.zip


- β1.1に関してβテスターの人たちの意見反映その3
  - 検討ウィンドウの「着順」「R順」も解像度によって少し見切れる件(48さん)
    - ボタン少し大きくした。
  - 棋譜の名前をつけて保存でデフォルト値を「先手名後手名_YYYYMMDDHHmmss.kif」にして欲しい。(ぐららるさん)
    - 対応しました。
- ファイルを保存する時にファイル名をescapeするようにした。(エンジン名にファイルに使えない文字列が含まれている可能性があるため)
  - Utility.EscapeFileName()追加。
- EngineConsiderationDialog.cs、VSのデザイナで開くとぬるぽで落ちてたの修正。


- tanuki-2018、no sse版を含めてビルドできたっぽい。差し替える。
  - YaneuraOu2018NNUE_nosse.exe
    - build失敗。原因調査中。
    - Mizarさんに調査依頼。
    - 原因判明。

      makefileを使ってcleanするときに、.oファイルを削除しないといけないが、そのときにYANEURAOU_EDITIONを指定していないと
      コンパイル対象のソースファイルとしてNNUE用の評価関数のソースコードファイルが追加されず、.oファイルが全部消えないので
      コンパイルに失敗することがある。cleanするときは、この点に注意すること。

      mingw32-make clean YANEURAOU_EDITION=YANEURAOU_2018_TNK_ENGINE



■  2018/07/27


- β1.1に関してβテスターの人たちの意見反映その2
  - 対局設定ダイアログがまだ見切れる件。(うさ親さん)
    - AutoScaleFixerうまく動いてない。ClientSizeもリサイズする…。
    - InitializeComponet()抜けるときにResumeLayout()呼ぶからその瞬間にレイアウト変更がされて、ClientSizeが適用されて、現在の画面サイズに収まらないからリサイズが発生しているのでは…。これは死にそう..。
      - これは悪いアイデアだった。仕方ないので96dpi環境でVSのデザイナを使うことにする。

        public static void Init(Form form)
        {
            form.SuspendLayout();

            // 元のscalingと変更後のscaling
            var org_scale = form.AutoScaleDimensions;
            var new_scale = new SizeF(96F, 96F);

            // scale_x == scale_yのはずではあるが、一応分けておく。
            var scale_x = new_scale.Width / org_scale.Width;
            var scale_y = new_scale.Height / org_scale.Height;

            // 全体的に(すべての子Controlに対して)このScale変換を適用してやる。

            void ResizeControls(Control.ControlCollection controls)
            {
                if (controls != null)
                {
                    foreach (Control c in controls)
                    {
                        c.Location = new Point((int)(c.Location.X * scale_x), (int)(c.Location.Y * scale_y));
                        c.Size = new Size((int)(c.Size.Width * scale_x), (int)(c.Size.Height * scale_y));
                        c.ClientSize = new Size((int)(c.ClientSize.Width * scale_x), (int)(c.ClientSize.Height * scale_y));
                        c.Margin = new Padding((int)(c.Margin.Left * scale_x), (int)(c.Margin.Top * scale_y), (int)(c.Margin.Right * scale_x), (int)(c.Margin.Bottom * scale_y));

                        // 子コントロールの子コントロールにもこれを適用するために再帰的に処理しておく。
                        // →　コントロールには、AutoScaleDimensionsというプロパティがないため、ここに書いてある問題は起きないっぽい。ほんまかいな…。

                        //ResizeControls(c.Controls);
                    }
                }
            }
            ResizeControls(form.Controls);

            form.AutoScaleDimensions = new_scale;

            form.ResumeLayout();
        }

      - MyShogi201807271800beta1.1a.zip


- β1.1に関してβテスターの人たちの意見反映その1
  - エンジンオプションダイアログの「前ページ」「次ページ」が見切れる環境があるらしい。(島田さん)
    - 11pt→9ptに変更。
  - BookDirエンジン設定の変なところにあるの修正。
    - エンジンオプションの共通設定にBookDir追加。
    - EvalDirのほうの説明文、追記。


- β1に関してβテスターの人たちの意見反映その2
  - 対局設定ダイアログ、1366×768の環境で見切れる。(うさ親さん)
    - AutoScaleの修正クラス作成。
      - AutoScaleFixer.cs
- とりま、これをβ1.1としてリリース。
  - β1.1
    eval : MyShogi201807260000Eval.zip
    本体 : MyShogi201807271630beta1.1.zip


- β1に関してβテスターの人たちの意見反映その1
  - エンジン選択ダイアログの下部ボタンの「次ページ」「前ページ」の文字が見切れている環境がある。(yoiyoiさん)
    - 文字フォントサイズを縮小。「選択」の文字も14→12ptに。
  - 32bit環境用の実行ファイル名が"XXX_no_sse.exe"を読みに行っているが、"XXX_nosse.exe"しか用意されていない件。(うさ親さん)
    - 32bit環境ではどれも実行できない状態でした。(´ω｀)
    - 後者のファイルを読みに行くように修正。
  - Mizarさんからのバグ報告をWIP.mdに追加。
- インストーラー用のアイコンをDebug/image/に移動。


- デバッグ用に例外が出た時のダイアログを有効にしてβ版としてテスターに配布。β1
  - β1
    eval : MyShogi201807260000Eval.zip
    本体 : MyShogi201807270940beta1.zip


- preset (段位ごとの強さ)の調整
  uuunuuunさんの実験によるとthreads = 4で、
    rating =  295.14 ln( nodes/1000) + 1319.8
  の関係があるらしいのでここからnodes数を計算。
  ratingは将棋倶楽部24のものとする。またlnは自然対数を意味する。
  - 九段～五級まで設定した。
  - presetの適用されるものが1つずれていたの修正。
  - 下の方はあまり自然な弱さになってない気がする。評価関数によって性質が違うのかな？


- WIP.md追加


- tanuki-(2018)の各CPU用の実行ファイルを用意。
	- build
		mingw32-make clean
		mingw32-make -j8 avx2 COMPILER=clang++ YANEURAOU_EDITION=YANEURAOU_2018_TNK_ENGINE
	  - buildうまくでけへん。吐きそう。
      - pacmanしたらnosse以外はbuildできたっぽい。
    - YaneuraOu2018NNUE_avx2.exe
    - YaneuraOu2018NNUE_sse42.exe
    - YaneuraOu2018NNUE_sse41.exe
    - YaneuraOu2018NNUE_sse2.exe
      - ここまで出来た。
    - YaneuraOu2018NNUE_nosse.exe
      - まだ


- やねうら王(2018)の各CPU用の実行ファイルを用意。
	Yaneuraou2018_kpp_kkpt_avx2.exe
	Yaneuraou2018_kpp_kkpt_sse42.exe
	Yaneuraou2018_kpp_kkpt_sse41.exe
	Yaneuraou2018_kpp_kkpt_sse2.exe
	Yaneuraou2018_kpp_kkpt_nosse.exe


- 形勢グラフのレイアウト調整・インストーラ設定たたき台 (Mizarさんのプルリク #27)
	* .editorconfig
	* 形勢グラフ: レイアウト調整
	* YaneuraOuSetup


- 各思考エンジンの各CPU向け実行ファイルの用意
	- 各思考エンジンの各CPUでの動作検証
- tanuki-(SDT5)用,Qhapaq(2018)用,読み太(2018)用に実行ファイルを用意
	- YaneuraOu2018KPPT_avx2.exe
	- YaneuraOu2018KPPT_sse42.exe
	- YaneuraOu2018KPPT_sse41.exe
	- YaneuraOu2018KPPT_sse2.exe
	- YaneuraOu2018KPPT_nosse.exe
- エンジンから"info string"が送られてきた時の検討ウィンドウへの表示処理実装
	- 定跡の表示がややおかしい気はする。
- 検討ウィンドウのHASH使用率、横幅狭かったので広げた

- 各思考エンジン用の定跡ファイルの用意
	- book/standard_book.db
	- book/yaneura_book1.db
	- book/yaneura_book3.db
	- book/yaneura_book4.db
	- 定跡一つ見つからない。あとで探してくる。
		- book/yaneura_book2.db


- やねうら王の思考エンジンのほうの改修
	- BookDir option追加
		- https://github.com/yaneurao/YaneuraOu/commit/315dd4b42120a824c09d394a28c044fcaa6f9417
	- 起動時に、"engine_option.txt"を読み込み、Optionsに反映するように。
		- https://github.com/yaneurao/YaneuraOu/commit/2458e32e518438db19cea57239e77b1864aeed14
	- エンジンが読み込むべき評価関数、フォルダをeval/で固定すべき。エンジン側に"eval_dir.txt"でEvalDirのデフォルト値を読み込むような何かが必要だ。
		- 共通設定に"EvalDir"は存在すべきではない気がする。


■  2018/07/26


- ponder(相手番のときに思考する)の処理その2
	- Ponderの設定の反映
		- ponder設定、エンジンオプションで設定するようにしてしまうと、先後両方がエンジンのときはponderしない、というような
		ことがしにくくなってしまう。そう考えるとponderは、対局設定ダイアログで設定できるべきのような気はする。だから
		思考エンジンのオプション設定にはponder設定について表示しないようにする。
		- エンジンに対してこの設定をHideするように。
- 定跡ファイルは book/ , 評価関数ファイルは、 eval/ 配下に配置するように。
	 - 評価関数を配置
		d-----       2018/07/25     23:53                qhapaq2018_kppt                                                       
		d-----       2018/07/25     23:52                tanuki2018_nnue                                                       
		d-----       2018/07/25     23:52                tanuki_sdt5_kppt                                                      
		d-----       2018/07/25     23:52                yaneuraou2018_kppkkpt                                                 
		d-----       2018/07/25     23:53                yomita2018_kppt   
	- 評価関数
		- 読み太 KPPT
		- Qhapaq KPPT
		- ぽんぽこ KPPT
		- tanuki-2018 NNUE
		- やねうら王 KPP_KKPT


- ponder(相手番のときに思考する)の処理その1
	- 対局設定ダイアログにPonder設定追加。
	- PlayerSettingにPonder追加。


■  2018/07/25


- Mizarさんのプルリクをマージ
	* 対局オプション「時間切れを負けにしない」でエンジンの思考時間が無制限になっていた
	* 後手のフィッシャー加算時間がエンジンに0と通知されていた
	winc前の空白が抜けていた
	* GameScreenControlEventHandler: コメント追記
	* 形勢グラフウィンドウの実装
	* 形勢グラフウィンドウ名の修正


- とりま、出来たこと。
	・エンジンごとの選択されたpresetの保存/(次回起動時の)復元
	・思考エンジンの共通設定のダイアログ作成
	・思考エンジンの共通設定の保存～復元
	・思考エンジンの個別設定ダイアログの作成
	・思考エンジンの個別設定を思考エンジンから取得するコード
	・思考エンジンの個別設定の保存/復元
	・思考エンジンのCPU判別
	・思考エンジンの設定のページャー実装
	・思考エンジンの個別設定の内容の思考エンジンへの反映
	・思考エンジンの共通設定の、各思考エンジンへの反映
	・presetの思考エンジンへの反映


- エンジン設定の作業その43
	- 自動HASHの計算、リファクタリング
		- 計算されたHASHの値、反映してなかったの修正。
	- UsiEngineHashManager、リファクタリング。
	- 自動スレッド設定
		 - 計算する部分書けた
		 - 反映する部分書けた。適切に反映してる。
		 - 両方のエンジンが両方ともponder設定になっている場合、自動スレッドによるスレッド数は、OSが返したコア数の値の1/2にすることにした。
		 - Ponderの実装してからしか、スレッドのPonderの反映が出来ない。次はPonderの実装する。


■  2018/07/24


- USI2.0.md更新 USI_PonderとUSI_Hashの送信を強制するように。


- エンジン設定の作業その42
	- 思考エンジンのHASHメモリの自動マネージメント
	- エンジン設定で、HASH用とEVAL用とWORKで使用メモリ分ける。
	- All.IntColors()追加。
	- 自動Hashの値がエンジンに反映されるようになった。
	- 自動Hashの計算した値をログに出力するようにした。
	- Hash、物理メモリの自動マネージメント
		- 完了
- USI2.0では、USI_Hash , USI_Ponder、エンジン側から送ることを強制する。


- エンジン設定の作業その41
	- 思考エンジンのHASHメモリの自動マネージメント
		- LocalGameServerがEngineDefineExを持たせる。
			- この設計よくなかった。
			- UsiEngineHashManager追加。
		- Hashサイズの自動計算のためのコードを書く。
			- かなり大変。7割ぐらい書けた。
	- CPU→CpuTypeにrename



■  2018/07/22


- エンジン設定の作業その40
	- optionがきちんと渡ってきているかのテスト
		- 共通設定
		- 個別設定
		- preset
			- 一応反映されているっぽい。
	- presetのテストをするためにgpsfish2 に対してプリセットを用意。
	- presetのスレッドのオプション名がThreadになっていたのThreadsに修正。
	- UsiOptionのToString()、もう少しダイレクトに表示するように変更。
	- Gpsfishのinstanceがまた走っていたの修正。
	- 検討用エンジンを変更できるように準備。


■  2018/07/20


- エンジン設定の作業その39
	- 共通設定のところハッシュ割合の項目が消えてたの修正
	- エンジンオプションの文字フォントサイズ調整。
	- エンジンオプションの個別設定のレイアウト調整
- エンジンオプションのダイアログ、high dpiでおかしくなるらしい。
	 - FontBuilder作成。Fontの生成を抽象化する。
		 - このアイデア良くなかった。
	 - 単にエンジンオプション設定のFont生成部、調整する。



■  2018/07/18


- エンジン設定の作業その38
	- エンジン共通設定のHash、Threadsまわりの説明文、追記。


■  2018/07/17


- エンジン設定の作業その37
	- エンジン詳細設定のオプションが保存されているかのテスト
		- やねうら王は保存されているがgpsfishは反映していないみたい。
		- EngineOptionForSettingにToString()追加。
		- EngineOptionForIndivisualにもToString()追加。
		- gpsfishの個別設定が保存されていなかった件、修正。
		- gpsfishの個別設定でMultiPVの説明文が出て欲しい気はする。
			- gpsfishの個別設定にMultiPV追加。「思考設定」追加。
			- gpsfishの個別設定に「その他」の見出しを追加。
- ListExtensions追加。ReverseIterator追加。


- エンジン設定の作業その36
	- エンジン設定ダイアログのCaptionに「エンジンオプション設定(通常対局用)」のように設定種別を表示するようにした。
- tanuki詰将棋エンジンのバナー受け取った。
	- engine/tanuki_mate/banner.png 配置


- エンジン設定の作業その35
	- 詳細設定ダイアログを出した時に詳細設定ボタンをDisableにする。
	- 詳細設定ダイアログのtab pageのTextにエンジン名を表記するように。


■  2018/07/15


- エンジン設定の作業その34
	- 例外ダイアログ、captionを表示するほう、メインウインドウの破棄時に呼び出されるとまずかったの修正。
	- 検討ウィンドウ、×ボタンで非表示にするの、閉じるのをcancelしているので他の場所から終了できなくなってしまう。まずい気がする。
	- 検討ウィンドウを出しているとメニューから閉じられなかったの修正。
	- EngineOptions、null checkうざすぎる。typedefしたい。どうしたものか…。
		- EngineOptionsとEngineOptionsForIndivisual廃止する。
		- メンバとしてList<X>しか持たないclassを定義するの、シリアライズ/デシリアライズしないといけない状況だとよろしくないという学びを得た。


- エンジン設定の作業その33
	- UsiOptionMin削除。これ使わない。
	- 思考エンジンの個別設定の内容の思考エンジンへの反映
	- 思考エンジンの共通設定の、各思考エンジンへの反映
	- presetの思考エンジンへの反映
	- 選択した思考エンジンが起動するようにした。(現状、gpsfishしか入れてないのでそれしか起動しない)
	- 検討モードの時の検討ウィンドウに出るエンジン名はエンジン表示名に変更。


■  2018/07/13


- 詰将棋エンジンのバナーも必要な気がしてきたので発注。


- エンジン設定の作業その32
	- エンジン個別設定の名前が長い時に16文字ぐらいで切る処理追加。GPS将棋で必要。
		- String.Left()バグってた。修正。
	- 個別設定の画面、共通設定にも存在する項目だけチェックボックスを出すように修正。
	- 個別設定の画面、GPS将棋でHASH_が２つ出るの修正。(GPS将棋、USI_HashとHashと２つoptionを持っていたのが原因)
	- GPS将棋のような外部エンジンに対してHashとThreadの自動マネージメント機能を提供する。
	- 個別設定画面でのDisplayNameの字下げわかりにくかったので廃止。


- エンジン設定の作業その31
	- エンジン設定ダイアログ、横幅750→775に広げた
	- 個別設定で共通設定に従うチェックボックスの追加
		- 説明文追加。
		- チェックボックスにチェックが入っている時は、その右側にある項目をグレーアウトするようにした。
	- 個別設定の保存/復元
		- 通常対局、検討エンジン、詰将棋エンジンに対する、共通設定と個別設定のclass設計をした。
			- EngineConfigs
		- EngineOptionSettingDialogBuilder作成、コード分離
	- 個別設定のControl、更新中はSuspendLayout()を呼ぶようにした。
	- 個別設定の保存/復元できた。
	- 個別設定の左のラベルをクリックしても左端のチェックボックスのオンオフが出来るように。
            // …ようにしようと思ったら、label1がEnable == falseになってしまうので
	        // このクリックイベントが発生しなくなるのか…。うーむ、、そうか…。
- 検討エンジンの設定、対局時の設定そのままでええんかな…。検討時には定跡をオフにしたいとかあるかも。
	- 検討エンジンの選択ダイアログが必要なような…。
		- 共通設定と個別設定が必要なような…。
	- 詰将棋エンジンのオプション設定も必要なような…。



- エンジン設定の作業その30
	- エンジン設定のコンボボックスの文字フォント、もうひと回り小さく。
	- エンジン設定で配置している短い説明文の手前、少しスペースあける。
	- エンジン共通設定に項目追加。
		- MultiPV , Contempt , ContemptFromBlack追加。
		- PvInterval , ConsiderationMode , OutputFailLHPV 追加。
		- 定跡設定
			option name BookMoves type spin default 16 min 0 max 10000
			option name BookIgnoreRate type spin default 0 min 0 max 100
			option name BookEvalDiff type spin default 30 min 0 max 99999
			option name BookEvalBlackLimit type spin default 0 min -99999 max 99999
			option name BookEvalWhiteLimit type spin default -140 min -99999 max 99999
			option name BookDepthLimit type spin default 16 min 0 max 99999
			option name NarrowBook type check default false
			option name ConsiderBookMoveCount type check default false
		- 設定項目、日本語化は、これですべて終わり。
	- エンジンオプション関連の残り作業
		- 個別設定で共通設定に従うチェックボックス
		- 個別設定の保存/復元
		- 共通設定・個別設定の思考エンジンへの反映


- エンジン設定の作業その29
	- 対局設定で思考エンジンが選択されていない時は詳細設定ボタンを無効化するように修正。
	- WindowsServer 2012R2で動かすとエンジンオプションとかすごく小さい。なんぞこれ…。
		TextBoxのFontの生成がおかしいのか。
		TextBoxのデフォルトフォントが"MS UI Gothic, 9pt"になっているが、これがdpi scalingの影響受けている。
		この.NET Frameworkの実装ひどすぎない？
		- .NET Framework 4.6以降ならこれでいけるのか？app.configで
			<appSettings> 
			<add key="EnableWindowsFormsHighDpiAutoResizing" value="true" /> 
			</appSettings>
		- cf. https://blogs.msdn.microsoft.com/visualstudio_jpn/2015/07/20/net-framework-4-6/
		- これでなさげ。
		- フォントが、
		"UI Gothic, 9pt"　→　high dpiの影響受けて小さくなる , デフォルトフォントなのに…。
		"MS UI Gothic, 9pt"　→　いける(scalingされる) ということのようだ。なんぞこれ。
		- ああ、わかった。デフォルトフォントだと、Fontクラス作って代入されなくて、それでまずいのか。
		明示的に代入するようにしたらうまく動いた。そうか…。
		- エンジンオプションの画面、フォント指定しなおした。
	- 検討ウィンドウのListViewもフォント指定しなおす。
		- Windows Server 2012 R2でもうまく表示されるようになった。



- エンジン設定の作業その28
	- エンジン個別設定で、先後で同じ思考エンジンを選択した時に、別の設定に出来る必要があるのだろうか…。
		- これ出来ない。したいなら、engine配下のフォルダをコピーして解決して欲しい。
		- エンジンごとに設定を持っているので、これは仕様ということで仕方がない。
	- エンジンオプション設定ダイアログ、もう少し縦長に変更。
	- エンジン個別設定の1ページの項目数がきちんと決まっていないの修正。
	- エンジン設定のところ、見出し前に対して水平線追加
	- エンジン個別設定の日本語化進める
		- BookOnTheFly , SlowMover , ResignValue追加。


- エンジン設定の作業その27
	- エンジン個別設定のコード色々書いた。だいたいうまく動く感じになった。
	- エンジンオプションの日本語説明文を追加していく。
	- エンジン設定ダイアログで最後のページに何もコントロールが表示されていない(ちょうど設定項目がなくなる時に1ページ余分に表示される)バグ修正。
	- エンジン設定ダイアログの項目のページわけ調整。
	- エンジン共通設定にデバッグ用の項目追加。
		- Param1 , Param2をHide設定に。
		- 「着手遅延設定」追加。
		- 「思考時間設定」追加。
		- 「入玉設定」改め「持将棋の設定」
			- 引き分けの手数もここに。
		- 「評価関数の設定」追加
			- EvalShareはdefault trueに変更。これtrueで問題ないやろ。
			- よく考えると空き物理メモリの計算の時、EvalShare考慮する必要あるのか…。これわりと面倒なのでは…。
	- 日本語化、半分ぐらい終わった。


- エンジン設定の作業その26
	- エンジン個別設定のほう、日本語化していく。
	- GPS将棋に対して詳細設定で落ちるの修正。
		- EngineDefine.IsSupported()追加。
	- option名 Thread 間違い→　Threadsに変更。
	- エンジン個別設定のほう、エンジン共通設定のDescriptionを持ってきた。
	- エンジン共通設定にハッシュ、スレッド、入玉設定まで表示できた。
	- 自動ハッシュの設定、エンジン個別設定でも出来ないといけないのか…。あとで考える。


- エンジン設定の作業その25
	- エンジン設定、comboboxを日本語化する。
	- EngineOptionDescriptionにComboboxDisplayNameとHide追加。
	- ComboBoxの日本語化、うまく行った。
- ControlBinderのunbind、きちんと呼び出すようにした。



■  2018/07/12


- エンジン設定の作業その24
	- エンジン共通設定に従う設定であっても、エンジン個別設定のほうの値域を守らないといけないという話はあるか…。まあいいか…。
	- エンジン個別設定で、エンジンから送られてきたoption USI_Ponderは無視する。
		- この項目はGUI側のponder設定に従うべき。
		- 同じく、Hash,USI_Hashは統合されるようにした。
	- エンジンオプションのページャー、大変すぎない？
		- そうでもなかった。ページャー実装完了。


- USI2.0.md更新
	- ハッシュ用のメモリを透過的に扱うためには、USI2.0にUSI_Hashの代わりにHashを使うという拡張が必要。
	- UseHashCommandExtension追加


- エンジン設定の作業その23
	- EngineOptionを共通設定用と個別設定用に分離した。
	- オプションの共通設定のところに定跡設定・入玉設定追加。
	- ページの代わりに垂直スクロールにしたら波打った。ページャー実装する。
	- 前ページボタンと次ページボタン追加。
		- ボタンとテキストボックスをControlの大きさに追随するコード実装。
	- comboboxの内容も、日本語化したほうが良いのでは…。
		- 考える。


- 更新履歴.txt 更新


- エンジン設定の作業その22
	- エンジン共通設定のところに定跡の選択項目追加。
		- あー、これ選択された定跡によって他のオプション設定変わるのか…。
		- これわりと大変なのでは…。
	- エンジン設定のところ、comboboxサポート。
	- エンジン設定のところ、textboxサポート
	- エンジン設定の説明のテキストボックス、垂直スクロールバー追加。

	- 作業対象 option項目

		option name USI_Ponder type check default false
			 // この値は、GUIのponder設定に従うべき。
		option name USI_Hash type spin default 256 min -9223372036854775808 max 9223372036854775807
			 // この値は無視される
		option name Hash type spin default 16 min 1 max 1048576
			// これはUSI拡張でこちらを使うことになっているので問題ない。

		option name Threads type spin default 4 min 1 max 512
			// スレッド設定

			// デバッグ用
		option name WriteDebugLog type check default false
		option name Param1 type spin default 0 min 0 max 100000
		option name Param2 type spin default 0 min 0 max 100000

			// 思考時間設定
		option name MinimumThinkingTime type spin default 2000 min 1000 max 100000
		option name NetworkDelay type spin default 120 min 0 max 10000
		option name NetworkDelay2 type spin default 1120 min 0 max 10000

			// 持将棋の設定
		option name EnteringKingRule type combo default CSARule27 var NoEnteringKing var CSARule24 var CSARule27 var TryRule
		option name MaxMovesToDraw type spin default 0 min 0 max 100000

			// 定跡
		option name BookFile type combo default standard_book.db var no_book var standard_book.db
			var yaneura_book1.db var yaneura_book2.db var yaneura_book3.db var yaneura_book4.db var user_book1.db var user_book2.db var user_book3.db var book.bin
		option name BookOnTheFly type check default false

		option name BookMoves type spin default 16 min 0 max 10000
		option name BookIgnoreRate type spin default 0 min 0 max 100
		option name BookEvalDiff type spin default 30 min 0 max 99999
		option name BookEvalBlackLimit type spin default 0 min -99999 max 99999
		option name BookEvalWhiteLimit type spin default -140 min -99999 max 99999
		option name BookDepthLimit type spin default 16 min 0 max 99999
		option name NarrowBook type check default false
		option name ConsiderBookMoveCount type check default false

			// 評価関数
		option name EvalDir type string default eval
		option name EvalShare type check default false

			// 思考設定
		option name MultiPV type spin default 1 min 1 max 800
		option name Contempt type spin default 2 min -30000 max 30000
		option name ContemptFromBlack type check default false
		option name ResignValue type spin default 99999 min 0 max 99999
		option name SlowMover type spin default 100 min 1 max 1000

		option name DepthLimit type spin default 0 min 0 max 2147483647
		option name NodesLimit type spin default 0 min 0 max 9223372036854775807
		option name nodestime type spin default 0 min 0 max 99999

			// 読み筋の表示
		option name PvInterval type spin default 300 min 0 max 100000
		option name ConsiderationMode type check default false
		option name OutputFailLHPV type check default true

			// 非表示にしておく。
		option name SkipLoadingEval type check default false
		option name EvalSaveDir type string default evalsave




- エンジン設定の作業その21
	- エンジン個別設定をエンジンの実行ファイルを起動して取得するコード追加。
	- エンジン接続時のエラーメッセージをわかりやすく変更。
	- UsiOption.CreateOptionCommandString追加。
	- エンジン個別設定がエンジンから取得したものが表示できるようになったが、項目多すぎて入りきらん…。
		- Pager必須なのか。禿げそう。
		- ちょっと考える。
	- エンジン個別設定画面作成
		- EngineOptionSettingControlに追加。
		- エンジンに対して"usi"コマンドを送信して、option項目をもらって、parseする部分を書く。


- エンジン設定の作業その20
	- エンジン共通設定の内容を保存するコード/復元するコードを書く。
		- できた。
	- EngineOptionForSetting : NotifyObjectにする。
	- ControlBinderにComboBox,NumericUpDownをstringのpropertyとbindするコード追加。
	

- エンジン設定の作業その19
	- エンジンオプションに短い説明と長い説明が必要なような…。
		- DescriptionとDescriptonSimpleとわける。
	- エンジンオプションの共通設定画面実装
		- NumericUpDownの上限、下限値をUsiOptionから取得して設定するコード追加
		- CheckBox生成
		- 詳細説明文のテキストボックス追加
			- マウスのhoverに対して表示されるように。
		- 「ハッシュメモリ設定」「スレッド設定」追加。


■  2018/07/11


- エンジン設定の作業その18
	- Option、結局共通設定用と個別設定用とプリセット用と3つ必要だという結論になった。
	- 共通設定と個別設定は1つにまとめた。EngineOption.csに用意した。
	- 共通設定をEngineOptionSettingControlで少し表示出来るようになった。
		文字列がはみ出たりするので改行の処理とか何とか必要ではなかろうか…。
		- 少し考える。


- エンジン設定の作業その17
	- エンジン共通設定ダイアログ、個別設定ダイアログ
		- EngineCommonOptionSettingControl
		- EngineIndivisualOptionSettingControl
		に分けておいて、
		- EngineOptionSettingDialogにtabとして貼り付けるか…。
		- いやー、よく考えたら、共通のControlでいいのか。
			エンジン個別のほうに「共通設定に従う」のチェックボックスがあればそれで良しと…。
		- EngineOptionSettingControl作成。
		- EngineOptionDialog作成。Tab作って貼り付ける。
	- UsiOptionとEngineOptionクラスとの兼ね合いが難しいな。少し考える。


- エンジン設定の作業その16
	- EngineConfigUtilityの実装追加。保存～復元。
	- EngineConfig、TheAppに追加。終了時の保存追加。遅延読み込み実装。
	- 完了) エンジンごとの選択されたpresetの保存/(次回起動時の)復元


- エンジン設定の作業その15
	- エンジンごとに個別に選択しているpresetを保存するように。
	- エンジンごとの個別設定を保存するように。
	- "MyShogi.engine.xml"追加。
		- ファイル名あまり長くなるの気持ち悪いのでこれくらいで。
		- "MyShogi.setting.xml"は使っているので、ファイル名に"setting"を入れると紛らわしい。
	- UsiEngineConfig.cs追加。
	- EngineOption.name , valueをName , Valueにrename。
	- EngineConfig追加。EngineConfigUtility追加。
	- EngineDefine、DataContract、arrayとListで同じなので、arrayやめてListに変更しとく。
	- EngineConfigUtilityの実装まだ。あとで書く。


- エンジン設定の作業その14
	- 対局設定ダイアログでpresetを選択した時に、その説明文を表示するようにした。


- エンジン設定の作業その13
	- エンジン選択時に、プレイヤー名をエンジンのDisplayNameから取得して対局ダイアログに設定するように。
	- 対局設定の氏名を対局盤面のネームプレートの表示名に
	- 棋譜保存のときに対局者名を保存
		- されてた。
	- 対局設定で人間←→コンピュータの切り替えでプレイヤー名を
		コンピュータ名、「先手」/「後手」に変更されるように。
	- 対局設定でエンジンを選択した時に対局相手を「コンピュータ」に自動的に変更する処理追加。
	- 対局設定でエンジンを選択していない時に「コンピュータ」を選んだ時にエンジン選択ダイアログを出すように変更。
- メニューの「ファイル」が無効になっていたの修正。

- エンジン設定ダイアログ、最後96dpiで編集。
	- しなくてよさげ
	- .NET Frameworkのバグだったのだろうか…。


■  2018/07/10


- エンジン設定の作業その12
	- GameSettingDialogの先手用、後手用の分、別コントロールにしたほうが良いのでは…。
		- 分離を試みる。
			- GameTimerSettingControl
			- GamePlayerSettingControl
		こうしよう。
	- 対局設定ダイアログ改造
		- 詳細設定ボタン削除
		- プリセットに対する説明追加。
- tanuki-2018年版の説明にCPU温度の説明文追加。


- presetに各段位ごとのDescription追加
- presetにカスタム追加。


- No Banner素材、差し替え。


- エンジン設定の作業その11
	- 対局設定ダイアログで、選択したエンジンと選択したプリセットが次回起動時に再現されるようにした。
	- 対局設定ダイアログで、コンピュータが選ばれていないときにコンピュータと対局しようとするときエラーダイアログを出すようにした。
- EngineDefineにpathくっつけた構造体が必要だな
	- EngineDefineEx追加
- EngineDefinの読み込み、遅延読み込みに変更。



■  2018/07/09


- aboutダイアログとシステム情報ダイアログをメインウィンドウの前面に来るようにした。


- エンジン設定の作業その11
	- メモリ足りない時に警告出す処理追加
	- 対局設定ダイアログ、エンジン選択ダイアログにTopMost指定するのやめる。
		- メッセージダイアログが最前面になって欲しいのにならない。
		- Showのときに親指定するか…。
		- 対局設定ダイアログ、親指定した。
	- 対局設定ダイアログの最大化と最小化のボタン、なくす。


- エンジン設定の作業その10
	- 対局設定のエンジン選択ボタンをこのエンジン選択ダイアログと紐づける。
		- エンジン選択のボタンを押した時に反映するところまでは出来た。
	- 対局設定ダイアログのViewModelにEngineDefineを持たせてそれを反映するようにした。
	- 対局設定ダイアログへのエンジンのPresetsの反映、まだ。GlobalConfigに保存するのもまだ。


- エンジン設定の作業その9
	- エンジン選択ボタンのハンドラの実装
	- うまく動いているようだ。これでエンジン選択ダイアログは完成。
	- あとは対局設定のエンジン選択ボタンをこのエンジン選択ダイアログと紐づけて…。
- PropertyChangedEventArgsにsenderが必要だと思った。NotifyObject改造した。


- 検討ダイアログでranking順に並び替えた時にちらつく件、調査。
	- ListView.Items[n] = itemとする限りはちらつくので部分更新するように変更。
	- ちらつかなくなった。なんなんだ、このバッドノウハウ。


- NotifyObjectによるControlとのbinder、開発する。
	- 旧ControlBinder削除
	- 新ControlBinder、Model.Common.ObjectModelに追加。
	- 新しいControlBinderで対局設定ダイアログのコード、リファクタリングする。
		- 大改造になった。ソースコードはだいぶ見通し良くなった。
- NotifyObjectでhandlerすべてRemoveしたときにpropertyのremoveまでやってたの修正。


- エンジン設定の作業その8
	- エンジン選択ダイアログのpager実装。
	- バナーがない時のNoBannerの表示実装
		- NoBannerの素材がないので発注。
	- NoBanner、ImageMangerに追加。
- ImageManager、素材が増えてくると起動遅くなるので、遅延読み込みちゃんとサポートしたほうがいいのでは。
	- ImageLoader、ImageManagerを遅延読み込みに対応。
	- 起動わずかに早くなった。(気がする)


- readme.mdにスクリーンショット掲載(やねうら王の公式ツイッターから)


- USI2.0.md追記


- USI2.0.md更新


■  2018/07/08


- NotifyObjectの双方向データバインディング、無限再帰になるわｗ
	- senderつけるようにした。
- KifuControl、データバインディングを使って少しリファクタリングした。


- NotifyObject同士のdata bindが出来るように改造した。
	- あとでこれを使ってリファクタリングする。


- NotifyObject、リファクタリングする。
	- LazyLock、いけてないので削除する。
	- NotifyObject 新しくなった。コード、すっきりした。


- エンジン設定の作業その7
	- エンジン側で発生した例外、LocalGameServerでハンドルするようにした。
		- ゲーム自体は中断扱い。
	- EngineSelectionDialogの実装作業
		- 8割ぐらい終わった。ページャーあとで作る。
	- EngineDefineUtility.GetEngineDefines()追加。
		- これ、Appで行う。
	- エンジン選択ダイアログで表示順のコントロールをしたい。
		- DisplayIndexという項目追加する。


■  2018/07/07


- エンジン設定の作業その6
	- エンジン同士の対局開始、エンジン初期化中の画像が出ているときに片側のエンジンが指すの修正。
	- 検討ウィンドウの縦幅を縮めるとnull参照で落ちるの修正。


- エンジン設定の作業その5
	- AutoSetting　→　Presetsとrename
	- 起動時にengine/を調べるコードEngineDefineUtilityに追加。GetEngineDefineFiles()
	- EngineDefineにDescription追加。
	- EngineDefineに従って設定を描画するEngineSelectionControlを追加。コード書きかけ。
	- NotifyObject派生クラス、～ViewModelとrename
	- NotifyObjectの部分更新機能、不要な気がしてきたので削除。
	- View.Win2D、フォルダ作って整理。


- エンジン設定の作業その4
	- SerializerにDataContractSerializerを使っているが、JSONのほうが良くないかな…。DataContractSerializerだと手で書けない。
		- まあいいか…。他の環境についてはまた考えよう。DataContractSerializer相当のものを自作するのはそんなに難しくないので…。
	- CPUのコア数取得、Model.Utility.Enviromentに追加。
	- 空きメモリの取得、Model.Utility.Enviroment.GetFreePhysicalMemory() 実装
	- CPU自動判別、CPUのコア数、空きメモリ等の自動認識(1日ぐらい) 7/8..9
		- これ、終わった。エンジン選択とエンジン設定を進める。


- エンジン設定の作業その3
	- EngineAutoSetting追加。
	- GlobalConfigの読み書きにDataContractSerializerを用いるように変更。
	- Model.Utility.Serializer追加。


- エンジン設定の作業その2
	- EngineDefine/Cpu.cs追加
	- 実行環境のCPUを判別して実行ファイル名を決定するところまで書けた。


■  2018/07/06


- エンジン設定の作業その1
	- 物理メモリ調べるの遅すぎない？処理時間計測する。
	- 200msほどしかかかってなかった。遅くはなかった。
- Shogi.EngineDefine.cs追加。ここに設定ファイルの生成器も入れる。
	- EngineDefine
		- 策定中
	- EngineDefine2018追加


- USI2.0.md更新


- 検討ウインドウでのMultiPVの処理その3
	- MultiPV向きの切り替えボタン用意するか？
	「R」ボタンを押すとR順に並ぶようにするか…。
	「着順」「R順」ボタン追加。
	「着順」-読み筋を到着時刻順に表示。
	「R順」-読み筋をR(Rankingの略。候補手の順位のこと)順に表示。
	- 検討モードの候補手の数、終了時に保存しておき、次回に復元するようにした。
	- MultiPVの処理、これで終わり。


- 検討ウインドウでのMultiPVの処理その2
	- 検討モードの時だけ「候補手」のComboBoxを出すようにした。
	- 検討モードの「候補手」の値でMultiPV出来るようになった。


■  2018/07/05


- 検討ウインドウに「候補手」のテキストボックス追加。
	- レイアウトを調整するコード追加。
- 検討モードには、MultiPVの処理が必要なのか…。大変だな、こりゃ。MultiPVの表示が必要だ。
	候補手１手
	候補手２手
	候補手３手
	候補手４手
	候補手５手
	候補手６手
	候補手７手
	候補手８手
	候補手９手
- MultiPVまわりも、きちんとイベント通知モデルで書いて行ったほうがいいのではないか…。
	- イベントモデルでリファクタリングする。
	- てか、delegate使ってあるところ、だいたいおかしいのでは…。
- UsiEngineThinkingState、StateというよりBridgeのような気が..renameしとく。


- 盤面編集で不正な局面を作って、検討モード、詰将棋モードに入ることが出来るのを修正。
- LocalGameServer、ソースコード少し整理した。
- 検討ウィンドウ、TopMost指定するのやめた。TopMostだと使いにくい気がした。


- 検討ウィンドウまわりの作業がひとまず終わったので、実装済みの機能.md更新。


- 検討ウィンドウのメインのウィンドウに対する相対距離、終了時に保存して、次回起動時に復元するようにした。
- 対局開始時に検討ウィンドウの内容を即座にクリアするようにした。
- 検討ウィンドウを非表示→再表示の時に前のPVが残っているの、削除するようにした。
- 検討ウィンドウがメインのウィンドウに重なって表示されていたの修正。
- 検討ウィンドウの評価値の表示で"++"と"--"の列追加。
- 検討ウィンドウにMultiPV用に"R"列追加。
- 検討ウィンドウを×ボタンで一時的に非表示に出来るように変更。
	- メニューに「ウィンドウ」追加。
- 棋譜ウィンドウで使用するフォントも、MS UI GothicからMSゴシックに変更。
	- 画面をリサイズした時に、ウインドウ範囲外に文字が出にくくなった。


- 現在の持ち時間をCPUのThink()に反映させる処理コード書いた。


- メインウィンドウのサイズ、シリアライズしたほうが良いのでは…。
	- GlobalConfigに保存するようにした。


- 検討機能の実装その14
	- 検討モードで前局面のPVが送られてくる件、修正。
		- UsiEngineThinkingStateにIsStopping追加。
	- 検討モードでユーザーの2点クリックが効かない件、修正。
	- 検討ウィンドウの探索node数など桁が増えてくるとずれるの修正。
		- MS UIゴシック、スペースが等幅ではないのでスペースによってpadding出来ない。MSゴシックに変更。


- 検討機能の実装その13
	- 検討中、急ボタンを無効化
	- 検討モードでは、Thinkコマンドでgo infiniteで回すように。
	- EngineThiningState追加。
		- すべてこのクラスを通じてbestMoveとponderMoveの処理を行うようにした。
	- PlayerクラスにSpecialMove用意する。BestMove,PonderMoveはgetterのみにする。
	- 検討モード以前に、CPUに持ち時間設定などを渡す必要があるのか…。
		- UsiThinkLimit.cs追加。
		- Player.Think(usiPosition,thinkLimit)
	- 検討モードのCPU側の思考時間、infiniteにした。
	- 検討モードで局面動かした時に前の局面の指し手(非合法手)ひとつ遅れてやってくる。
		- これ同期問題、結構やらしい。あとでよく考える。
	- 検討モードでpickがキャンセルされている原因あとで調べる。


■  2018/07/04


- 検討機能の実装その12
	- 検討モードでエンジンを初期化するコード書けた。
	- 検討モードでエンジンに局面を渡すコード書く。
	- 詰将棋エンジンはいつ起動するのか？
		- ああ、両立不可なのか。そうか。
	- 詰将棋ボタンを押すと詰将棋エンジンが起動するようにした。
		- 詰将棋エンジンのUSIコマンド、特殊なのか…。あとで考える。
		- メニューの対局のところに「詰検討」追加。
- LocalGameServerのEngineInitializingまわりのイベントモデル、おかしい気がする。コード、リファクタリングする。
	- LocalGameServer.UpdateInitializing()にまとめた。


- 検討機能の実装その11
	- 盤面反転しているなら、MiniBoardもそれを引き継ぐ必要があるのでは…。
		- 生成時の状態を引き継ぐようにした。
	- プロパティ名としてのVisiblity　→ Visibleにrename
	- 対局中は「検」ボタンを無効化するようにした。
		- 「解」「詰」ボタンも同様。


- 検討機能の実装その10
	- メニューに「ウィンドウ」追加。
		- よく考えたら、別ウィンドウになっているのだから、表示を見なければいいだけのような…。
		- 検討機能を実装してから考えなおす。
	- 「検」ボタンで検討モードに入れるように。
		- Config.InTheBoardEdit削除。これ、GameServerのGameModeがあるから不要か。
		- 依存プロパティ、依存している側はsetter不要なのか…。修正した。
		- gameServer.AddPropertyChangedHandler("GameServerStarted", UpdateMenuItems, Parent);
			- このプロパティ、削除。GameModeの初期値を別に用意して、LocalGameServer.Start()でその値を変更して、
				GameModeの変更イベントをハンドルすれば十分。
		- toolStripのほうの「検」ボタンのテキスト、検討中は「終」に変更する。
	- メニュー→対局のところに「検討モード」を追加。
	- メニューのファイルなどのところ、セパレーター記号、挿入。


- 実行時の例外を捕捉して例外内容とスタックトレースをダイアログに表示するようにした。
- 検討ウインドウのColumn生成前にリサイズイベントが起きた時に例外が出ていたの修正。
- Windows Server 2018 R2環境でRDPでつないで、やってみたら、検討ウィンドウの文字小さかった。なんぞこれ…。
	AutoScale大きすぎなのか…。これはまあいいのか…。


- USIの"info.."でparse出来ない文字列に遭遇したらエラーをログとして出力するように変更。
- MiniBaordのBoardReverseのsetterでもgameServer==nullの時に例外で落ちないように修正。


- 先手CPU、後手人間で対局開始時にBoardReverseにならないの修正。
- MiniBoardのBoardReverseのgetter、gameServer==nullの時に例外で落ちてたの修正。
- ⏪⏩ボタン、フォントがないそうで…。別の文字を使うようにする。


- EvalValueの定義変更による評価値グラフ表示エラーの修正。 #23(Mizarさんのプルリク)
	- Int.MaxValueが無効値扱いに変更されたため、float.NaNを用いて描画しようとしていた。


- 対局中のCPUの読み筋表示が終わったので、実装済みの機能.md更新


- メインウィンドウのリサイズで検討ウィンドウの位置、追随するように。
- 検討ダイアログ上の表示文字列、色々調整。


- CPU対局時の読み筋の表示の実装その7
	- LocalGameServerで、新しい局面に対してSetRootSfenイベントを投げるように。
		- 読み筋、なんとなく表示されるようになった。
	- ミニ盤面のボタン、いまひとつ反応が鈍い気がするのだが…。
	- 時刻表示、ミリ秒以下は0.1までの表示。
	- ミニ盤面、いつの間にか、反転ボタンが使えなくなっていたの修正。
		- メニューのupdateハンドラは呼び出されるが、メニューに属するLocalGameServerではないので更新イベントが発生しないのか。
		- UpdateMenuのハンドラで、メニュー更新していないときは、Dirtyフラグ立てるように修正。
	- ミニ盤面、いつの間にか、ユーザーが駒を動かせるようになっていたの修正。
		- これもとから動かせていたのに気づかなかっただけか…。
	- とりま、読み筋の表示はひとまず終わり。次は検討モード。
- UsiEngineの例外を捕捉して、Logに出力するようにした。


- EvalValue、符号を反転させた時に、先後逆から見た評価値になることを保証されるように修正。


■  2018/07/03


- CPU対局時の読み筋の表示の実装その6
	- USIプロトコルの"info .."のparser書き進める。
		- これ、PVはともかく、scoreはmateとかの表記もあるし、全部やろうとするとparse結構、大変なのでは..
		- scoreのところのparse、upperboundとかmateとかあって大変。これEvalValueに代入できなくて大変。
			EvalValueでupperbound表現できないの、設計のミスなのでは…。
			- ScoreBound追加。
		- とりま、読み筋の出力まわり、うまく動いた。
		- あとはSetRootSfen送るところとか書けば、読み筋の出力はひとまず完成か。
			- info...のparserちゃんと書くのとinfo stringなどの取扱いも考慮しないと。


- CPU対局時の読み筋の表示の実装その5
	- UsiEngine.HandleInfo()の実装
	- EngineConsiderationPvDataやめ。UsiThinkReportとrename。EngineConsiderationInfoDataと合体させる。
	- UsiThinkReport , UsiThinkReportMessageを用意。
- NotifyObject、BeginInvoke()でいいならLazyLock()する必要ないような？form以外を呼び出す時にdead lockになるのか…。


- CPU対局時の読み筋の表示の実装その4
	- 対局開始時にプレイヤーがCPUの場合、検討ウィンドウにそれを出力するように。
- NotifyObjectでInvoke()を使っていたのをBeginInvoke()に変更する。操作時のレスポンスなどが少し良くなった気がする。
- 対局盤面のネームプレートがいつの間にか、プレイヤー名が反映されなくなっている？
	- CPUだからか。CPUの時に名前を持ってくる処理、まだだった。あとで書く。


- CPU対局時の読み筋の表示の実装その3
	- メニューに「ウィンドウ」という項目追加。ウィンドウ設定はここに従う。
	- 検討ウィンドウを出した時にメインウィンドウの再描画のイベントが起きなくなってしまった…。原因調査する。
		- 検討ウィンドウを出したあと、Timerのtickイベント来てない。
		- ああ、MiniBoardの再描画イベントで無限に呼び出されていたのか…。修正した。
- Model.Common.Win32追加


- CPU対局時の読み筋の表示の実装その2
	- EngineInfo.cs追加。
	- private void engine_info_handler(EngineInfoKind kind,int n,object o)
		書いたが、これがUI Threadで実行されるためには…。NotifyObjectで表現する必要があるのか？少し考える。
		- そうみたい。LocalGameServerに仮想プロパティをもたせる方向で…。
	- GameScreenControlにEngineInfoChangedのプロパティ生やす。
	- MiniShogiBoardのForceRedraw削除。これ良くない設計だった。ちゃんとイベントとして処理するように変更。
	- EngineConsiderationInfoData、すべて文字列で保持するように変更。
- StringExtension絡み、渡された引数のnull check追加。


- EvalGraph: 評価値グラフの上下反転 (#22) Mizarさんのプルリク


- 検討機能の実装その9
	- EngineConsiderationControlの表示調整。
- CPU対局時の読み筋の表示の実装その1
	- handlerが複数になるのダサいな…。何かいい方法を考えなくては…。


■  2018/07/02


- 検討機能の実装その8
	- ミニ盤面の同期がなされないことがあったバグ修正。
- EngineConsiderationDataをEngineConsiderationPvDataにrename
- EngineConsiderationInfoData追加。
- EngineConsiderationControlに追加する。
	プレイヤー名
	予想手
	現在の探索手
	探索深さ
	探索局面数
	NPS
	ハッシュ使用率
	スレッド数
	- 一応、表示されるところまで書けた。あとで調整する。
- 別の棋譜を読み込んで同じ手数であった場合にその局面に移動できないバグ修正。
	

- 検討機能の実装その7
	- EngineConsiderationControlのクリックで読み筋を継ぎ盤で見せる機能
		- ミニ盤面、ちゃんと動くようになった。
	- GameScreenをGameScreenControlとしてコンポーネント化した現在、GameScreenControlViewModelは
		- 設計がおかしいので削除して、メンバをGameScreenControlに移動させる。
	- NoThreadモードの時にDirtyフラグが立ったら、即座に画面更新するようにした。
		- これ絡みでミニ盤面また更新されなくなった。あとで原因調査する。
	- MainGameDialogに初期局面に戻すボタンと末尾の局面に移動するボタン追加。
		- 実装した。
	

- 検討機能の実装その6
	- EngineConsiderationControlのクリックで読み筋を継ぎ盤で見せる機能
		- ハンドラ書いた
		- マウスクリックでミニ盤面に反映するようにはなった。マウスクリックというよりSelectedでミニ盤面に反映するように変更。
		- EngineConsiderationDialogの初期化まわりおかしい。盤面進められない。あとで調査する。
	- MiniShogiBoardDataからBoardReverse削除。ここに持たせるべきではなかった。


- 検討機能の実装その5
	- EngineConsiderationControlのクリックで読み筋を継ぎ盤で見せる機能
		- ハンドラまだ
	- EngineConsiderationControlのPVの読み筋の棋譜表示。(KIF2形式で)
- EvalValue、IsSpecialValue()追加。
	

- EvalValue、"score mate+" "score mate-"のこと忘れていたので追加。


- GameEvaluationDataに渡している評価値、List<EvalValue>に変更する。
	- これに伴う修正を、Mizarさんに依頼。


- 検討機能の実装その4
	- MiniShogiBoardのKifuListが同期していない件、調査
		- タイミングの問題だけのようだ。コード自体はうまく動いていた。
	- 検討機能より先にCPU対局時の情報表示をやらねば。検討はMultiPVなので、CPU対局時の情報表示の機能の上位のレイヤーである。
	- EngineConsiderationControlの表示列、追加。「読み筋」の幅自動調整のコード実装。
	- Model.Shogi.DataにEngineConsiderationData.cs追加。
	- EngineConsiderationControl.AddInfo()追加。
	- Shogi.CoreにEvalValue追加。


- 検討機能の実装その3
	- BoardReverseもGlobalConfigが持つと各GameScreenControlが個別に反転させられないので
		自前で持つべきなのか…。GlobalConfigからLocalGameServerに移動させる。
		- あ、そうなってた。
	- 検討機能より先にCPU対戦の時の読み筋の表示が先なのでは…。
	- MiniBoardに渡す構造体を設計するのが先か…。
		- この構造体、Model.Shogi.Dataに書くことに。
		- EvaluationGraphData.csもここに移動。
		- MiniShogiBoardData.cs追加。
	- EngineConsiderationDialogのMiniShogiBoardに盤面反転ボタン追加。
	- MiniShogiBoardのKifuListが同期していないようだ。なんで…。


■  2018/07/01


- 検討機能の実装その2
	- LocalGameServerにNoThread追加。スレッドなしで実行するモード。
	- MiniBoardのネームプレート、邪魔じゃね？
		- GameScreenControlにネームプレートなしで表示するオプション追加。
	- EngineConsiderationDialogのMiniBoardまわりに局面、進める/戻すのToolStripつけた。


- 評価値グラフ描画 (#21) Mizarさんからプルリク。
	* conv: message fix
	* SystemInfo: processorArchitecture を public に
	* KI2形式 + 駒打ちのみ"打"強制表示オプション(FromSqFormat.Drop)追加
	* 評価値グラフ描画


- 検討機能の実装その1
	- 読み筋の描画部分にListViewを使う。
	- ListView、ちらつく。DoubleBufferにしようにもそのフラグがprotectedだからListViewを派生させないと変更できない。なんぞこの作り…。
		- 将棋所はよく見るとちらついているように見える。ShogiGUIはちらついていない。
	- EngineConsiderationDialogに継ぎ盤つければいいのか？まあ、出来なくはなさそう。
	- 継ぎ盤用のコントロールさらに作るべきなのか。
		- MiniShogiBoard出来た。
		- LocalGameServer、停止を保証しないといけない。
			- あとで考える


■  2018/06/30


- メニューの更新の高速化
	- 対局中は呼び出されていないし、ToolStripも、CPU×CPUの対局中は更新は発生していないし、
	CPU×人間のときは多少遅くても誤差だし、まあいいか…。


- GameScreenのコンポーネント化その4
	- GameServerのイベント通知、もうちょっと整理。
	- TheAppでイベントのbindをするのをやめて、これらはGameScreenControlのほうでbind～unbindを行うように変更。
		gameServer.AddPropertyChangedHandler("InTheGame", mainDialog.UpdateMenuItems, mainDialog);
		gameServer.AddPropertyChangedHandler("BoardReverse", mainDialog.UpdateMenuItems, mainDialog);
		gameServer.AddPropertyChangedHandler("GameServerStarted", mainDialog.UpdateMenuItems, mainDialog);
		gameServer.AddPropertyChangedHandler("InTheBoardEdit", mainDialog.UpdateMenuItems, mainDialog);
	- これでGameScreenをコンポーネントとして再利用しやすくなった。


- GameScreenのコンポーネント化その3
	- MainDialogのRedrawの処理修正。
	- メニューの部分、ちらつくのでダブルバッファに戻す。
	- これ、貼り付けてるControlもダブルバッファにならないのか？
		- ならなさげなので良し。
	- よし、これでcommitしとく。大改造終わり…。


- GameScreenのコンポーネント化その2
	- GameScreenControlを追加して、そこに移動させていく。
	- MainDialogにGameScreenControl貼り付け
		- たまにコントロールの読み込みに失敗することがある。
		- x64絡みのコンポーネントをusingしてるとこうなる。
		cf. https://clown.hatenablog.jp/entry/20120725/vusual_studio_x64
		cf. https://social.msdn.microsoft.com/Forums/ja-JP/7760b7d4-f64a-4d89-a4fd-b581f1b8cd86/125031252112483124881250112457125401251212364x64123981239212365?forum=vbgeneralja
	- 大改造になった。GameScreenControlに変更。MainDialogViewModel削除。ViewModel実質なくなった。
	- Configにぶら下げているイベントハンドラ、まだ解消していないので画面反転など動かなくなった。修正中。


- GameScreenのコンポーネント化その1
	- 検討モードで盤面を描画するためには、盤面を描画する部分がきちんとコンポーネント化されて
	いなければならず、.NETの世界では、それは、Windows.Forms.Control派生クラスであることを意味している。
	- これ故に、Windows.Forms.Control派生クラスとしてGameScreenを設計しなかったのは、設計上の誤りである。
	また、ここがコンポーネント化されているということは、小さな駒台のGameScreenと普通の駒台のGameScreen
	の混在が許されるということで、そのへんをImageLoaderがglobalに持っているのも設計上の誤りである。
	- 仕方ないのでいまから大規模なリファクタリングを行う。
	- まず、BGとして
	        /// { 普通の駒台 , 小さな駒台 } × { 駒箱なし , 駒箱あり }の4通り生成して持っている。
		これを生成する。
		- →　実装完了
			- 起動が若干遅くなったか。(許容範囲？)
			- ウィンドウのリサイズに対してはもたりがなくなった。


- エンジンの読み筋とかを表示するControl用意
	- これを２つSplitContainerに配置したウィンドウを用意する。
	- EngineCosiderationDialogで表示するinstanceが1つの時と2つの時の切り替え実装。
- 読み筋ウィンドウがメインダイアログに追随するように。


- ゲームモードを持って状態を管理するように変更。
	- 対局中
	- 盤面編集中
	- 検討中(エンジンが動作している)
	- 閲覧中(対局はしていなくてエンジンは動作していない)
	これらは互いに排他されるべきなので..
	- 作業完了。イベントハンドラまわり、だいぶ改造になった。


- 形勢グラフの仕様追加。
	- 形勢グラフControlをMizarさんに依頼。
		仕様)
		検討モードの時など、現状の棋譜ウィンドウの下半分に表示するので、
		大きさはそれくらいでお願いします。将棋所、ShogiGUIなどを参考に。
		その他は、Model.Shogi.EvaluationGraph.csをご覧を。


- GameScreen、あちらこちらに貼り付けて使うならControlにしたほうが良いような気がしてきた。
	- リファクタリングするか…。大規模なリファクタリングになりそう。とりまあとまわし。


■  2018/06/29


- 2文字駒の後手の王、素材差し替え。「玉」に。


- readme.md更新。要望の受付リンク追加。
- 実装済みの機能.md更新
- 2文字駒の後手の王、「玉」にしておく。
	- ImageConveterで、先手玉のを上下反転させて生成しておく。
	- ああ、駒にパースがあるから、これうまくいかないのか。修正素材を依頼しておく。


- ToolStripボタンの文字フォントを13.7→12ptに変更
- ToolStripに◁ , ▷ , 本譜　ボタン追加。これで最低限、検討はできるかな…。
	- ToolStripのカスタマイズが出来るべきのような気はする。
- LocalGameServer.Considerationフラグ追加。


- 起動直後、現在の局面からスタートするとエンジンが不正な指し手を返す件、修正。
	- このときposition文字列きちんと構築されていなかった。
- 両方人間で開始した時に、最初の手番側が後手(盤面の上側)の場合、盤面反転をする処理追加。
- 駒箱の枚数の数字素材差し替え。
	- MizarさんがInkscapeで作成。


■  2018/06/28


- 棋譜の上書き保存
	- 実装完了
- メニューにファイル→終了を用意


- 局面の保存実装
	- KIF/PSN/SFENで書き出せていることは確認した
	- 盤面編集中のファイル書き出しはどうなんだろう…。まあ、出来てもいいか…。


- 対局中の盤面編集防ぐ。
	- また、GameServer側に盤面編集状態の変更コマンドを用意して、対局中は受理しないようにした。
	- UpdateMenuItems()、first tickで呼び出されることを保証するようにした。
- 駒箱の駒の枚数素材、新しいものに差し替え。
	- まだ少し見づらい気がするので修正依頼。


- コード少し整理


- 盤面編集の実装その12
	- 細長い駒箱の処理
	- 表示、詰め込んでなんとか出来たような…。
	- とりま、これで盤面編集の実装終わり。
- config.KomadaiImageVersion →　PieceTableImageVersionにrename
- 小さな駒の表示をするのに必要になったのでSpriteでratioを指定できるようにした。
	- SpriteEx.cs追加。


- 盤面編集の実装その11
	- 駒台で選択されている駒、マーカーつけた。
	- 駒台の駒を選んでいて、同じ駒台の別の駒をクリックした時に選び直しになるように。
	- 駒箱の駒を選んでいて、別の駒をクリックした時に選び直しになるように。


- 盤面編集の実装その10
	- 駒箱からの移動実装。
	- 駒箱から駒台、駒箱から盤面への移動実装。
	- 駒台から駒台の移動実装。
	- 駒箱の選択にマーカーつけるのあとでやる。
- RawPieceType()、|| にすべきところ && になってた。修正。


- 盤面編集の実装その9
	- 盤上の成り駒を手駒に移動させると落ちてたの修正。
- 成り、不成の選択ダイアログの反応が鈍くなっているの調査。
	- MouseMoveのイベント、捕捉の仕方、間違えてた。
- メニューの情報のところから「システム情報」のダイアログが出せるようにした。


- SystemInfo: output messagebox (#20) Mizarさん
- SystemInfo #19 Mizarさん
- 棋譜変換周りの仕様変更に追随など #18 Mizarさん


- 盤面編集の実装その8
	- 駒台全体を意味するSquareHandの領域を定義
	- 駒台のどの部分をクリックしても駒台に移動させられるようにした。
	- 細い駒台のときにも駒台→盤面、盤面→駒台、盤面→盤面の移動は出来ることを確認した。
- 成り、不成の選択ダイアログの反応が鈍くなっているの調査。
	- イベントハンドラの捕捉、間違えたのか？


- 実装済みの機能.md更新


- 盤面編集の実装その7
	- 盤面編集で駒台の駒を盤面に移動させる処理実装
- SquareHandの表現力が不足しているので、駒台の何もない領域と、駒箱の何もない領域を指せるように拡張する。
- SquareHand、ToHandPiece(),ToPieceBoxPiece()追加。


- 盤面編集の実装その6
	- 駒箱の駒の枚数を表示するための素材追加。
		- image/hand_box_number_v1_864_96.png
		- ImageManager、SpriteManagerに追加。
	- 編集時にはすべての駒が掴めるように。
	- 盤面編集で盤面の駒 移動、2駒交換が出来るようになった。
	- 盤面編集で盤面の駒を駒台に移動できるようになった。
		- が、駒台の判定がよろしくないので、このへんの処理、書き直すべき。
- 対局中に終了させた時に例外が出るパターンがあったの修正。
- CPU同士の対局の時に、エンジン初期化前にユーザーが盤面の駒を掴めるの修正。
- Position.CreateRawPosition()など追加。これで局面の生成が少し楽になる。
	- Position.RawBoard,RawHand削除。これよくない設計だった。


- 盤面編集の実装その5
	- 盤面編集の時に、二歩とか、先手玉が2枚とか、行き先の無い駒の配置とかを許容することに。(編集しにくくなるので)
		- ただし駒の枚数は管理しているので銀5枚のような局面は作れない。駒箱があるので銀3枚のような局面は作れる。
	- 逆に対局開始時に不正な局面かをチェックするようにした。
		- Position.IsValid()追加。
			- 二歩のチェック
			- 行き場のない駒
			- 非手番側への王手
			- 玉なし、片玉、玉2枚で同じ手番側、玉3枚以上のチェック
		- PositionにAssert()いくつか追加。
- 後手の玉の駒素材、いつの間にか「王」に…。うーん。まあいいか。
- Bitboardに対するforeach実装


■  2018/06/27


- 盤面編集の実装その4
	- 駒箱の素材、差し替え
	- 駒箱の数字、2枚以上のみ時のみ表示
	- 盤面編集時に駒の移動が指し手になるの修正。
	- 駒箱の駒の位置調整。
	- 駒箱の枚数の数字が見にくい件、素材発注。
	- 歩の素材が5ドット上にずれていたので加工しなおした。


- 盤面編集の実装その3
	- 盤面上で右クリックで先手→先手成駒→後手→後手成駒のように駒の変化するのを実装
	- Piece.RawPieceType()でKINGを渡したときに、NO_PIECEではなくKINGが返るように仕様変更。
		- CSAの読み込みルーチンなどに影響があるようだ。Mizarさんに修正依頼。
	- 成駒があるとsfenでの初期化で駒箱の駒を数える時にassertに引っかかっていたの修正。
	- KifuManager.FromString()で、エラーがないときはstring.Emptyではなくnullが返るように仕様変更。
		- これに伴う修正をMizarさんに依頼。
	- TheApp.MessageShow()でUIスレッド以外から呼び出すと例外が出ていたの修正。


- 盤面編集の実装その2
	- Positionクラス、使用していない駒を駒箱用にカウントする処理追加。
	- Hand型に玉も持たせたいが、入り切らないのか…。kingSquareでわかるからいいか…。
	- PositionクラスのSetSfen()でhandクリアしてなかったの修正。
	- 使用していない駒を駒箱に描画する処理追加。
	- 片玉のときに駒落ちだと判定されていたの修正。(詰将棋で「上手」「下手」とは言わないので…)
	- SquareHand、駒箱の位置を指し示せるように拡張
		- それに合わせて色々修正。
	- KomaBako → KomaBoxとrenameしておく。
	- Position.PieceBoxCount()追加
	- 駒落ちの初期配置に歩3枚追加。
	- 駒箱の駒の位置調整後回し。
	- メニューの盤面編集に手番変更追加。
	- Position.hand → handsにrename
	- 盤面編集中での対局開始で盤面編集が終わるように。
	- 駒箱で駒の枚数を表示した時に、数字素材の色が駒箱の色と混じって見にくい。
		- 考えとく。


- 盤面編集の実装その1
	- LocalGameServerに編集盤面の代入をsfenで行う機能追加。
	- BoardTypeにMATE_1 , MATE_2追加。
	- メニューから、平手、駒落ち、詰将棋、双玉詰将棋の初期配置に設定できるところまで実装。
		- 駒落ちの時に不要駒を駒箱に入れないといけないのか…。


- 実装済みの機能.md 更新
	- デバッグウィンドウのこと追記


- ログ関連でコメント追加。
- 指し手の詳細ログ、logに出力するように。
	- デバッグウィンドウでbestmoveでfilterすると表示出来るので要らないか…。
- NullLogクラス、使わないのでコメントアウト


- デバッグウィンドウ作成
	- メニューから生成できるように
	- デバッグウィンドウのコントロールの再配置のコード追加
	- LogのWriteにイベントハンドラを設定できるように。
- 対局中に終了させると例外が出ていたの修正。
- 駒がぶつかる時に駒音を変更するのだが、駒の手前の升が盤外の時に例外が出ていたの修正。
- デバッグウィンドウの実装完了。
	- これで思考ログ、まともに追いかけることが出来るようになった。


- callbackのハンドラ、UIで実行しないといけないと事前にわかっているのであれば、
	UIスレッドで実行されるようにObjectModelが必要なのでは…。
	- ObjectModel改造
	- "[UI thread] :"とメソッドの説明に書いてあるメソッドは、UI threadからの呼び出しが必要であることを意味するアノテーションとする。
		これらのメソッドはUI threadからしか呼び出されないので、このメソッド内からの呼び出しもUI threadで実行されることが保証される。
		- UI threadとついていないところからこのメソッドを呼び出してはならない。
		- もしくは、ObjectModelのUI callbackを利用する。
	- ソースコード、整理した。ObjectModel以外の明示的なInvoke()はすべて除去できた。


- 棋譜ウィンドウのvisibilityの変更を行うハンドラ用意した。
- 通常の駒箱、幅が少し広いように思うので素材の修正を依頼。


- 駒箱素材追加
	- koma_bako_v1_1920_1080.png
	- koma_bako_v2_1920_1080.png
	- 実行時にこれを畳、盤、駒台画像と合成してBGを作成する。
	- ImageManagerに追加。
- 一度メモリに読み込んだbitmap、残しておくのはメモリの無駄なんだろうか…。
	- 盤面編集に切り替えるごとにBGの再生成、無駄すぎない？
	- 同じファイルの読み込みだから、さほど時間かからないっぽいので(SSDなら)、まあいいか。
- メニューにとりあえず「盤面編集」追加。
	- とりあえず、メニュー項目だけ追加。
- アップデート情報のリンク、
	https://book.mynavi.jp/ec/products/detail/id=92007
	に変更。(予定地なのでまだ何も…)
- Sound.cs→SoundLoader.csにrename(ImageLoaderに合わせて)


■  2018/06/26


- kif: 変化手数の出力・入力書式修正 (#17) Mizarさんからのプルリク
	- KIF形式の分岐ファイルの読み込みに対応した。


- 情報のところに「アップデートの確認」追加。
- GlobalConfig.CommercialVersion、boolではなく0,1,2,…にする。
	- これに伴い、html/CommercialVersion.txtは、CommercialVersion2018.txtに変更。


- メニューの「その他」を「情報」に変更。ヘルプなどもここに入れる。
- メニューの「情報」配下に「ロギング開始」「ロギング終了」を追加。これを開始するとファイル上にログが残るようになる。
	- log201806261340.txt みたいな感じのファイル。
- メニューの「情報」配下に「デバッグ開始」「デバッグ終了」を追加。これを開始するとメモリ上にログが残り、
	デバッグウィンドウで見ることが出来る。
	- これらの状態を終了時に書き出すようにした。
- Logクラス、色々改造
- RemoteServiceにinstanceを区別するunique idを振るようにした。

- 盤面編集用の細い駒箱の素材発注

- 朱色の駒で、2文字駒と1文字駒が入れ替わるバグ修正。(素材加工時のミス)


- メニューでオフにしているにも関わらず「先手」「後手」と読み上げされていたのを修正。
	- SoundManager、読み上げはすべてReadOut()に変更


- 実装済みの機能.md更新


- コンピューター同士の対局で任意局面から開始すると棋譜の2手目が非合法手扱いされることがあるバグ調査。
	- GPS将棋が、sfenの局面からの"moves"に対応してないのでは。これはいいや。GPS将棋が対応していないということで…。
- 対局終了時に、分岐棋譜の操作ボタンが出た結果、棋譜ウインドウの最後の行が隠れてしまうのを修正。
	- ListBox.TopIndexを末尾にすることで実現できた。
- 対局終了後、「投」「待」ボタンがenableのままであったのを修正。
- 棋譜ウィンドウの文字フォントサイズ、ときどき設定に失敗しているのを修正。
	- Resizeイベントの処理タイミングがおかしいのか？
	- よくわからない。とりまOnResize()をUIスレッドで実行するように修正。
		- 修正されてない。
	- スクロールバーが出るからギリギリになるだけか…。
		- フォントサイズ、これ以上小さくすると細いフォントになってしまう…。
		- どうにもならない。これでいいや。


- 千日手判定おかしい。要調査 10.KIF
	- ああ、手番が違うから同一局面として扱われていないだけであった。
- 千日手成立の局面からの開始のテスト→うまく動いているようではある。
	- これ、COMでもうまく動くのか？
	- うまく動いているように見える。
- 升目の音声、短くして自然に聞こえるように。
	- メモリ上に配置するようにしたら少し切れ目が短くなった。
	- そこまで不自然でもないような気がする。
- 棋譜読み上げ、次の対局の時に、キャンセルして停止させるようにした。
	- SoundManager.Stop()追加。


- 時間切れのあと「成り」「不成」の選択が出来るの修正。
	 - あれ？出来なくなってる。時間切れのあとに操作してたのかな？
- 対局終了後、末尾の局面でUIから盤面を操作した時に、special moveを削除せずに局面を進めてしまう問題修正。
	- special moveを削除するのは良いが、千日手とか入玉局面とか特殊な局面に突入した場合、どうすんだ…。
- 棋譜の選択行、スクロールしなくなっていたの修正。
	- あれ？再現しない…。
- 棋譜読み込みでエラーになった時に出る警告ダイアログ、最前面に表示するように。
	- MessageBox.Show()をすべてTheApp.app.MessageShow()に置換。
- UIで操作して、千日手・王手千日手・宣言勝ちの局面に到達した時、それを棋譜ウィンドウに出力して、そこから動かせないように。
- UIで、千日手局面、宣言勝ちの局面からは駒が動かせないように。
- 起動時に棋譜ウィンドウを非UIスレッドから操作することがあったのを修正。
	- 再現しないので修正出来ているかよくわからないが…。


- 読み上げがメモリリークするの修正。
	- MediaPlayer.Stop()では開放されないのか…。
	- MediaPlayer.Close()を呼び出すようにする。
	- 修正されているかMizarさんに確認依頼。
		- なおっているらしい。
	- てか、音声素材20MBほどしかないのでメモリ丸読みでもいいはず。
		一度読み込んだ素材、開放しないでおこう。


- 「上手」「下手」の自動判別。
	- 読み上げ時に駒落ちなら「上手」「下手」と読み上げるように。
	- Position.Handicapped追加。
- 対局開始時に音声「よろしくお願いします」追加。
- 対局終了時に音声「ありがとうございました。またお願いします」追加。


- 初回だけ「先手」「後手」を読み上げるようにする。
	- メニューの音声のところに毎回読み上げるかどうかの設定項目追加。
	- デフォルトでは毎回読み上げるように変更。


- 王手の時と駒を取ったときは衝撃音に変更する
	- koma_c1.wav
	- オプションでオフにも出来るように。
	- あまりいい感じの音が作れなかったので、コードは書いたがコメントアウトしておく。


■  2018/06/25


- サウンドの同時再生のためにSystem.Media.SoundPlayerを使うのやめる。
	- DirectX.AudioVideoPlaybackを使って書き直す
		- MSサポート終了か…。
		- MediaPlayerを使うべきなのか。
			- 最新の記事がなかなか見つからない。
			- この記事新しい。
				- cf . https://www.ipentec.com/document/csharp-play-wave-file-use-media-player
				- System.Windows.Media.MediaPlayerを利用するためのアセンブリ"PresentationCore.dll"アセンブリを参照に追加します。
				- System.Windows.Freezableを利用するためのアセンブリ"WindowsBase.dll"アセンブリを参照に追加します。
				        var mediaPlayer = new System.Windows.Media.MediaPlayer();
						mediaPlayer.Open(new System.Uri(fullpath));
						mediaPlayer.Play();
				- こんな感じで使えるようだ。これに変更する。

	- MSのサポートが終了していないサウンドの同時再生が出来るAPIがなくて草。
		- cf. https://social.msdn.microsoft.com/Forums/vstudio/ja-JP/d5d5b7b1-2623-4aaa-b72e-53a065a14f69/win124501250312522123913889912434401801242512377123981239519968?forum=csharpgeneralja
		ループ	多重音声	終了イベント	非同期	その他
		SoundPlayer	○	×	×	○	wavのみ
		VisualBasic.Devices.Audio	○	×	×	○	wavのみ
		Win32 APIのPlaySound	○	×	？	○	wavのみ
		MCI	?	×	？	○	wav,mp3,midi
		waveOut	○	○	○	○	wavのみ
		Windows Media Player Control	△	○	？	○	wavのみ
		DirectX.AudioVideoPlayback	×	○	○	○	wav,mp3,midi等 MSサポート終了
		DirectSound	○	○	○	○	wavのみ MSサポート終了
		MediaPlayer クラス	×	○	○	○	wavのみ


- 音声再生をメニューからOn/Off出来るように。
	- 駒音と棋譜読み上げをメニューの「音声」に追加。
	- ConfigにKifuReadOut , PieceSoundInTheGame追加。
	- 駒音実装する。メニューからOn/Off出来るように。
	- System.Media.SoundPlayer、サウンドの同時再生が出来なくて、駒音が鳴らない時がある。んなアホな…。
		- あとでなんとかする…。


- 棋譜の読み上げ機能を追加。
	- あとでメニューでOn/Off出来るように。
	- 時間切れの局面のあとUIから駒を動かせるのあとで修正する。
- 読み上げ"agaru.wav"もらったのでsound/に追加。


- 棋譜読み上げSoundの読み込み準備。
	- Model.Resource.Sounds追加
	- 実行フォルダ配下、Sound/koma/追加
	- 実行フォルダ配下、Sound/takemata/追加
- Sound , SoundQueue , SoundManager など追加。
	- 一応、簡単な再生テストは合格。
	- "agaru.wav"が無い　→　担当者に連絡。
- Model.Resourceの画像関係は、Model.Resource.Imagesに移動


- 実装済みの機能.md更新


- 現局面から再開する時に、そこまでの変化手順を本譜の手順に変更するようにした。


- 分岐棋譜で棋譜ウィンドウで1番目(本譜)以外の分岐→1番目の分岐としたときにインデントが狂うのを修正。
	- 修正できた。
- PSN形式で分岐棋譜の書き出し～読み込みはうまく動いた。
- KIF形式での分岐棋譜の書き出しは、読み込みでエラーに。Mizarさんに修正を依頼。


- 対局後の盤面を動かす処理実装
	- 対局していない時にUI上から駒を操作できるようになった。
	- UI操作によって分岐棋譜が自動的に生成されるようになった。
- 起動時に棋譜ウィンドウに「開始盤面」と表示されていなかったの修正。


- 棋譜ウィンドウに色が使えないとしたら、棋譜の分岐を'+''*'で表して、本譜の手順'+'、本譜以外の分岐'*'とかにすべきか。
	本手順と異なる場合は、そこ以降、インデントする。'+'で、あとインデントで表現すれば良いのでは…。
- 棋譜ウィンドウにおる分岐棋譜に対するインデントの処理追加
- 次分岐ボタンの実装。
	- KifuControlにボタンのclick handler追加。
	- LocalGameServerに次分岐ボタンが押された時のhandler追加。
	- Tree.NextBranch()追加
	- 次分岐ボタン、実装出来た。
- 本譜ボタンの実装
	- Tree.MainBranch()追加
	- 本譜に戻るボタン実装できた。
- 消分岐ボタンの実装
	- Tree.EraseBranch()追加
	- 実装できた。


- 棋譜ウィンドウ、移動元を入れると文字が入り切らないので省略する。
- 分岐削除のボタンが必要。
	- 棋譜ウィンドウの下に「消分岐」ボタン追加
- 2つ目の棋譜読み込みのときに残り時間の表示が反映されていなかったの修正。


- 棋譜ウィンドウ、消費時間、00:00:00形式から、「1秒」のような文字形式に変更。
	- KifuTree.cs , RemoveKifu()にkifuWindowMovesの処理も突っ込む。
	- StringExtension.csにPadLeftUnicode(),PadRightUnicode(),PadMidUnicode()追加。


■  2018/06/24


- PR conv #16  Mizarさんのプルリク

	* コメントアウトしたコードの修正
	* 棋譜読み込みでファイルの種類を毎回選び直すのが面倒臭かった😥
	* 指し手に「左直右上寄引」が含まれるKIFファイルへ対応
	例: http://www.asahi.com/shougi/kifu25/open09.kif
	* 棋譜書式オプションコメント追記
	* 棋譜ウィンドウ向け表記変更テスト
	* FromSqFormat.Verbose では不要な「打」も出力
	* ((BoardType)bt).ToSfen() == null だった場合の処理
	* FromSqFormat.KIF,Verbose と SamePosFormat.KI2sp の組み合わせでの空白詰め条件の変更
	* KifuFileTypeの補完
	* dialog用htmlの修正 (bodyのpadding設定で":"が抜けていた）
	* remove whitespace before comma



■  2018/06/23


- KifManager: read time settings #15 (Mizarさんのプルリク)
	主に棋譜からの時間設定読み込み周りの修正です。
	FromSqFormat.Verbose でKIF/KI2形式の棋譜出力を行った場合のバグ修正
	ファイル読み込み時、先頭1024bytesからSJIS/UTF8エンコーディングの推定をするように


■　2018/06/21


- FileIO.ReadFile → ReadTextに変更。テキストのencoding自動判別するようにした。
	- BOM除去後のテキストを返すようにした。
	- 棋譜ファイル読み込み時に、棋譜ウィンドウとの同期が有効になっていなかったの修正。
	- EnableKifuListの構造、これで良いのか少し考えたほうが良さげ。


- 棋譜読み込み後、画面に反映しないことがあるのを修正。その1
	- Raise...で間違えてKifuListにPosition渡してた。修正。
	- SFEN読み込めない件、修正
	- BOM読み飛ばす処理が抜けているのか…。
		- 修正した。
		- Scannerがスペースとtabを読み飛ばす処理にバグがあったのでそれも併せて修正した。


- 任意局面から開始されているKIFファイルの読み込みでparseエラーになる件、Mizarさんに修正を依頼。


- 「本譜」と「次分岐」ボタンは、対局中には表示しないことにした。(紛らわしいため)


- 本譜の手順に戻るボタン、「次分岐」「前分岐」ボタン
	- 前分岐は要らないか…。
	- 「本譜」「次分岐」ボタン追加。


- 分岐棋譜を読み込んだ時に棋譜ウィンドウで分岐を選択できるようにする。
	- とりあえず、分岐のあるnodeの先頭に'+'が表示されるようにした。


- 棋譜読み込み後、本譜の手順の末尾に移動するように仕様変更。
	- KifuManager.FromString()


- 棋譜読み込み時の最終手がspecial moveの時に残り時間が画面に反映していなかったの修正。
	- よく考えるとそのnodeには到達していないから、currentNodeから取ることが出来ないんだよな…。
	- KifuManagerのDoMove()、special moveに対してDoMove()出来て、局面自体は進められないとまずいのか…。
	- KifuManager.Treeでspecial moveに対してDoMove(),UndoMove()出来るように変更。
	- ソースコード、すっきりした。
	- KifuNode、同じ指し手、許容しないように仕様変更。


- KifManager: kif/ki2書き出し (#14) , Mizarさんのプルリクをmerge


- PSN2形式の読み込みの時に、棋譜の持ち時間設定に従って残り時間を算出して読み込めるようにした。
	- 棋譜読み込み時の初期局面の残り時間が更新されていなかったの修正。
- 棋譜読み込み時に最終手の局面に移動していなかったの修正。


- PSN2形式では対局設定も書き出すように拡張。
	- psn2format.md更新
	- psn/psn2、tokenのところが大文字・小文字問わずparseできるように変更。
	- PSN2形式で対局設定の読み書きが出来るようになった。


- PSN,PSN2の棋譜読み込みの時のTimeSettingの反映について。
	- KifuTreeが時間設定を持っていないと残り時間の算出ができないような…。
	- 分岐棋譜に対して適切にそれを処理するの難しいんだよな…。
	- とりま、分岐は仕方ないとして、現在の対局設定をKifuTreeに持たせるようにして、
	棋譜読み込み時にそこを復元するようにする。
	- TimeSettingをKifuTimeSettingにrenameして、Shogi.Kifuに移動。
	- 棋譜読み込み時に、持ち時間設定をGameSetting.KifuTimeSettingに反映するようにした。
	- 対局開始時にGameSetting.KifuTimeSettingをKifuManager.Tree.KifuTimeSettingに反映するようにした。
	- Tree.GetKifuMoveTime → GetKifuMoveTimesにrename
- 対局者名、8文字を超えて表示されていたの修正。完全に左寄せに。


- PSNとPSN2、消費時間書き出してないの修正。
	- 消費時間、トータルの消費時間の読み込み対応
- TotalTimeに間違えて消費時間代入してたの修正。
- RealThinkingTime、ミリ秒に設定してないといけないのを秒のところに設定していたの修正。
- PSN,PSN2、消費時間の読み書き、うまく動くようになった。


- 棋譜書き込み後に棋譜ウィンドウで局面移動すると例外で落ちるの修正。
- 本譜の手順は、KifuNodeのmoves[0]に変更する。
	- KifuNodeからselectedKifuMoveIndex削除;
	- KifuNode.movesに指し手重複を許すように変更。


■　2018/06/19


- CSA形式の読み書きに対応。
	- 読み込み時のSpecialMove2回表示される。あとで修正する。
	- 書き出しでDoMove()忘れていたの修正。
	- 分岐棋譜には未対応。(あとでやる)
	- 持ち時間書き出し未対応。(あとでやる)
	- Mizarさんに依頼。


- 実装済みの機能.md、プロジェクトに追加。


- PSN2形式の読み書きに対応。
	- PSNとPSN2、消費時間書き出してないや。あとで修正する。


- 棋譜の読み込み、書き込み時に棋譜ウィンドウがちらつくの抑制する。
	- イベントをUpdateイベント1回で収まるようにする。
	- NotifyObjectでイベント抑制してもRaise..を直接呼び出した時のイベントが発生していたの修正。
	- 棋譜書き込み後に棋譜ウィンドウで局面移動すると例外で落ちるのはあとで修正する。
	

- PSNの書き出しに対応。
	- KifuFileTypeExtensions追加
	- PSNでの書き出し動作まで出来るようになった。


- PSNのファイルは読み込み出来るみたいなのでこのファイルで読み込みのテストする。
	- KifuTreeにkifuWindowMoves追加。
	- PSNファイルの読み込み～棋譜ウィンドウクリックでの局面の移動～現在の局面からの対局、うまく動いた。
	- 対局中はメニューのファイルを丸ごと無効に設定するようにした。


- 対局棋譜の読み書きその3
	- Kifファイルの読み込み、例外を投げないようにtry～catchで囲んで、エラー内容を必ずreturnするようにした。
	- KifuException.cs追加。
	- parseがエラーになる件は、Mizarさんに修正を依頼。


- Kif.cs BoardTypeでの初期化部分、リファクタリング。
- LocalGameServer/追加	LocalGameServerをpartialにして分離。
	- LocalGameServerCommands.cs追加
	- LocalGameServerProperties.cs追加
	- LocalGameServerWorker.cs追加


- Kifの読み込みルーチン、MizarさんのwipをMizarさんの許可の元、人力でマージ。
	- そこそこマージできたのでいったんpush


- LocalGameServerに"GameServerStarted"の仮想プロパティ追加。
	- これを用いてMenuのupdate handlerの初期化を行うように変更。


- TODO.mdをプロジェクトに追加。


- 対局棋譜の読み書きその2
	- 対局中はメニュー項目無効化。
	- Shogi.Kifu.KufuHeader追加。
	- Shogi.Kifu.KifuManager/追加。KifuManagerをpartial classにしてコードの整理。
		- Shogi.Kifu.KifuManager/sfen.cs追加。
		- Shogi.Kifu.KifuManager/psn.cs追加。
		- Shogi.Kifu.KifuManager/kif.cs追加。
		- Shogi.Kifu.KifuManager/json.cs追加。


- Model.Common.Utility.Encode.csのDetectEncoding、BOMついてる以外のencoding判定に対応をMizarさんに依頼。


- 対局棋譜の読み書きその1
	- メニューに、対局棋譜の読み込み、対局棋譜の書き出し追加。
	- Common.Utility.FileIO.cs追加。
	- Common.Utility.Encode.cs追加。
- aboutダイアログのDesigner.csも96dpiに変更しといた。


- 起動時に現在の局面から開始してしまうと棋譜ウィンドウに「開始局面」が表示されていない件の修正。
	- 表示されてた。LocalGameServerのコンストラクタで対局盤面を初期化設定するから、イベントハンドラが未設定で呼び出されていないだけだった。
	- まあいいや。
- 棋譜ウィンドウで局面を移動させて現在の局面から対局を再開させた時の処理追加
	- KifuTree.ply → gamePlyにrename
	- KifuTree.pliesFromRoot追加。
	- currentNode.selectedKifuMove追加。
	- 対局の再開時に棋譜が同期されるようになった。

	
- 局面戻した時に時間が反映しなくなっている。修正せねば。
	- ああ、終局後に戻す処理は未実装であった。
	- 反映するように修正した。
- TimeUpの時にIncTimeしていたの修正。(今度こそ！)
- IncTimeが有効でIncTime == 0の時に持ち時間設定のところに「切れ負け」と出力していなかったの修正。
	- TimeSetting.IsValid()追加。
- .NET Frameworkのターゲットバージョンを4.6.1に戻す。
	- いま、4.7.2関係ないみたいだし、4.7.2、WindowsUpdateでインストールされてないのが普通みたいだし。


■　2018/06/18


- TODO.md追加


- IncTimeの処理、指し手を指したときにTimeUpになっていなければ加算するように修正。


- とりま、対局ダイアログが環境によってうまく表示されなかったのはなおった。
	- Visual Studioのデザイナ、96dpiの状態で編集しなければならない。
		これは、.NET FrameworkのAutoScaleDimensionsの処理がバグっているためだと思う。
	- 自分の開発環境でデザイナからの再編集が出来なくなってしまった。困るなぁ…。
- RDPの低解像度環境(?)で、対局盤面が描画されない。
	- サーフェース作れてない可能性が…。
	- RDPのプロトコルバージョン、古いと駄目なんかもな…。
		- 原因またあとで調べる。
		- TODOにまわしておく。


- 対局設定ダイアログ、環境によって表示がズレるようだ。
	- 根が深そう。
	- cf. https://stackoverflow.com/questions/185804/how-to-control-the-font-dpi-in-net-winforms-app
	- cf. https://stackoverflow.com/questions/4075802/creating-a-dpi-aware-application
	- cf. http://8thway.blogspot.com/2013/09/winforms-per-monitor-dpi.html
	- cf. http://8thway.blogspot.com/2013/07/per-monitor-dpi.html
	- Visual Studioターゲットが.NET Framework 4.6になっている。これを4.7.2に変更するとどうか。
- ターゲットとする.NET Frameworkを4.7.2に変更した。
	- 4.7.0でWindows Formのhigh dpi対応に大きな修正が入ったようだ。 
	- これでもずれる…なんぞこれ。
	- high dpiでVSのデザイナで編集するのがいけないのかもな…。
	- 1574×979でダイアログ作っているのに、686×446で作られてしまっている。
		- 686×446の倍サイズが画面サイズ超えるからか。
		- high dpiでの編集、VSのほうにバグがあるんだな…。
            this.AutoScaleDimensions = new System.Drawing.SizeF(96F, 96F);
			// これを小さい値にして編集すべきなのか…。
- .NET Framework 4.7で入った修正
	- https://docs.microsoft.com/en-us/dotnet/framework/winforms/high-dpi-support-in-windows-forms
	- Windows 10のみか??
	- 以前の環境はhigh dpi対応しないほうが良さげ??


- 終局後の局面移動の処理追加
	- InTheGameでなければ自由に駒が動かせる(と使いやすいかも)
	- 分岐棋譜の機能が必要になる…のかも…。
- 局面は戻るようになったが、棋譜が消えてしまう問題が発生…。
	- これ、根が深い。あとでなおす。


- KifuTreeから
        public KifuLog rootKifuLog;
        public KifuMoveTimes rootKifuMoveTimes;
		を削除
	- 代わりにRootKifuLog , RootKifuMoveTimesというプロパティを追加。



■　2018/06/17


- 待ったをした時に時間を戻す処理その3
	- うまく戻るようになった。
- 残り時間の表示上、0秒で指しているように見えていたの修正。


- 待ったをした時に時間を戻す処理その2
	- 初期局面のKifuMoveTimesを配置する場所がないのでは…。
	- よく考える。


- 待ったをした時に時間を戻す処理
	- 1手ごとにKifuManagerに時間を保存しておく処理追加。
	- PlayerConsumptionTime　→　PlayTimerに変更。
	- PlayerTimersも用意。
	- TimeSettings.cs削除 TimeSetting.csに統合、TimeManagement/に移動
	- ConsumptionTime.cs追加。
	- TimeSettingにSwapPlayer()追加。
	- KifuMoveTime追加
	- KifuManager、だいぶ改造になった。あとでちゃんとなおす。


■　2018/06/16


- 持ち時間が減る時の画面描画、最小矩形にして高速化する
	- わからん。わりとまじめに実装しないといけないっぽい。
	- その矩形を逆affine変換してInvalidate()で渡してやる必要がありそう。
	- あとまわし。


- 中断処理、わりと面倒くさそうなので後回し…。

- 人間が後手、CPUが先手で対局を開始した時、自動で盤面反転するように。
	- 盤面反転状態から、人間が先手、CPUが後手の場合も同様。
	- 盤面反転、GlobalConfigが持つより、ViewModelが持つべきような気がする。
		GameServerのほうに移動させる。
	- うまく動いた。

//

- readme.mdの将来の予定、カテゴリーごとに分類


- 後手の駒の成り・不成のダイアログ、駒を180度回したほうが良いのでは。
	- ShogiGUIがそうなっているし、タブレット端末のようなものだとそうなっていて欲しい気がしたので
	- キャンセルの文字も180度回さないといけないので、今回は見送り。


- 対局設定に最大手数引き分けの設定を追加する
	- 追加した。設定が保存されるようにした。
	- 機能するようになった。
	- 「手数による引分」が長すぎて棋譜ウィンドウに収まっていない。
	「手数で引分」に変更する。
	- 棋譜ウィンドウの特殊な指し手の文字列は、6文字までに切り出して表示することに変更。(はみ出るため)


- 対局時間、無制限の設定が必要なのでは…。
	- 追加した。設定が保存されるようにした。
	- 表示の処理など、実装した。
	- 無制限にチェック入れたときにgroupbox丸ごとdisableになるようにした。


- 時間切れの時の消費秒が1秒多すぎる問題を修正する。
	- 計測秒を計算するところで間違えて繰り上げ秒を使っていた修正した。


- 後手の時間設定を個別にするにチェックした時に、先手側の"時間設定"が、"時間設定[先手/上手]"になるようにした。


- 消費秒が、繰り上げになっているが、これ、1秒以上は秒単位で繰り下げでは..
	- この処理を入れたが、秒読みがいまひとつ…。よく考える。


- 対局設定ダイアログのTabStopがおかしいの修正。
- 持ち時間設定表示に、秒読みの表示追加
- 残り時間、秒読みの表示処理
- IncTimeのテスト
	- GameStart直後に手番が来た時にIncTimeされるの修正。
- 対局設定ダイアログで、秒加算を選択した時は、秒読みのほうの設定のためのNumericUpDownを無効化するように。
- GameSettingDialogのdata-bindするところ、リファクタリング。


- 実装済みの機能.md、カテゴリーごとに整理


- 対局設定で持ち時間設定で秒まで設定できるようにした。(切れ負けなどのテストがやりにくいため)
- 対局開始時に非手番側の残り時間が表示されていなかったの修正。
- LocalGameServer.GameInit()→ GameStart()にrename


- 実装済みの機能.md、進捗更新。


- 持ち時間を減らして行く処理
- 対局時間設定に時間切れを負けにしないチェックボックス追加
	- この設定、終了時に保存されるようにした。
- 棋譜に指し手の消費時間が正しく記録されるようにした。
- 残り時間の表示が00:00:00より小さな値にならないようにした。
- 切れ負けの時は時間切れ負けが棋譜に記録され、対局が終了するようにした。
- IncTime(1手ごとの秒加算)の処理を入れた。
	- 秒読みの表示処理はまだ。


- 対局設定画面の先後入れ替えボタンの実装
- ControlBinderにUnbindAll()追加。
- Utility.Swap()追加
- 対局設定ダイアログの「先後入替」で持ち時間も入れ替わるように。
- TimeSettingsのWhiteSame→WhiteEnableに変更。


■　2018/06/15


- 対局設定、詳細設定画面追加
	- 「詳細設定」ボタンで幅広い対局設定画面に変化するように
	- 「詳細設定」に変更しているかどうかをGameSettingに記録。アプリ再起動した時にも状態を維持。
	- 後手を個別に設定するのチェックボックスも同様に保存。
	- 後手の対局時間設定も同様に保存。
- TimeSettingsクラス追加。先後両方の対局時間を管理する。
- MiscSettings.cs追加。
- ControlBinderにButtonのbind()など追加。


- TimeSetting、文字列化出来るようにする。
	- ToShortString()追加
	- 先後で持ち時間設定を変更したいのでは…。
- 対局時間設定、Byoyomi、IncTime対応
- 対局時間設定を先後で個別に設定できるように。
	- ちょっと考えないと…。


- GameSetting.Clone()追加。
	- PlayerSetting.Clone()追加
	- TimeSetting.Clone()追加。
	- BoardSetting.cs追加
- GameSettingDialogからGameStartを呼び出す時にGameSettingをClone()してから渡すように修正。
- LocalGameServerのほうでGameSettingを保持するようにした。
- Position.Clone()、修正。


- 時間管理
	- 対局設定の持ち時間のnumericUpDown、999999時間、59分、秒読み999999、一手加算999999秒まで設定できるように変更。
	- PlayerSetting , TimeSettingのファイル分離する。
	- 対局設定の時間のところをGameSettingに設定する。
	- 終了時に対局時間設定の項目が保存されるようになった。
- Utilフォルダ削除
- Model.Utility.ControlBinder.cs追加
	- これを使ってGameSettingDialogのコード書き直す。
	- 全部data-bindを使って書き直した。


■　2018/06/14


- 対局ダイアログの前回設定を、次回起動時に復元する処理
	- 対局者氏名
	- 対局者が人間か、コンピュータか
	- 開始局面、手合割
	について、復元するようにした。他の項目はまたのちほど…。
- GlobalConfigのデフォルト値、変更。


- 対局ダイアログの対局者氏名、人間のとき、それを盤面のネームプレートに反映させるようにした。
	- MainDialogViewModelから対局者氏名、削除。
- 細長い駒台の時の、先手の対局者氏名がきちんと右寄せになっていなかったのを修正。


- KI2形式出力での同～不成判定の修正
- KI2: 相対位置・動作表記時も同～の空白を詰める (#13) Mizarさん


- 対局開始のダイアログ、×ボタンで閉じて、再度開いたときにエラーで落ちるの修正。
- 対局開始のダイアログが最前面になかったの修正。
- aboutダイアログ、Show()で表示するように


- 先手反則/後手反則を反則負け/反則勝ちに変換 (#12) Mizarさん


- MoveのILLEGAL_ACTIONやめて、反則勝ちと反則負けを追加。
- メニューの「通常対局」のチェックがOnになるときがあったの修正。


- 駒落ちにした時に手番側から始まっていないの修正。
- BoardType.IsOkSfen()追加。
- 駒落ち対局が正常に行えるようになった。中断～再開や、途中からコンピューターに引き継いで指させるのも大丈夫っぽい。


- 対局開始時の手合割設定の反映
	- BoardType.ToSfen()追加。
	- Positionから駒落ちのsfen文字列削除。
- 手合割り、以下の14種類に変更。(WhaleWatcherがこうなっているため)
		平手
		香落ち
		右香落ち
		角落ち
		飛車落ち
		飛香落ち
		二枚落ち
		三枚落ち
		四枚落ち
		五枚落ち
		左五枚落ち
		六枚落ち
		八枚落ち
		十枚落ち


- 中断局面からの対局開始
	- KifuTree.RemoveKifu()で引数としてspecial moveであるかを取れるようにした。
	- バグ修正した。再開できるようになった。


- 中断局の再開機能
- KifuTree.csでJson棋譜のところの不明な指し手、埋めた。
- 投了したときに棋譜文字列が"null"になっていたの修正。
- 棋譜読み込みの時におかしくなるので、MoveにSpecialMoveToKifを追加して、特殊な指し手すべてを文字列化した。
	- 中断後、エンジンで思考継続するときに非合法手になってしまう。原因調査すべし。


- Shogi.CoreにAll.cs追加。All.Colors()とかAll.Square()とか書けて便利(な気がする)
	- これを使って少し書き直す。


- MoveGameResultにUNKNOWN追加。MoveにDRAWなど追加。
- これに付随してKifuManagerのCSAまわり少し修正。


- MoveにILLEGAL_ACTION追加。ILLEGALをILLEGAL_MOVEに変更。
- あるspecial moveが勝ちか負けか引き分けかを判定する、Move.GameResult()追加。


- 対局ダイアログの持ち時間設定をLocalGameServer.GameStartに渡せるようにする。
- GameSetting.cs追加


- KifuManagerでCsa表記の指し手、Moveに変換する部分、少し書き足した。


- NotifyObject、イベントの抑制ができるようにした。
- KifuTreeをNotifyObjectにして、LocalGameServerのコード、かなり整理した。


- NotifyObject、lock解除でイベントがまとめて発生する仕組みを実装した。


- readme.md、実装済みの機能をdocs/に移動


- KI2形式で同～不成の場合、空白を取り除く (#11) Mizarさん


- 成りしか出来ない駒に対して成り/不成のダイアログを出していたの修正。
- ILLEGAL_MOVEに対してゲームの終了をさせていなかったの修正。


- 中断の処理
	- 「中」ボタンの実装。対局の「中断」
	- 棋譜ウィンドウに「中断」と書き出されて、対局が中断されるところまで処理
- 起動時には「投」「待」「急」「中」の4つをdisable状態にする。
- LocalGameServer.inTheGameをInTheGameとrename。public propertyに変更。


- KifuManagerでspecial moveを置き換える。
	- KIF2形式、連続王手の千日手でも単に「千日手」と出力されるようなので、
		棋譜ウィンドウにKIF2の指し手文字列をそのまま表示するのには無理がある。
	- しかも、KIF形式のファイルでは、指し手として「千日手」が出力されるが、KIF2形式だとコメントとして「まで13手で千日手」のようになっているようだ。
	- 以下のように置き換えた。

                    case Move.NONE:            return "none"; // これは使わないはず
                    case Move.WIN:             return "入玉宣言勝ち";
                    case Move.REPETITION_DRAW: return "千日手引分";
                    case Move.REPETITION_LOSE: return "千日手反則負け";
                    case Move.REPETITION_WIN:  return "千日手反則勝ち";
                    case Move.MATED:           return "詰み";
                    case Move.MAX_MOVES_DRAW:  return "手数による引分";
                    case Move.INTERRUPT:       return "中断";
                    case Move.ILLEGAL:         return "非合法手反則負け";
                    case Move.TIME_UP:         return "時間切れ";
                    default:                   return "null"; // これも使わないはず..


- 対局開始のダイアログでの「対局開始」追加。
- メニューから「デモ用」の項目削除。
- 対局開始ダイアログで「人間」「コンピューター」を選択しての対局開始を実装。
	- 対局中断など実装まだ。


- Invoke()しているところ、すべてIsHandleCreatedで判定してからすることにする。
	- NotifyObjectだと通知が初期化タイミングで送られることがあるので、まだウィンドウハンドルが生成されておらず、
		BeginInvokeが不正になりかねない。


- LocalGameServerにUpdateKifuListOfTail()追加。
- 終局の「詰み」「千日手」「連続王手千日手反則勝ち」「勝ち宣言」が出力されるようになった。
- 棋譜ウィンドウの出力、「同　銀不成」となるのが不格好なのでMizarさんに修正を依頼。
- 「連続王手千日手反則勝ち」はKIF2として合法な文字列ではないと思うのでMizarさんに修正を依頼。
	- 棋譜ウィンドウへの出力文字列、KIF2の出力で不適切なものに関して、KifuManagerのほうで吸収することも
	考えられるが、なるべくならKIF2の表記に準拠しておきたいので、それはしないことにする。
	

- LocalGameServerの初期化抜けていたの修正。
- 参照のdelegateどう束縛されるのか、テスト


- 人間同士の対局においてエンジン初期化中のダイアログが一瞬出うるのを修正。
- LocalGameServerの通知モデルまわり、整理した。
- LocalGameServer、UI側から受け付けるmethodは、名前の末尾にCommandと追加。



■　2018/06/13


- Mizarさんの進捗分をマージ(#10)


- 「投」ボタン 投了の受理
- 人間プレイヤーの時だけ「投」を有効化
- Player.Dispose()追加
- UsiEngineの終了処理追加
- Player.IsInit　→　Initializingにrename
- ユーザーの投了はできるようになった。


- KifuManager.UsiPositionStringのほうにはUSIで規定されていない指し手を書き出さないように修正。
- KifuManager.Tree.AddNode(Move.RESIGN)が失敗するの修正。


- KifuManager.FromSfenString()でParseWordを呼び出していたの修正。
- Move.RESIGNをKifuManager.Tree.AddNode()に渡せるように修正。
- Move.IsOk()の定義変更。Move.NONEとSpecialMoveに対してfalseを返すようにする。
- Move.ILLEGALの綴り間違いの修正。


- Ki2の出力で、詰み、千日手などの出力処理が必要なのでkif.csに追加。
- 終局の処理
- Move.ILLEGAL追加。
- 千日手判定、入玉宣言の受理
- 両方がエンジンで対局したときにエンジン初期化中に対局がスタートするの修正。


- readme.md、実装済みの項目更新


- 待ったの処理
	- 「待」ボタン
- 自分の手番でしか効かないように
- 棋譜ウィンドウのdata bindの処理、おかしかったの修正。
- エンジン初期化中には待ったボタンを無効化する処理追加
- 待ったボタン実装完了


■　2018/06/12


- すぐ指すの実装。
	- 「急」ボタン
- コンピューターの思考中のみ「急」がenableになるように。
- エンジン初期化中は、ユーザーが駒を掴めないようにした。
- MainDialogButtonEnum追加。
- MainDialogのPaint用のハンドラで、メニュー領域に対する更新を区別していなかったのを修正。


- エンジン初期化中のダイアログ表示
- MainDialogViewModleからCanUserMoveなど少しメソッド減らす。


- MainDialogViewModel、リファクタリング。
- NotifyObjectのRaise..をpublicに変更。lockを忘れていたの修正。
- LocalGameServerで後手をGPS将棋にしてとりあえず対局できた。終局処理などはまだ。


- PlayerにCanMoveプロパティ追加。
- UI側から自分が動かせるかどうかの判定のために、このフラグを見に行くようにする。


- LocalGameServer、UsiEnginePlayer側の実装
- KifuMananager.Bind()削除
- Position.Clone()をMemberwiseClone()を用いて書き換え。
- NotifyObject、propertyの変更通知、lockが終わってから行うように修正。


- LocalGameServerのほうのKifuListから棋譜ウィンドウに反映するようにした
- LocalGameServerの処理、だいぶ実装した。


- KifuTreeの棋譜の更新部分、整理した。
- KifuTree.AddKifu()で棋譜ウィンドウにbindする形式で出力するように修正。


■　2018/06/11


- KifuManagerに棋譜ウィンドウに表示する用のKIF配列追加する。
	- List<string> KifuList
	- KifuTreeに持たせる
		- UsiのPosition文字列も必要
		- List<string> UsiList これをJoin(' ',UsiList)すればUSIプロトコルの"position"文字列ができそう。
		- UsiPositionString追加


- エンジン初期化時のダイアログ素材追加
	- "engine_init.png"


- Controller/ 削除 。Shogi.LocalServer追加。
	- LocalGameServer.cs、後者に移動。


■　2018/06/10


- CsaConnectDataをNetwork　→ Network.Csaに移動
- GameController →　Controller.LocalGameServerに移動
- Listが変更になったときにNotifyObjectで通知するの、もう少し方法を考えたほうがよさげ。
	- NotifyObjectにListの部分通知のメソッドを用意した。
	- その他、新しいNotifyObjectに準じてソースコードを修正。
- 棋譜、ウィンドウに新しいNotifyObjectのListの部分更新の仕組みで更新されるようにした。


- readme.mdにレーティング計測の協力をしていただいたuuunuuunさんのこと追記。


- UsiEngine.HandleBestMove()少し書いた
	- 続きは、GameServerみたいなクラス書いてから。


- ProcessNegotiatorDataにIsLowPriority追加
- UsiEngineのusinewgameのときにプロセス優先度を下げる処理追加
- USIコマンドのusiok,readyok,idのハンドラ書いた。
- ProcessNegotiatorDataでworking_dirが省略されたときに実行ファイルと同じフォルダをworking directoryとするようにした。



■　2018/06/09


- いますぐ指す　の tooltipが いまずく指す　になっていたの修正(whitebellさん)


- LogInfoTypeにUsiServer追加。
- UsiEngine.ChangeState()追加
- UsiEngineState.ToString()追加。
- エンジンが見つからない時の例外を処理するようにした。


- ScannerException.cs削除
- Model.Utility.Log追加
	- Log.cs追加。
- UsiEngineの初期化まわり修正。


- Scannerの仕様変更に伴い、setoptionのparser修正。


- Scanner、正規表現を使うの生成が重いような気がするので、全面的に書き直す。
- sfenの読み込み部も、これを使って書き直す。
	- KifuManager.FromSfenString()を書き直した。少し読みやすくなった。
		- 動作は未確認。まあ、あとでええやろ。


- UsiEngineNegotiatorをProcessNegotiatorリネームしてCommon.Networkに移動
	- Common.Processにしとこう。


- RemoteSerivceのWrite書く。
	- 書けた。エンジンに対してうまく送信できた。


- RemoteServiceのReadなんとなく書けた。子プロセスからRead()できるようになった。



■　2018/06/08


- Model.Common.Network/RemoteService.cs追加


- UsiConnectionData.cs →リネーム UsiEngineData.cs
- UsiEngineNegotiator、少し書いた
	- いまひとつ..


- 駒の移動元、移動先のシャドウ追加
	- piece_shadow_v1.png
	- あまり思っている感じではなかったのでコードを無効にする。


- 細長い駒台用のネームプレートと手番素材追加
	- turn_v1_1057_157.png
	- DrawStringに右寄せ描画追加
	- DrawStringで文字色の指定ができるようにした


- 手番素材修正
	- turn_v1_106_43.png
	- メニューで表示のオン/オフ追加


■　2018/06/07


- 手番素材追加。
	- image/turn_v1_158_54.png
	- ImageManagerなどこの素材の読み込みに対応。


- 「マイナビ」という表記を「マイナビ出版」に変更。


- オープンソース版のaboutダイアログにMyShogiのロゴ画像追加。
	- html修正。



■　2018/06/06


- UsiOptionMin.cs追加
- UsiTimeData.cs追加
- Position.clone()をClone()にリネーム


- UsiOption.Parse()など実装
- Shogi.TimeMan.cs移動。Shogi.Playerへ移動
- Shogi.Model.MathとShogi.Model.ObjectModelをShogi.Model.Commonに移動。
- Shogi.Model.Common.Utility追加。
	- Scanner.cs追加
	- ScannerException.cs追加
	- Scannerを用いてKifuManagerのsfen解析部を少し書いてみるか？
	- Scannerを使うほどでなさそう。とりまUSIのoption解析に使おう。
- UsiOption.Parse()書けた。
	※　WhaleWatcherライブラリを参考にさせてもらいました。


- 名前空間変更。USIエンジンとPlayerを抽象化したものは、以下のnamespaceに移動。
	- Model.Shogi.Player
	- Model.Shogi.Usi
		- UsiException.cs追加
		- UsiOption.cs追加
			- 書きかけ。よく考える。
		- UsiOptionType.cs追加
		- UsiEngineException.cs追加


■　2018/06/05


- 対局コントローラーみたいなのが必要。
- 先にエンジンとのやりとりをする部分を作る。
	- Model.Shogi.Engine
		- EngineNegotiator.cs追加
		- PlayerType.cs追加
		- Player.cs追加
		- HumanPlayer.cs追加
		- UsiEnginePlayer.cs追加
		- UsiConnectionData.cs追加
		- UsiState.cs追加
	- engine、やりとりまわりだけであと1万行ぐらい書かないといけない模様。吐きそう。


- 連続王手の千日手を回避していないダイアログ
	- ダイアログやめて、即座に負け扱いで終局したほうがいいのでは…。
	- なら、これはこれでいいや。指し手の処理まわりを実装すれば自然に解決するだろう。

- Object間の更新通知の仕組み作る
- ちゃんとDataBindの仕組みを使って書かないと変なバグ産みそう..
	仕方ないのでちゃんとやるか…。
                // ここをUIスレッド以外で行うためにViewに対して
                // Invalidate()する必要がある。
                // あとで考える
                // TODO : これあとでちゃんとメッセージングを使って書き直す
- NotifyObjectでのイベントハンドラ、変更されたobjectを受け取れるようにしよう..
	- 修正した。少し使いやすくなった。
- Positionのclone()実装する。
- GameControllerのコード、これいまやっていると時間もったいないので、マルチスクリーンまわりの作業はいったん保留。削除。


- Fontのサイズをfloatで指定するように変更。
- 棋譜ウィンドウのScrollbarの計算、修正。
- 駒を掴んだときにマウスカーソルにへばりつくモード
	- これやめとこう。



■　2018/06/04


- MainDialog、GameSettingDialogのAutoScaleModeをdpiに変更。
- 成り・不成のダイアログ、一段目付近の場合、画面外に出ていたの修正。
	- 棋譜ウィンドウに重なるように出ていたのも修正。


- readme.mdの作業状況、更新

- エンジンダイアログの作業開始
	- パッケージ用の画面写真のためにとりま、何か作らねばならない。
		// 段位選択
		将棋神
		九段
		八段
		七段
		六段
		五段
		四段
		三段
		二段
		初段
	- ImageLoader.CreateAndCopy()追加。
	- GameSettingDialog追加。
	- とりま、なんか出来た。

- 棋譜ウィンドウ、最小化しているときにフォントサイズがマイナスになって落ちるの修正。


- 移動できない升を示すエフェクト、重すぎ。
	- 移動できる升のみ光らせるぐらいのほうが良いのでは…。
	- 光らせる設定もメニューに追加した。
	- 升の塗りつぶしエフェクト、ダサすぎなのでデザインお願いしたほうが良いのでは…。
	

- 成り・不成のダイアログに描画されている駒のセンタリング
	- SpriteManagerのほう修正した。
- 棋譜ウィンドウの表示、消費時刻のインデント狂っていたの修正。
	- BorderStyleがFixed3Dになっていたの修正。
	- 棋譜ウィンドウの先頭に開始局面と入れた。
	- 棋譜ウィンドウのpadding修正。
	- 棋譜ウインドウ、スクロールバーを出したときにそれを計算に入れて文字を縮小する。


- 棋譜ウィンドウをListBoxに変更。
- 棋譜ウインドウの文字描画、WebBrowserを用いると環境ごとの差異をゼロに出来ない。
	また思っているフォントサイズにならない。ブラウザの文字のレンダリング、いい加減すぎ。
	これはもっとノウハウがないと無理ぽ。
	- とても残念だが、仕方ないので、棋譜ウインドウを.NET FrameworkのListBoxに変更する。


- Mizarさんの作業分をマージ(#7 , #8)


- KifuManager
	- KifuManagerのCSA形式の読み込みのサポート
	- KifuManagerのKIF形式のサポート
	- KifuManagerのKI2形式のサポート
		- Mizarさんに依頼中


- Kif.csのKIFがsingletonになっていなかったの修正。
- CSA.csのコメントがkifになっていたの修正。


- 棋譜ウインドウへの出力
	- とりま棋譜が表示されるようになった。
	- 文字サイズが環境によって異なる＆リサイズがうまく出来てない。


- Mizarさんの作業分をマージ(#6)


- 先手の成り駒の位置、微調整。
	- ImageConverter修正。


- 成り・不成のダイアログのhoverの処理追加
	- SpriteManager.PromoteDialog、定数を外に出した。
	- SpriteManager.IsHoverPromoteDialog()追加した。
	- 成り・不成のダイアログの選択ハンドラを書いた。
		- 駒が動かせるようになった。
	- 成り・不成の行き先の升、最終手の升のエフェクトが優先されているの修正。
	- Position.IsLegal()で打ちと成りの共存する指し手がlegalに判定されていたの修正。
	(普通、指し手生成ではこの指し手を生成しないので関係ないが、成り・不成のダイアログの処理で困る)


- 成り・不成のダイアログ追加。
	- "promote_dialog.png"
		- width = (103+102)*2 = 410 , height = 124+39 = 163
	- ImageManagerにPromoteDialogImage追加。
	- SpriteManagerにPromoteDialog()追加。
	- SpriteにdstOffset追加
	- GameScreenDrawのほうのDrawSpriteにdstOffsetの計算追加
	- とりま、ダイアログ自体は描画されるようになった。
	- どれがクリックされたのか判定難しい。
		- ダイアログをSpriteで描画しているので転送元スプライトを求めるためにはマウス座標から逆変換がまた必要になって…。


■　2018/06/03


- 駒をデバッグ用に実際に移動させる処理を書く
	- Util.MakeMove(SquareHand,SquareHand , bool promote)追加
	- とりま、駒がユーザー操作で移動できるようになった。


- ドラッグによる駒の移動実装


- Position.PieceOn(SquareHand)追加。
	- これがないと駒打ちと駒移動を同一の枠組みで処理できない。
- SquareHand.IsDrop()追加
- 掴んでいる自駒を再度クリックしたとき、掴んでいたのをキャンセルする動作にする。
- GameScreen.move_piece()用意。ユーザーが駒の移動を示したときにうまくこのハンドラが呼び出されるところまで確認。


- MainDialog.ScreenRedraw()でnull判定追加。
	- MainDialogのコンストラクタのInitializeComponent()の最中にresizeイベントが
		発生しうることをうっかりしていた。


- Position: 10枚以上の持駒を受け入れる (#5 Mizarさんより)


- 手駒を打つときの重ね合わせ表示がおかしかったの修正。
	- picked_up_spriteの処理、統合。
	- 駒台の手駒を掴んだ時に掴んだ升のエフェクト処理を追加。

- 王手を回避していない警告ダイアログ
	- これ、使うのやめる。自殺手とダイアログを分けるの結構難しい気がする。
		すでに合法手のみになっているので、余計なことしないでおこう…。


- 駒台の駒を打つ為に掴む処理
	- 駒台の駒をつかめるようになった。
	- 手番側の駒しかつかめないようにした。


- 升のエフェクトのenumを用意
- GlobalConfig.PickedMoveToColorType追加
- MainDialogのメニューに駒を掴んだときの移動先の升のエフェクトを変更できるようにした。
	- 移動できない升を暗くする
	- 盤上の駒を掴むところまで出来た。


- マウスクリックに対して駒を持ち上げている感じになった。


- MainDialogからGameScreen分離
	- だいぶ綺麗に分離した。(分離できた)


- MainDialogViewState.cs追加。
	- ユーザーの操作に対して状態管理を行う必要があるので。
	- MainDialog.csもWin2D/MainDialog配下に移動
	- MainDialogViewState.cs追加
	- MainDialogViewInstanceにMainDialogViewState追加。


- MainDialogで複数対局画面を描画するときに必要なものを分離
- ObjectModel/Util.cs削除
- Model/Math作成。
	- AffineMatrix.cs追加。
	- Vector2D.cs追加
- System.Mathを参照していたところ修正。
- MainDialog.KifuControlをMainDialogのViewInstanceに移動。


■　2018/06/02


- MainDialogのコード整理
	- width,heightはSizeを使って書き換える。
	- Piece.Inverse()追加
- BoardReverse、やはりGlobalConfigにも用意する。Viewの個別設定は別途必要。
- SquareHandにToSquareHand()追加。


- 指し手の選択機能をMainDialogに追加する作業開始
	- MainDialogViewModelにCanMoveなど追加。
		- MainDialogのClickハンドラでこのpropertyを見に行くように
	- MainDialogにAffine()の逆変換であるInverseAffine()追加
	- MainDialogにマウスハンドラ追加
		- ドラッグ、クリックを自前で判定
	- Model.Shogi.CoreにSquareHand追加。
	- BoardReverseをMainDialogViewModelに移動


- aboutダイアログのhtmlで文字フォントを指定した。
	- これで、複数の環境でうまく表示できることを確認。
	

■　2018/06/01


- aboutダイアログのhtml、centeringなど。
	- もう少し調整が必要な模様…。


- readme.mdに最新の作業状況などを反映。


- aboutダイアログのhtml修正。
	- WebBrowserの問題、pxで指定していたのがいけなかったのか。(Mizarさん、サンクス)


- マーカー用に黒の成り駒を用意する。
	- ImageConverter修正。
	- 駒画像、heightを424から636に変更。
	- ImageManager修正。
	- SpriteManager修正。
	- GlobalConfigにPromotePieceColorType追加


- 縦長の駒台画像差し替え。
	- それに伴う手駒の描画座標修正


- 駒の移動方向が図示してある画像の処理
	- 連結スプライト用意するか…。
		- した。
	- "piece_atk_v1_776_424.png"
	- 成り駒とマーカーが混じると見にくい…対策考え中。


- 棋譜ウインドウのリサイズハンドラ追加
- MainDialogにaffine(Size)追加。


- 棋譜ウィンドウ、MainDialogに埋め込んだほうがいいかもな。よく考える。
	- 棋譜ウィンドウ、WindForm.Controlに変更
	- Control.DesignModeがうまく取れない。吐きそう…。
	- 解決した : https://stackoverflow.com/questions/4498478/designmode-in-subcontrols-is-not-set-correctly
	- とりま、棋譜ウィンドウをMainDialogに埋め込んでおいた。あとでもうちょっとなんとかする。
- MainDialogからaffine変換する部分をMainDialogDraw.csに移動
- MainDialogにaffine(Point)追加。


- html/をgitの管理下に移動。


- 棋譜ウィンドウの実装開始
	- WebBrowserを抽象化したクラスを用意するか？
	- navigateとInvokeしかないからしなくてもいいかな…。
	- とりあえずKifuDialog途中まで書けた。
	- このデザインよく考えたほうが良さそう。
- MainDialogのDrawString、dpiに非依存に変更する。
- htmlの配置場所、text/やめて、html/に変更する。


- dpi awareに変更する
	- cf . Windows Formsアプリケーションの高DPI対応  https://qiita.com/felis_silv/items/efee4b1a397b0b95100a
	- AboutDialogも修正。うまく動いたのでこれで良し。
- 良く考えた末に、Window.Controlのなかで使うWebBrowser、dpi awareになられると困るという結論になった。
		- 外側のControlがdpi awareで、自動的に拡大されてて、それに応じた座標系を使って、窓を作ってそこに
		WebBrowserを配置しているのに、そのなかが勝手に違う座標系で描画されるのがおかしくなる原因。
		- WebBrowserのhigh dpi対応
			- https://social.msdn.microsoft.com/Forums/vstudio/en-US/cea332e5-071d-4db5-bee5-1c3342644e70/webbrowser-control-high-dpi-support?forum=winforms

- 縦長の駒台、もうちょっと上まで素材が必要。修正依頼。
- NotifyObject、値型の比較するところ、間違っていたの修正。
	- NotifyObject.Util.GenericEquals()追加。
- 駒台とネームプレートの素材を分離
	- ImageManager修正。
	- GlobalConfig.KomadaiImageVersion追加
- 駒の移動方向の素材発注
- WebBrowser、high dpi対応、ムズすぎワロタ


■　2018/05/31


- MainDialogで描画している画像、すべてSprite化する。
- ImageLoaderにSetNullBitmap()追加。
- MainDialogのDrawImage()廃止。描画手段はDrawSprite()とDrawString()だけに限定した。


- Spriteクラス追加。
- SpriteManager追加
- MainDialogをSpriteを用いて描画を抽象化
- ImageManagerのプロパティ名の～Img、ここだけ省略形なの気持ちわるいので～Imageに変更。


- MainDialogのコード、機能別にファイルを分離
	- View/Win2D/MainDialog/ 追加
		- MainDialogEventHandler.cs追加
		- MainDialogFitToScreen.cs追加
		- MainDialogMenu,cs追加


- readme.mdに特徴など追加


- 着手後の移動元の升のエフェクトを追加。(デフォルトでは、なし)
	- メニューで選択できるようにした。
	- GlobalConfigにLastMoveFromColorType追加。


- 升のエフェクト、駒の画像と分離する。
	- ImageLoaderにSetBitmap()追加
	- ImageManager内で生成するコード追加。
	- Graphics.DrawImage()で生成していたの間違いなのでSetPixel()使うように修正。
- 移動先の升のエフェクト、なしを選択できるようにする。


- "setting.xml"名前かぶりかねないので"MyShogi.setting.xml"に変更する


- 小さすぎるフォントの文字を描画しないように。
- MainDialogの横幅、一定以上に縮められないようにするコード追加。
	- 一定以上にも広げられないコード追加
	- →　あかん、これハングする。.NET FrameworkのClientSize、setterの処理おかしい気がする。


- MainDialogにToolStrip追加する。
	- とりあえず「転」ボタンだけハンドラ用意した。
- メニューに「対局」を追加する
	- 中身はまだ何も。
- 商用版、GlobalConfigにCommercialVersionのプロパティを用意することに変更。
	- 商用版の判定、間違っていたの修正。


■　2018/05/30


- メニューに「その他」を追加
	- aboutダイアログ追加
	- "YaneuraOuGUI2018.txt"の置き場をtext/に変更
	- "global_config.xml"のファイル名を"settings.xml"に変更


- ImageConverterの元画像のフォルダ変更する。


- 最終手の表示、色が変更できると良いのか…。
	- 誰得なんだ、この機能。
	- GlobalConfig.LastMoveColorType追加
	- これに伴いImageManager修正


- progress.md削除
	こんなん要らんやろ…。

	# 作業状況

	## Model/Shogi/Core

	- Bitboardをやねうら王から移植 →　完了
	- Bitboardで利きの実装　→　完了
	- GenMoveで全合法手の生成　→　完了
	- Positionクラスの実装、DoMove(),UndoMove() →　完了

	## Model/Shogi/Kifu

	- 棋譜の読み書き PSN,PSN2形式完了
		- CSA,KIF,KI2形式まだ
	- KifuManager、おおよそ完成

	## View

	- MainDialog →　対局盤面表示できるようになった(段・筋の数字と手駒はまだ)
		- メニュー色々、追加中。
		- 盤面反転　→　完了
		- 駒の画像選択　→　完了
		- 盤の画像選択　→　完了
		- 畳の画像選択　→　完了

	## App

	- GlobalConfig →　全体設定の読み込み、自動保存のコード書けた。


- readme.md、予定のところに局面の画像出力機能など追記。


- 最終手の移動先の升を朱色にする
	- ImageConverter修正。
	- Piece.WHITEのところの画像にその朱色のイメージを入れる
	- MainDialog、修正。


- 畳と盤面画像を分離する
	- ImageLoaderでRGBに読み込む機能不要なのでは…。削除する。
	- 代わりに、imageを合成する機能を用意する。
- ImageManager、Load修正。
	- エラー処理、削除。(ファイルが存在しないときは赤い「×」が設定されるので)
- GlobalConfigからScreenRatio削除
- GlobalConfigにTatamiImageVersion追加
- MainDialogのメニューに畳の選択追加など


- 成り駒は赤い駒に変更する
	- ImageConverter修正。


- 対局盤面、対局者氏名が描画されるように。
- 手駒の枚数画像、わかりにくかったので差し替え。
	- いい感じになった。
- board画像、対局者氏名のところ窓枠修正。
- MainDialogの定数をMainDialogConst.csに分離


- 画像の読み込みに失敗したときに、赤で「×」の画像を生成して、それを表示することにする。


- 盤面の描画位置、メニュー高さ分だけずれていたの修正。


- フルスクリーン時の処理、専用で何か追加したほうが良いのでは…。
	- フルスクリーン時にwindow captionを消す処理を追加
	- 簡単ではなさげなのでやめる。
- 駒の枚数の数字、縮小されたときに見にくいので修正依頼。


- ウィンドウのリサイズが出来るように変更する。
	- affine変換の係数おかしかったので修正した。


■　2018/05/29


- 背景、alpha channelありのbitmapに読み込むの無駄なのでalphaなしのBitmapにcloneするようにした。


- Mizarさんのプルリクをmerge (#4)
	* KI2: 盤上で着手可能な駒が無ければ駒打ちと解釈する
	* CSA: "P+00AL", "P-00AL" の実装
	* KifuManager: wip
	* EastAsianWidth


- ImageConverter、成り駒の位置調整、忘れていたの修正。


- 手駒の右肩に表示する駒の枚数を示す数字画像追加
	- 読み込みに対応
- MainDialogの駒台の駒の描画
	- 反転表示に対応
	- 駒が2枚以上のときは右肩に数字表示をするように
- MainDialogの駒台の画像を大きめに変更


- Menuに盤の数字を描画する/しないを追加した。
- ImageConverterにConvertBoardNumberImage()追加。
- GlobalConfigにBoardNumberImageVersion追加。
- GlobalConfigにBoardReverse追加。
	- 関連するハンドラ追加
	- MainDialogに反映するように。
- メニューの表示のところに「盤面反転」追加。
- MainDialogの盤上の駒に盤面反転が反映するようにした。


■  2018/05/28


- MainDialogの描画のところ、抽象化した。


- 駒素材、ずれ修正。
	- ImageConverter、すべての駒素材を一括変換するように修正。
	- 駒素材のNO_PIECEのところにα30%の黒入れる。(明度を落とすのに使えるかも。あるいは位置の確認に使えるかも)
	- 読み込む駒画像の横幅776pxに変更


- Menuにデバッグ用の項目追加。
	- リリースのときに消す
		- DEBUGビルドのときだけ追加されるようにした。
	- TestForm削除。


- progress.md更新


- MainDialogのイベント、少し整理。


- NotifyObject、修正。
	- DependOn削除。
	- 大幅に簡略化
- ObserverObject追加。
- この通知モデルを用いてGlobalConfig書き直す。
	- MainDialog書き直した。
- ImageManager、盤の読み込みと駒の読み込みを分離。
- ImageManagerConfig削除


- メニューに盤面画像の選択と駒画像の選択部を追加。イベントハンドラも追加。


- ImageConverterで駒ごとの位置微調整を行うコード追加。


- Menuを追加したときのダイアログ高さの計算コード追加。


- 駒画像のコンバーター、後手の角と飛車の位置が入れ替わっていたの修正。


- App/GlobalConfig.cs追加。起動時にglobal_config.xmlを読み込み、アプリ終了時に書き出すコード追加。


- MainDialogに素材選択のメニュー追加。
	少しだけコード書いた。あとでよく考える。


- Positionの盤面に従い、MainDialogの盤上の升に駒を描画するコード追加。手駒はまだ。


- MainDialogにやねうら王のアイコン設定


- 実行ファイルの配置してあるフォルダに
	YaneuraOuGUI2018.txt
	というファイルが存在すると、商用版の「やねうら王」用のモードに切り替わるように。


- MainDialogにスクリーンサイズにfitするようなウィンドウサイズを決定するコードを追加。


- 駒の画像用意。
	- ImageManagerに駒画像から駒を一纏めにするConvert()追加。
	- 駒素材、用意できた。


- 盤面の表示
	- とりあえず、PictureBoxにdpi無視で表示は出来るようになった。
	- MainDialogに、ウィンドゥのサイズを自動調整するコードを書いた。



■  2018/05/27


- Model/Resource/追加
	- ImageLoader.cs追加。
	- ImageManager.cs追加。
	- ImageManagerConfig.cs追加。
	- 盤面と駒の読み込み部分、とりあえず書いた。

- readme.mdの予定として感想戦、指定局面からの連続自己対局などを追加。

- NotifyObject、方針が決まった。(あとで作る)


■  2018/05/25


- NotifyObject作りかけ。(あとで消すかも)


- KifuMoveからcomment削除
- KifuCommentをKifuLogにrename
- KifuNodeにcomment追加。


- KifuMoveにコメント欄、着手時刻、思考ログのpropertyを用意。
	- KifuCommentクラスから派生させることにした。
- Model/Shogi/Kifu/KifuComment.cs追加。
- KifuTreeにrootComment追加。


■  2018/05/24


- readme.mdの将来的な予定に「即席詰将棋機能、中盤終盤課題局面生成機能」の追加


-  Parse CSA/KIF pos/move, Export CSA/KIF fix (Mizarさん)
-  Convert CSA/KIF test (Mizarさん)


- ViewModelからViewへのNotifyの仕組み考える。
- Model/ObjectModel/フォルダ追加
	- NotifyObject.cs追加
	- 作成中

- 画面素材など動的に読み込むなら、リソースを管理するリソースマネージャーみたいなのが必要なのでは…。
	- それはViewが持つことになるのか？本当にその設計は正しいのだろうか…。
	- ResourceManager.cs、一体どこに置けばいいのか…。

- Controller/ フォルダ追加
	- この設計が適切であるかどうか考え中。
- 対局を管理するクラス GameController.cs追加

- MainDialog <-> MainDialogViewModelを1:Nにするか考え中。

            // 1画面に盤面が複数表示できたほうが良いので(2画面、4画面、16画面、あるいは選択、みたいな)
            // mainDialogViewModelのインスタンス自体は1つではなくN個用意して、そのなかから1つ、もしくは2,4,16個を
            // 切り替えて表示できるようにしたほうがいいような気がする。            
            // mainDialog.bind(mainDialogViewModel);

	- MainDialogとMainDialogViewModelは 1:1にしておき、MainDialogViewModelのなかに1:Nでさらに対局関連の情報をもたせるべきでは..



- KifuManager.Bind(Position)追加
	- KifuTree.Bind(Position)追加
	- KifuTreeがPositionのインスタンスを生成するのおかしいので、Bind()して使うように変更する。
- 描画に関して、MVVM with Controlみたいな設計にすることに決定。
- Form1をTestForm1とrename
- View/Win2D/MainDialog追加
- ViewModel/MainDialogViewModel.cs追加
- App/TheApp.cs追加


- KifuTreeからToUsiPositionString()削除。
	- これ、あとでよく考える。


- ViewModeフォルダ追加
- Appフォルダ追加
	- Program.csをApp/に移動
- Form1をView/TestFormに移動



■  2018/05/23


- KifuManagerにそこまでのUSIの"position"コマンドで用いる局面図を保持しておく機能を追加。
	- ToUsiPosition()
	- この設計、良くないかも。あとでよく考える。
- KifuManagerからKifuTreeに、rootBoardTypeとrootSfenを移動させた。


■  2018/05/22


- readme.mdに本GUIの特徴などを追加


- readme.md リンクが一箇所前のままだったの修正。
	- 対応エンジンなどについて追記


- Positionクラスに、盤面配列と手駒などを渡してsfen文字列を構築するメソッド追加
	- // 盤面と手駒、手番を与えて、そのsfenを返す。
    -  public string SfenFromRawdata(Piece[/*81*/] board, Hand[/*2*/] hands, Color turn, int gamePly)
	- やねうら王から移植
	- テスト書いた。うまく動いてそう。


- KifuManager
	- KifuManagerのCSA形式の読み込みのサポート
	- KifuManager.FromCsaString()作業開始
- Position.gamePly、自動プロパティに変更。
- Position.lastPieceNo、getはpublicに変更。


- readme.mdに形勢グラフの件、追記
- docs/progress.md追加
- docs/ を MyShogi/docs/に移動


- KifuTreeのply削除。
	- Position.GamePly追加
- KifuFileTypeにPSN2追加。
- KifuManagerでPSN2フォーマットの読み書きに対応
- KifuManagerでPSNフォーマットの"Timeup"に対応


- PSN2 formatを策定


- readme.mdに商用版について紹介文追加


- KifuTreeにply追加。
- KifuManager
	- PSN形式の書き出しに対応
	- 分岐棋譜に対応
	- 持将棋、詰み、中断、千日手の棋譜に対して簡単な棋譜を読み込んで書き出すテスト完了
- Position.IsCapture(Move)追加。


- KifuManager
	- PSN形式の読み込み、コメントブロック、空行のスキップ処理
	- PSN形式の読み込み、分岐棋譜のサポート


- readme.md更新
	- 商用版で実装する予定のこと書いた


- Positionに入玉判定のmethod追加。DeclarationWin()
- EnteringKingRule.cs追加
- Position.Piece(Color,Piece,...)追加


■  2018/05/21


- KifuManagerのPSN形式サポート
	- 読み込み部、詰みの局面に対応。
	- PSN形式のヘッダ部の解釈、きちんとやることにした。
- Position.IsMated()追加
- PSNフォーマットのサイトを見ると千日手とか宣言勝ちについて規定がない。どう見ても欠陥フォーマットである。
	 http://genedavis.com/articles/2014/05/09/psn/
	- 将棋所の出力するPSN形式が読めればいいや…。
	- 詰み、持将棋、中断の解釈に対応。
	- 分岐棋譜、意外と大変…。対応するか考え中。


- KifuManagerのPSN形式サポート
	- 局面図の読み込み実装
	- 千日手勝ちの局面を正しく読み込めた
	- 勝ちの局面とかはまだ。あとで実装する。書き出しもまだ。あとで。
- Position.IsRepetition()で千日手が5度目の同一局面になっていたのを4度目に修正。


- Moveに、特殊な意味の定数を各種追加。千日手、中断など。
- MoveExtensionsにIsSpecial()追加
- KifuMove.nextMoveに非合法を追加した
- KifuManagerのPSN形式のサポート
	- KifuManager.FromString()にPSN形式の読み込み実装開始
	- これ、千日手負けも単に「Sennichite」としか文字列として書き出していないんだな。
	- チェスから来たからこうなっているのか…欠陥プロトコルだな。
	- 対局者名の読み込み部分まで書けた。
- TestクラスをDevTest1にリネーム
	- Mizarさん用のテストをDevTest2に移動


- Readme.mdに多言語対応、flodgate、通信対局の件、追加。


■  2018/05/20


- KifuManagerのKIF/KI2/CSA/PSN/SFENファイルの読み書きのサポート作業
	- 対応フォーマットにPSN追加
	- KifuTree.RoundTime()追加 , KifuMoveからは削除
	- KifuTree.TotalConsumptionTime()追加
	- KifuTree.Add()にtotalTimeの引数追加。
	- KifuManagerのLoad/Save()やめて、ToString,FromString()に変更。
	- KifuTree.Init()追加
	- KifuManger.FromSfenString()追加
	- KifuTree.RewindToRoot(),FastForward()追加
	- KifuManager , SFENの読み書き、動作確認完了
- BoardTypeにOthers追加
- Mizarさん用のテストコードをTest.Test4()に移動。


- USI2.0.md追加 , readme.mdに追記


- readme.mdに実装予定の内容を追記。



■  2018/05/19


- Mizarさんのプルリクをマージ
	- Shogi.Converter: add export CSA, fix export KIF/KI2
	- Conv to CSA/KIF/KI2 test


■  2018/05/18


- KifuMoveに考慮時間、TimeSpan追加する。
- KifuTreeにAdd(),Remove()追加。


- KifuTree.cs作成
- KifuNode.cs作成
- KifuMove.cs作成
- KifuTreeにDoMove(),UndoMove()実装
	- もう少し色々メソッドを生やせば使えるようになりそう。


- Position.UndoMove()で戻したときの駒落ちのときのhash keyおかしい。あとで原因調べる。
	- UndoMove()でkingSquare更新していたの削除
	- Position.SetState(StateInfo)復活
	- 以前のバージョンとkeyが一致した
- Position.UndoMove()でcaptureとdrop、promoteがきちんとundoされるかを調べる
	- ちゃんとundoされてた。


- PlayerManagerをKifuManagerにリネーム
- Model/Shogi/IO/ を Model/Shogi/Kifu/ にリネーム
- Model/Shogi/Kifu/のなかに
	- KifuFileType.cs
	- KifuManager.cs
	- KifuMove.cs
	を追加


- Model/Shogi/Converter/Kif.cs実装 (Mizarさん) #1



■  2018/05/17


- Bitboard.IsOne()追加


- Position::UndoMove()の実装
- StateInfo.capturedPiece追加
- PieceNo.ZEROをNONEに修正。


- readme.mdに実装予定の機能を追記
- Position.IsRepetition()をpublicに変更
	- Position.IsRepetition()のテスト完了
		- 千日手、引き分け
		- 連続王手の千日手


- Position::千日手判定の実装。
	- 連続王手千日手を非合法手にしないと…。
	- 王手の指し手とか、指してから「王手を回避していません」と表示されないと、「なんで駒つかめないの？」とかなりそう…。
	- Positionのなかでやるべきではないな。Positionでは千日手のチェックだけ出来ればいいや。
- RepetitionState.cs追加
- HASH_KEYにoperator == と !=を追加
	- HASH_KEYをHashKey.csに分離
- 千日手実装できた。テストはまだ。


- StateInfo.Keyをkeyにリネーム。
- StateInfo.lastMove追加。
	- この変数にPosition.DoMove()で反映するようにした。
	- 初期化するコードも追加。
- StateInfo.continuousCheck[]をDoMove()で更新するようにした。
- StateInfo.checkersBBをDoMove()で更新するようにした。
	- SetSfen()でも更新されるようにした。
	- やねうら王のほう、Position::Set()でcontinuousCheck更新してなくて、
		初期局面で王手がかかっていると連続王手の千日手判定に間違うような気がしてきた。まあそんな局面を開始局面として与えないのでいいや…。
	


■  2018/05/16


- docs/解説.txt 追加
- Positionに駒落ちかそうでないかを表現するフラグが必要
	- そもそも棋譜の管理クラスが必要
	- Model/Shogi/IO/追加
		- PlayManager.cs追加
		    /// 1局の対局棋譜を全般的に管理するクラス
			/// ・分岐棋譜をサポート
			/// ・着手時間をサポート
			/// ・対局相手の名前をサポート
			/// ・CSA/KIF/KI2/PSN形式での入出力をサポート
			/// ・千日手の管理、検出をサポート
		- となる予定..(あとで考える)


- PositionにToCsa()なども必要。同じくスタブだけ用意するか。


- PositionにToKif()などが必要
	- Positionに生やすとソースコードがくちゃくちゃになるな…
	- Model/Converter/Kif.csとかに書くか..
		- とりま、スタブだけ用意した。
		- Kif.cs
			- string ToKif(this Position pos)
			- string ToKif(this Position pos , Move move)


- MoveGenのテスト通った
	 - プロ棋譜 3万局に対して生成された合法手しか指されていないことは確認した
	 - MoveGenで生成された指し手に無駄な指し手が生成されていないことは確かめていないが


- 指し手生成書く(指し手生成、legalの判定があれば不要ではあるが…。駒の動かせる場所のガイドを表示したいので作っておく)
- MoveGen.cs追加
- Position.SideToMove()追加
- MoveGen、一応書けた。
	- テストがうまく通らん。あとでデバッグする。


- Model.Shogiをcore/ (Model.Shogi.Core)に移動
- Test.csをtest/ (Model/Test) に移動


■  2018/05/15


- Sfenの読み込みテスト 3万局。
	- すべてIsLegal()をパスするかのテスト
	- perftしたほうがいいかも知れん..
	- とりま、"records20151115.sfen"を読み込むテスト
	- Test.Test2()を追加。
	- "records20151115.sfen"のすべての指し手、IsLegal()でtrueであった。
	- Position.UsiPositionCmd()うまく動いてるっぽい。
- Position.UsiPositionCmd()で、非合法手が混じっていたときに、何手目が非合法であるかを例外のメッセージとして入れることに。
- Position.DoMove()でgamePly++するようにした。
- Position.IsLegal()で歩の移動のときにIsLegalDrop()呼び出していたの修正。
- Position.DoMove()で駒を取ったときにRemovePiece()していなかったの修正。


- 王手回避手になっているかをIsLegal()でチェックするように
	- 駒打ち、駒の移動に関してIsLegal実装完了
- Direct.Util.IsAligned()追加
- Position.SetState()削除


- Bitboard.Not()削除
- Position.Legal()に玉の移動による自殺チェック追加


- Position.LegalPawnDrop()のコード実装。
- Position.LegalDrop()追加。
- Position.IsLegal()で打ち歩、二歩の判定追加。
- Bitboard operator == と != 追加
- UInt128にoperator == と != 追加
- Bitboard.Not()追加。
- Bitboard.GetHashCode(),GetHashCode.Equals()追加。


- Position.UpdateBitboard()追加。
- Position.Pieces(...)いろいろ追加。
- Position.DoMove()でCheckers等の更新。
- Position.SliderBlockers()実装
- Bitboard.LineBB()追加
	- テーブルの初期化追加
- enumにextension methodでToInt()生やすの今ひとつな気がしてきた…まあいいか…。


- Position.AttackersTo()一式追加
- Position.AttackersToPawn()追加。
- Position.Pieces(Color c, Piece pr)追加
- Position.Checkers()実装
- StateInfo.blockersForKing[]追加
- StateInfo.checkSquares[]追加
- StateInfo.pinnersForKing[]追加


■　2018/05/14


- Bitboard.MoreThanOne()追加。
- Bitboard.BetweenBB()追加。
	- 初期化コードをBitboard.Init()に追加
	- Between()うまく動いた
- Direct.cs追加
	- Directions enum追加
	- Direct enum追加
	- directions_of()追加


- Positionの駒に駒番号振る
	- 駒台の駒も一意に定まらなければならないので、BonaPieceのような番号が必要なのでは…。
	- PieceNo.cs追加
- SetSfen() , DoMove()でPieceNoが反映されるようにする。
- Position.PrettyPieceNo()追加
	- うまく動いているようだ…。

- Bitboard::EffectsFrom()追加
	- うまく動いた
- PieceにB_PAWN～W_QUEEN追加。
- Bitboard.EnemyField()追加。
- "case Piece Knight":となっていたの修正。
	これPiece型のKnightという変数名の変数を宣言していることになるのか…。caseのなかで変数宣言してコンパイル通るの怖すぎワロタ。
- Position::Legal() 7割ぐらい書けた


■　2018/05/13


- Position::Legal()追加準備
	- Position::InCheck()用意 , 実装まだ
	- Position::LegalPawnDrop()用意 , 実装まだ
- Positionにoccupied bitboard追加
	- Position::Pieces() , Pieces(Color) , Empties() 追加。
	- Position::Pieces()に現在の局面が反映するようにした。
- PieceにPIECE_BB_NBなど定数を追加。



- Bitboard.KingEffect()追加。
- Color.Not()追加。
- Bitboardに近接駒の利きを返すmethods追加
	- Bitboard.PawnEffect() , KnightEffect() , SilverEffect() , GoldEffect() , KingEffect()
- Bitboard.HorseEffect()追加。
	- うまく動いた
- Bitboard.DragonEffect()追加。
	- うまく動いた


- BishipEffect()うまく動いた
- Bitboard.RookEffect()追加。
- Bitboardにoperator << , >> 追加。
	- UInt128にoperator << , >> 追加。
- Bitboard.RookStepEffect()実装。
- Bitboard.LanceEffect(),LanceStepEffect()実装。
	- ForwardRanks()実装。
	- うまく動いた。


- Bitboard.init()に角の利きのテーブルを初期化するコード実装
- Bitboard.PopCount()追加。
	- BitOp.PopCount()追加。
	- 動作テストした。うまく動いてるっぽい。
- BitOp.PEXT64()追加
- Bitboard.BishopEffect()追加。
	- Bitboard.BishopStepEffect()追加。
	- BishopEffect()おかしいのでテーブル初期化コードなどを見直し中。



■　2018/05/12


- SquareWithWall.cs追加
	- テーブル初期化部をBitboard.init()に追加。
- Bitboard &(Bitboard , Square)みたいなの一式追加。
- Bitboard.init()だけでゲロ吐きそう…。角の利きの初期化前まで書いた。


- 各駒の利きをBitboardで返すメソッド追加
	- Bitboard.PawnStepEffect(),LanceStepEffect(),SilverStepEffect()等、順番に追加
		- この初期化のために飛び利きの処理が必要なのか…。
- Bitboard.Pop()実装
- BitOp.cs追加
	- LSB64()を自前で用意。
- Bitboard.Zero(),NotZero()をIsZero(),IsNotZero()とリネーム。
- 長い利きの初期化ルーチン、やねうら王から移植してくる。(1/5ぐらい完了)
	- SquareWithWallが必要になる。これも移植してくるか…。


- Bitboardをやねうら王から移植
	- Bitboard(Square)を用意
	- IninitalizerでBitboardテーブルの初期化を呼び出すようにした。
- Bitboard.Pretty()を実装
- FILE_BB , RANK_BBテーブルの初期化コード追加。
	- Bitboard.FileBB() , RankBB() , SquareBB()追加。


- UInt128.cs追加
	- UInt128を用いてHASH_KEYを再実装
- Bitboard.cs追加
	- UInt128を用いて実装 and/or/xorをとりあず用意


■　2018/05/11


- USIの"position"を解釈するコード書く。
	- UsiPositionCmd()
	- "position startpos moves 7g7f 3c3d 8h3c+"
		- やねうら王のhash keyと一致した。
	- "position sfen lnsgkgsnl/9/ppppppppp/9/9/9/PPPPPPPPP/1B5R1/LNSGKGSNL w - 1 moves 5a6b 7g7f 3a3b"
		- やねうら王のhash keyと一致した。


- Position::SetSfen()とDoMove()にHashが反映するようにした
- Position::DoMoveでPromote考慮していなかったの修正。
- Zobristの配列に直接アクセスしないように変更。


- Position.Keyは128bit型にしておく。
- Position::set_state()をやねうら王から移植
- Position::ZobristHashの値をやねうら王に合うように実装
- Position.SetSfen()のあとKey()がやねうら王のそれと同じ値になるところまで確認
- Position.ToUsi()、sfenなのか、そこまでの手順を含むのかよくわからなくて良くないな…。
	- Position.ToSfen()にリネームする。


- stringの直接的な連結、なるべく避けてString.Format()を使うようにする
- Misc.cs追加
	- PRNG追加
- Position.csにStateInfo追加
- StateInfoにHash実装
	

■　2018/05/10


- Model/BoardType.cs追加
	- LabelDescriptionのAttributeが必要。あとで考える
	- Utilに用意するか…。
	- reflection使ってattribute取得するコード、移植性に不安があるのでこれ使わないことにする。
- Position.init()をBoardTypeを指定できるようにした。二枚落ちなども指定できる。
	- 名前、InitBoard()にリネーム


- Model/Shogi/Test.cs追加
	- テスト用のコードはこちらに移動
	- UnitTestきちんと書くべきかもしれないが、やねうら王からの移植なので書くほどでもない。
- Positionクラス、参照透明にすべきか…。DoMoveで参照透明になるほうも用意したほうがいいような…。
	- あとで考える。
- Positionにref Hand Hand(Color)追加。
	- Position.PieceOn(Square)もrefを返すように変更。
	- kingSquareのrefを返すKingSquare(Color)も用意
- Position.PutPiece , RemovePieceでKingSquareを更新するようにした。
- iteration変数にrefつけるのC#7.3以降の機能だと…。ターゲットC#7.3に変更する。
	- しかし、これ思ってる機能ではないようであった…。


- Position::DoMove()実装
	- これを実装するのにLegal()を実装する必要がある。
	- そのためにさらにBitboardや利きなど一連の処理が必要。
	- とりあえずLegal()判定なしにDoMove()だけ実装する。
	- 76歩でDoMove()出来るところまでは確認出来た。
- Position.PutPiece()追加
- Flip(this Color)をFlip(ref this Color)に変更。
- Position::Pretty()追加


- Util.FromUsiMove()追加
- SfenExceptionのコンストラクタ追加
- Util.FromUsiMove()追加
	- 関連するUtil.FromUsiSquare()など追加
	- Util.FromUsiFile()
	- Util.FromUsiRank()
- Util.Pretty2(this Move)用意

- 指し手生成を書かないといけないのか…
	- これ、Search()関数を書けばC#版のやねうら王が完成するのでは…。しんどすぎ


- Position::ToUsi() , SetSfen()追加
	- Position::SetSfen()で平手の初期局面をセットして、ToUsi()でUSI文字列になることを確認した。
- Exception.cs追加。
	- SfenException追加
- Util::FromUSI()追加
- ToUSI()をToUsi()とリネーム。
- ToInt()の型、UInt32ではなくInt32に変更する。
- Model/Shogi/SfenUtil.cs削除


■　2018/05/09


- 盤面を表現するPosition.csを追加
	- とりあえず構造体だけ用意
	- Bitboardも必要なのでは…
- 間違えてPieceExtensionsにColorのFlip()を入れていたの削除


- 手駒を表現する Hand.cs追加
	- extension methodでrefを使いたい。これはC# 7.2の機能らしく、buildをC# 7.2に変更。
		- cf. C# 7.2へ言語バージョンを変更したい!!! http://it-mio.com/?p=163
	- HandのToUSI()まで実装完了


- 指し手を表現する Move.cs追加
- Model.Shogi.Utilクラスをpartialに変更。それぞれのファイルに個別に書く。
	- Util.cs削除
- 各クラスのToInt()はUInt32で統一する。


- File,RankなどにIsOk() , ToInt() , Pretty() , ToUSI()を実装する。
- Model.Shogi
	- Util.cs追加。
		- CanPromote()など追加
	- Square.cs追加
		- やねうら王を元に実装
- Rank,FileのPretty()修正。


■　2018/05/08


- Pieceまわり、extension methodで書き直す。
- Color.csを用意。
- Piece.csを用意。
	- なるべく、やねうら王に合わせる。
- Rank.cs追加
- File.cs追加
- Pretty()で日本語文字列として表示できるようにしておく。
- IsOk()で正常な範囲にあるかを判定できるようにしておく。


- Model/Network , Model/TimeMan , Model/Shogi フォルダ追加
- Model/Shogi/sfen フォルダ追加
- Model/Shogi/ShogiType.cs追加
	- ここに、駒・手番・盤面の型定義を行う。
- Model/Shogi/sfen/SfenUtil.cs追加
	- この設計が良いのかどうかについて考え中。


■　2018/05/07


- 製作開始
	- Visual Studio 2017でビルドが出来るようにする
	- C#で開発していく
	- WhaleWatcherのソースコードを参考に作っていく
		- 作者のえびふらいさんとライセンス契約
		- cf. https://github.com/ebifrier/Ragnarok
	- 素材はマイナビさんに用意してもらう

- Model/View/Utilフォルダを用意。
- CsaConnectData.cs追加。
- ざざっとModelを書いていく。Viewは後回し。
